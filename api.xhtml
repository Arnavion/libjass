<?xml version="1.0" encoding="utf-8" ?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
	<head>
		<title>libjass API Documentation</title>
		<style type="text/css">
		<![CDATA[
			html, body, .namespaces, .content {
				height: 100%;
				margin: 0;
			}

			.namespaces, .content {
				overflow-y: scroll;
			}

			.namespaces {
				float: left;
				background-color: white;
				padding: 0 20px;
				margin-right: 20px;
			}

			.content > section:not(:last-child) {
				border-bottom: 1px solid black;
			}

			.function, .constructor, .getter, .setter {
				margin-left: 30px;
				padding: 10px;
			}

			section > .function:nth-child(2n), section > .constructor:nth-child(2n) {
				background-color: rgb(221, 250, 238);
			}

			section > .function:nth-child(2n + 1), section > .constructor:nth-child(2n + 1) {
				background-color: rgb(244, 250, 221);
			}

			.name {
				font-size: x-large;
			}

			.usage {
				font-size: large;
				font-style: italic;
			}

			.constructor .function, .constructor .getter, .constructor .setter {
				background-color: rgb(250, 241, 221);
			}

			.parameter.name {
				font-size: large;
			}

			.type {
				font-style: italic;
			}

			.type:before {
				content: "Type: ";
			}

			.abstract > .name:before {
				content: "abstract ";
			}

			.private > .name:before {
				content: "private ";
			}

			.abstract.private > .name:before {
				content: "abstract private ";
			}
		]]>
		</style>
	</head>
	<body>
		<section class="namespaces">
			<h2>Namespaces</h2>
			<span class="namespace"><a href="#Dialogue">Dialogue</a></span>
			<ul class="namespace-elements">
				<li><a href="#Dialogue._toTime">_toTime</a></li>
			</ul>

			<span class="namespace"><a href="#libjass">libjass</a></span>
			<ul class="namespace-elements">
				<li><a href="#libjass.ASS">ASS</a></li>
				<li><a href="#libjass.Dialogue">Dialogue</a></li>
				<li><a href="#libjass.Style">Style</a></li>
				<li><a href="#libjass.SimpleMap">SimpleMap</a></li>
				<li><a href="#libjass.SimpleSet">SimpleSet</a></li>
			</ul>

			<span class="namespace"><a href="#libjass.parts">libjass.parts</a></span>
			<ul class="namespace-elements">
				<li><a href="#libjass.parts.Alignment">Alignment</a></li>
				<li><a href="#libjass.parts.Alpha">Alpha</a></li>
				<li><a href="#libjass.parts.Blur">Blur</a></li>
				<li><a href="#libjass.parts.Bold">Bold</a></li>
				<li><a href="#libjass.parts.Border">Border</a></li>
				<li><a href="#libjass.parts.BorderX">BorderX</a></li>
				<li><a href="#libjass.parts.BorderY">BorderY</a></li>
				<li><a href="#libjass.parts.Color">Color</a></li>
				<li><a href="#libjass.parts.ColorKaraoke">ColorKaraoke</a></li>
				<li><a href="#libjass.parts.Comment">Comment</a></li>
				<li><a href="#libjass.parts.ComplexFade">ComplexFade</a></li>
				<li><a href="#libjass.parts.DrawingBaselineOffset">DrawingBaselineOffset</a></li>
				<li><a href="#libjass.parts.DrawingInstructions">DrawingInstructions</a></li>
				<li><a href="#libjass.parts.DrawingMode">DrawingMode</a></li>
				<li><a href="#libjass.parts.Fade">Fade</a></li>
				<li><a href="#libjass.parts.FontName">FontName</a></li>
				<li><a href="#libjass.parts.FontScaleX">FontScaleX</a></li>
				<li><a href="#libjass.parts.FontScaleY">FontScaleY</a></li>
				<li><a href="#libjass.parts.FontSize">FontSize</a></li>
				<li><a href="#libjass.parts.GaussianBlur">GaussianBlur</a></li>
				<li><a href="#libjass.parts.Italic">Italic</a></li>
				<li><a href="#libjass.parts.LetterSpacing">LetterSpacing</a></li>
				<li><a href="#libjass.parts.Move">Move</a></li>
				<li><a href="#libjass.parts.OutlineAlpha">OutlineAlpha</a></li>
				<li><a href="#libjass.parts.OutlineColor">OutlineColor</a></li>
				<li><a href="#libjass.parts.OutlineKaraoke">OutlineKaraoke</a></li>
				<li><a href="#libjass.parts.PartBase">PartBase</a></li>
				<li><a href="#libjass.parts.Position">Position</a></li>
				<li><a href="#libjass.parts.PrimaryAlpha">PrimaryAlpha</a></li>
				<li><a href="#libjass.parts.PrimaryColor">PrimaryColor</a></li>
				<li><a href="#libjass.parts.RectangularClip">RectangularClip</a></li>
				<li><a href="#libjass.parts.Reset">Reset</a></li>
				<li><a href="#libjass.parts.RotateX">RotateX</a></li>
				<li><a href="#libjass.parts.RotateY">RotateY</a></li>
				<li><a href="#libjass.parts.RotateZ">RotateZ</a></li>
				<li><a href="#libjass.parts.RotationOrigin">RotationOrigin</a></li>
				<li><a href="#libjass.parts.SecondaryAlpha">SecondaryAlpha</a></li>
				<li><a href="#libjass.parts.SecondaryColor">SecondaryColor</a></li>
				<li><a href="#libjass.parts.Shadow">Shadow</a></li>
				<li><a href="#libjass.parts.ShadowAlpha">ShadowAlpha</a></li>
				<li><a href="#libjass.parts.ShadowColor">ShadowColor</a></li>
				<li><a href="#libjass.parts.ShadowX">ShadowX</a></li>
				<li><a href="#libjass.parts.ShadowY">ShadowY</a></li>
				<li><a href="#libjass.parts.SkewX">SkewX</a></li>
				<li><a href="#libjass.parts.SkewY">SkewY</a></li>
				<li><a href="#libjass.parts.StrikeThrough">StrikeThrough</a></li>
				<li><a href="#libjass.parts.SweepingColorKaraoke">SweepingColorKaraoke</a></li>
				<li><a href="#libjass.parts.Text">Text</a></li>
				<li><a href="#libjass.parts.Transform">Transform</a></li>
				<li><a href="#libjass.parts.Underline">Underline</a></li>
				<li><a href="#libjass.parts.VectorClip">VectorClip</a></li>
				<li><a href="#libjass.parts.WrappingStyle">WrappingStyle</a></li>
			</ul>

			<span class="namespace"><a href="#libjass.renderers">libjass.renderers</a></span>
			<ul class="namespace-elements">
				<li><a href="#libjass.renderers.DefaultRenderer">DefaultRenderer</a></li>
				<li><a href="#libjass.renderers.NullRenderer">NullRenderer</a></li>
				<li><a href="#libjass.renderers.RendererSettings">RendererSettings</a></li>
				<li><a href="#libjass.renderers.AnimationCollection">AnimationCollection</a></li>
				<li><a href="#libjass.renderers.SpanStyles">SpanStyles</a></li>
			</ul>

		</section>
		<div class="content">

			<section>
				<h1 id="Dialogue">Dialogue</h1>

				<section>
					<h2>Free functions</h2>
					<dl class="function private" id="Dialogue._toTime">
						<dt class="name"><a href="#Dialogue._toTime">_toTime</a></dt>
						<dd class="description">
							<p>Converts this string into the number of seconds it represents. This string must be in the form of hh:mm:ss.MMM</p>
						</dd>
						<dd class="usage">var result = _toTime(string);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">string</dt>
									<dd class="parameter type">string</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dt>Returns</dt>
						<dd class="return type">number</dd>
						<dd class="return description"></dd>
					</dl>
				</section>

			</section>
			<section>
				<h1 id="libjass">libjass</h1>

				<section>
					<h2>Classes</h2>
					<dl class="constructor" id="libjass.ASS">
						<dt class="name">class <a href="#libjass.ASS">ASS</a></dt>
						<dd class="description">
							<p>This class represents an ASS script. It contains information about the script, an array of Styles, and an array of Dialogues.</p>
						</dd>
						<dd class="usage">var ass = new ASS(rawASS);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">rawASS</dt>
									<dd class="parameter type">string</dd>
									<dd class="parameter description">The raw text of the ASS script.</dd>
								</dl>
							</dd>
						<dd class="functions">
							<dl class="function" id="libjass.ASS.scaleTo">
								<dt class="name"><a href="#libjass.ASS.scaleTo">scaleTo</a></dt>
								<dd class="description">
									<p>This method takes in the actual video height and width and prepares the scaleX and scaleY properties according to the script resolution.</p>
								</dd>
								<dd class="usage">ass.scaleTo(videoWidth, videoHeight);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">videoWidth</dt>
											<dd class="parameter type">number</dd>
											<dd class="parameter description">The width of the video, in pixels</dd>
											<dt class="parameter name">videoHeight</dt>
											<dd class="parameter type">number</dd>
											<dd class="parameter description">The height of the video, in pixels</dd>
										</dl>
									</dd>
							</dl>
						</dd>
						<dd class="properties">
							<dl class="getter" id="libjass.ASS.dialogues">
								<dt class="name"><a href="#libjass.ASS.dialogues">dialogues</a></dt>
								<dd class="description">
									<p>The dialogues in this script.</p>
								</dd>
								<dd class="usage">var result = ass.dialogues;</dd>
								<dd class="return type">!Array.&lt;!libjass.Dialogue&gt;</dd>
							</dl>
							<dl class="getter" id="libjass.ASS.resolutionX">
								<dt class="name"><a href="#libjass.ASS.resolutionX">resolutionX</a></dt>
								<dd class="description">
									<p>The horizontal script resolution.</p>
								</dd>
								<dd class="usage">var result = ass.resolutionX;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.ASS.resolutionY">
								<dt class="name"><a href="#libjass.ASS.resolutionY">resolutionY</a></dt>
								<dd class="description">
									<p>The vertical script resolution.</p>
								</dd>
								<dd class="usage">var result = ass.resolutionY;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.ASS.scaleX">
								<dt class="name"><a href="#libjass.ASS.scaleX">scaleX</a></dt>
								<dd class="description">
									<p>After calling ASS.scaleTo(), this is the multiplicative factor to scale horizontal script resolution to video resolution.</p>
								</dd>
								<dd class="usage">var result = ass.scaleX;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.ASS.scaleY">
								<dt class="name"><a href="#libjass.ASS.scaleY">scaleY</a></dt>
								<dd class="description">
									<p>After calling ASS.scaleTo(), this is the multiplicative factor to scale vertical script resolution to video resolution.</p>
								</dd>
								<dd class="usage">var result = ass.scaleY;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.ASS.styles">
								<dt class="name"><a href="#libjass.ASS.styles">styles</a></dt>
								<dd class="description">
									<p>The styles in this script.</p>
								</dd>
								<dd class="usage">var result = ass.styles;</dd>
								<dd class="return type">!Object.&lt;string, !libjass.Style&gt;</dd>
							</dl>
						</dd>
					</dl>
					<dl class="constructor" id="libjass.Dialogue">
						<dt class="name">class <a href="#libjass.Dialogue">Dialogue</a></dt>
						<dd class="description">
							<p>This class represents a dialogue in an ASS script.</p>
						</dd>
						<dd class="usage">var dialogue = new Dialogue(template, ass);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">template</dt>
									<dd class="parameter type">!Object</dd>
									<dd class="parameter description">The template object that contains the dialogue's properties. It is a map of the string values read from the ASS file.</dd>
										<dd class="parameters">
											<dl>
												<dt class="parameter name">"Style"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The name of the default style of this dialogue</dd>
												<dt class="parameter name">"Start"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The start time</dd>
												<dt class="parameter name">"End"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The end time</dd>
												<dt class="parameter name">"Layer"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The layer number</dd>
												<dt class="parameter name">"Text"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The text of this dialogue</dd>
											</dl>
										</dd>
									<dt class="parameter name">ass</dt>
									<dd class="parameter type">ASS</dd>
									<dd class="parameter description">The ASS object to which this dialogue belongs</dd>
								</dl>
							</dd>
						<dd class="functions">
							<dl class="function" id="libjass.Dialogue.toString">
								<dt class="name"><a href="#libjass.Dialogue.toString">toString</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = dialogue.toString();</dd>
								<dt>Returns</dt>
								<dd class="return type">string</dd>
								<dd class="return description">A simple representation of this dialogue's properties and tags.</dd>
							</dl>
						</dd>
						<dd class="properties">
							<dl class="getter" id="libjass.Dialogue.alignment">
								<dt class="name"><a href="#libjass.Dialogue.alignment">alignment</a></dt>
								<dd class="description">
									<p>The alignment number of this dialogue.</p>
								</dd>
								<dd class="usage">var result = dialogue.alignment;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Dialogue.end">
								<dt class="name"><a href="#libjass.Dialogue.end">end</a></dt>
								<dd class="description">
									<p>The end time of this dialogue.</p>
								</dd>
								<dd class="usage">var result = dialogue.end;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Dialogue.id">
								<dt class="name"><a href="#libjass.Dialogue.id">id</a></dt>
								<dd class="description">
									<p>The unique ID of this dialogue. Auto-generated.</p>
								</dd>
								<dd class="usage">var result = dialogue.id;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Dialogue.layer">
								<dt class="name"><a href="#libjass.Dialogue.layer">layer</a></dt>
								<dd class="description">
									<p>The layer number of this dialogue.</p>
								</dd>
								<dd class="usage">var result = dialogue.layer;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Dialogue.parts">
								<dt class="name"><a href="#libjass.Dialogue.parts">parts</a></dt>
								<dd class="description">
									<p>The parts of this dialogue.</p>
								</dd>
								<dd class="usage">var result = dialogue.parts;</dd>
								<dd class="return type">!Array.&lt;!libjass.parts.Tag&gt;</dd>
							</dl>
							<dl class="getter" id="libjass.Dialogue.start">
								<dt class="name"><a href="#libjass.Dialogue.start">start</a></dt>
								<dd class="description">
									<p>The start time of this dialogue.</p>
								</dd>
								<dd class="usage">var result = dialogue.start;</dd>
								<dd class="return type">number</dd>
							</dl>
						</dd>
					</dl>
					<dl class="constructor" id="libjass.Style">
						<dt class="name">class <a href="#libjass.Style">Style</a></dt>
						<dd class="description">
							<p>This class represents a single global style declaration in an ASS script. The styles can be obtained via the ASS.styles property.</p>
						</dd>
						<dd class="usage">var style = new Style(template);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">template</dt>
									<dd class="parameter type">!Object</dd>
									<dd class="parameter description">The template object that contains the style's properties. It is a map of the string values read from the ASS file.</dd>
										<dd class="parameters">
											<dl>
												<dt class="parameter name">"Name"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The name of the style</dd>
												<dt class="parameter name">"Italic"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">-1 if the style is italicized</dd>
												<dt class="parameter name">"Bold"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">-1 if the style is bold</dd>
												<dt class="parameter name">"Underline"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">-1 if the style is underlined</dd>
												<dt class="parameter name">"StrikeOut"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">-1 if the style is struck-through</dd>
												<dt class="parameter name">"OutlineWidth"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The outline width</dd>
												<dt class="parameter name">"Fontname"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The name of the font</dd>
												<dt class="parameter name">"Fontsize"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The size of the font</dd>
												<dt class="parameter name">"ScaleX"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The horizontal scaling of the font</dd>
												<dt class="parameter name">"ScaleY"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The vertical scaling of the font</dd>
												<dt class="parameter name">"Spacing"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The letter spacing of the font</dd>
												<dt class="parameter name">"PrimaryColor"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The primary color</dd>
												<dt class="parameter name">"OutlineColor"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The outline color</dd>
												<dt class="parameter name">"Outline"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The outline width</dd>
												<dt class="parameter name">"Alignment"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The alignment number</dd>
												<dt class="parameter name">"MarginL"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The left margin</dd>
												<dt class="parameter name">"MarginR"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The right margin</dd>
												<dt class="parameter name">"MarginV"</dt>
												<dd class="parameter type">string</dd>
												<dd class="parameter description">The vertical margin</dd>
											</dl>
										</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
							<dl class="getter" id="libjass.Style.alignment">
								<dt class="name"><a href="#libjass.Style.alignment">alignment</a></dt>
								<dd class="description">
									<p>The alignment of dialogues of this style.</p>
								</dd>
								<dd class="usage">var result = style.alignment;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Style.bold">
								<dt class="name"><a href="#libjass.Style.bold">bold</a></dt>
								<dd class="description">
									<p>Whether this style is bold or not.</p>
								</dd>
								<dd class="usage">var result = style.bold;</dd>
								<dd class="return type">boolean</dd>
							</dl>
							<dl class="getter" id="libjass.Style.fontName">
								<dt class="name"><a href="#libjass.Style.fontName">fontName</a></dt>
								<dd class="description">
									<p>The name of this style's font.</p>
								</dd>
								<dd class="usage">var result = style.fontName;</dd>
								<dd class="return type">string</dd>
							</dl>
							<dl class="getter" id="libjass.Style.fontScaleX">
								<dt class="name"><a href="#libjass.Style.fontScaleX">fontScaleX</a></dt>
								<dd class="description">
									<p>The horizontal scaling of this style's font.</p>
								</dd>
								<dd class="usage">var result = style.fontScaleX;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Style.fontScaleY">
								<dt class="name"><a href="#libjass.Style.fontScaleY">fontScaleY</a></dt>
								<dd class="description">
									<p>The vertical scaling of this style's font.</p>
								</dd>
								<dd class="usage">var result = style.fontScaleY;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Style.fontSize">
								<dt class="name"><a href="#libjass.Style.fontSize">fontSize</a></dt>
								<dd class="description">
									<p>The size of this style's font.</p>
								</dd>
								<dd class="usage">var result = style.fontSize;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Style.italic">
								<dt class="name"><a href="#libjass.Style.italic">italic</a></dt>
								<dd class="description">
									<p>Whether this style is italicized or not.</p>
								</dd>
								<dd class="usage">var result = style.italic;</dd>
								<dd class="return type">string</dd>
							</dl>
							<dl class="getter" id="libjass.Style.letterSpacing">
								<dt class="name"><a href="#libjass.Style.letterSpacing">letterSpacing</a></dt>
								<dd class="description">
									<p>The letter spacing scaling of this style's font.</p>
								</dd>
								<dd class="usage">var result = style.letterSpacing;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Style.marginLeft">
								<dt class="name"><a href="#libjass.Style.marginLeft">marginLeft</a></dt>
								<dd class="description">
									<p>The left margin of dialogues of this style.</p>
								</dd>
								<dd class="usage">var result = style.marginLeft;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Style.marginRight">
								<dt class="name"><a href="#libjass.Style.marginRight">marginRight</a></dt>
								<dd class="description">
									<p>The right margin of dialogues of this style.</p>
								</dd>
								<dd class="usage">var result = style.marginRight;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Style.marginVertical">
								<dt class="name"><a href="#libjass.Style.marginVertical">marginVertical</a></dt>
								<dd class="description">
									<p>The vertical margin of dialogues of this style.</p>
								</dd>
								<dd class="usage">var result = style.marginVertical;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Style.name">
								<dt class="name"><a href="#libjass.Style.name">name</a></dt>
								<dd class="description">
									<p>The name of this style.</p>
								</dd>
								<dd class="usage">var result = style.name;</dd>
								<dd class="return type">string</dd>
							</dl>
							<dl class="getter" id="libjass.Style.outlineColor">
								<dt class="name"><a href="#libjass.Style.outlineColor">outlineColor</a></dt>
								<dd class="description">
									<p>The color of this style's outline.</p>
								</dd>
								<dd class="usage">var result = style.outlineColor;</dd>
								<dd class="return type">!libjass.parts.Color</dd>
							</dl>
							<dl class="getter" id="libjass.Style.outlineWidth">
								<dt class="name"><a href="#libjass.Style.outlineWidth">outlineWidth</a></dt>
								<dd class="description">
									<p>The width of this style's outline.</p>
								</dd>
								<dd class="usage">var result = style.outlineWidth;</dd>
								<dd class="return type">number</dd>
							</dl>
							<dl class="getter" id="libjass.Style.primaryColor">
								<dt class="name"><a href="#libjass.Style.primaryColor">primaryColor</a></dt>
								<dd class="description">
									<p>The color of this style's font.</p>
								</dd>
								<dd class="usage">var result = style.primaryColor;</dd>
								<dd class="return type">!libjass.parts.Color</dd>
							</dl>
							<dl class="getter" id="libjass.Style.strikeThrough">
								<dt class="name"><a href="#libjass.Style.strikeThrough">strikeThrough</a></dt>
								<dd class="description">
									<p>Whether this style is struck-through or not.</p>
								</dd>
								<dd class="usage">var result = style.strikeThrough;</dd>
								<dd class="return type">boolean</dd>
							</dl>
							<dl class="getter" id="libjass.Style.underline">
								<dt class="name"><a href="#libjass.Style.underline">underline</a></dt>
								<dd class="description">
									<p>Whether this style is underlined or not.</p>
								</dd>
								<dd class="usage">var result = style.underline;</dd>
								<dd class="return type">boolean</dd>
							</dl>
						</dd>
					</dl>
					<dl class="constructor private" id="libjass.SimpleMap">
						<dt class="name">class <a href="#libjass.SimpleMap">SimpleMap.&lt;K, V&gt;</a></dt>
						<dd class="description">
							<p>Map implementation for browsers that don't support it. Only supports Number and String keys. Keys and values are stored as properties of an object, with property names derived from the key type.</p>
						</dd>
						<dd class="usage">var simpleMap = new SimpleMap();</dd>
						<dd class="functions">
							<dl class="function" id="libjass.SimpleMap.delete">
								<dt class="name"><a href="#libjass.SimpleMap.delete">delete</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = simpleMap.delete(key);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">key</dt>
											<dd class="parameter type">K</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
								<dt>Returns</dt>
								<dd class="return type">boolean</dd>
								<dd class="return description">true if the key was present before being deleted, false otherwise</dd>
							</dl>
							<dl class="function" id="libjass.SimpleMap.forEach">
								<dt class="name"><a href="#libjass.SimpleMap.forEach">forEach</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">simpleMap.forEach(callbackfn);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">callbackfn</dt>
											<dd class="parameter type">function(V, K, libjass.Map.&lt;K, V&gt;)</dd>
											<dd class="parameter description">A function that is called with each key and value in the map.</dd>
										</dl>
									</dd>
							</dl>
							<dl class="function" id="libjass.SimpleMap.get">
								<dt class="name"><a href="#libjass.SimpleMap.get">get</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = simpleMap.get(key);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">key</dt>
											<dd class="parameter type">K</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
								<dt>Returns</dt>
								<dd class="return type">V</dd>
								<dd class="return description"></dd>
							</dl>
							<dl class="function" id="libjass.SimpleMap.has">
								<dt class="name"><a href="#libjass.SimpleMap.has">has</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = simpleMap.has(key);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">key</dt>
											<dd class="parameter type">K</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
								<dt>Returns</dt>
								<dd class="return type">boolean</dd>
								<dd class="return description"></dd>
							</dl>
							<dl class="function" id="libjass.SimpleMap.set">
								<dt class="name"><a href="#libjass.SimpleMap.set">set</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = simpleMap.set(key, value);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">key</dt>
											<dd class="parameter type">K</dd>
											<dd class="parameter description"></dd>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">V</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
								<dt>Returns</dt>
								<dd class="return type">libjass.Map.&lt;K, V&gt;</dd>
								<dd class="return description">This map</dd>
							</dl>
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor private" id="libjass.SimpleSet">
						<dt class="name">class <a href="#libjass.SimpleSet">SimpleSet.&lt;T&gt;</a></dt>
						<dd class="description">
							<p>Set implementation for browsers that don't support it. Only supports Number and String elements. Elements are stored as properties of an object, with names derived from their type.</p>
						</dd>
						<dd class="usage">var simpleSet = new SimpleSet();</dd>
						<dd class="functions">
							<dl class="function" id="libjass.SimpleSet.add">
								<dt class="name"><a href="#libjass.SimpleSet.add">add</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = simpleSet.add(value);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">T</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
								<dt>Returns</dt>
								<dd class="return type">libjass.Set.&lt;T&gt;</dd>
								<dd class="return description">This set</dd>
							</dl>
							<dl class="function" id="libjass.SimpleSet.forEach">
								<dt class="name"><a href="#libjass.SimpleSet.forEach">forEach</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">simpleSet.forEach(callbackfn);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">callbackfn</dt>
											<dd class="parameter type">function(T, T, libjass.Set.&lt;T&gt;)</dd>
											<dd class="parameter description">A function that is called with each value in the set.</dd>
										</dl>
									</dd>
							</dl>
							<dl class="function" id="libjass.SimpleSet.has">
								<dt class="name"><a href="#libjass.SimpleSet.has">has</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = simpleSet.has(value);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">T</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
								<dt>Returns</dt>
								<dd class="return type">boolean</dd>
								<dd class="return description"></dd>
							</dl>
						</dd>
						<dd class="properties">
						</dd>
					</dl>
				</section>

			</section>
			<section>
				<h1 id="libjass.parts">libjass.parts</h1>

				<section>
					<h2>Classes</h2>
					<dl class="constructor" id="libjass.parts.Alignment">
						<dt class="name">class <a href="#libjass.parts.Alignment">Alignment</a></dt>
						<dd class="description">
							<p>An alignment tag {\an} or {\a}</p>
						</dd>
						<dd class="usage">var alignment = new Alignment(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">{\an###} -&gt; alignment (number)</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Alpha">
						<dt class="name">class <a href="#libjass.parts.Alpha">Alpha</a></dt>
						<dd class="description">
							<p>An alpha tag {\alpha}</p>
						</dd>
						<dd class="usage">var alpha = new Alpha(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\alpha###} -&gt; alpha (number), {\alpha} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Blur">
						<dt class="name">class <a href="#libjass.parts.Blur">Blur</a></dt>
						<dd class="description">
							<p>A blur tag {\be}</p>
						</dd>
						<dd class="usage">var blur = new Blur(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\be###} -&gt; strength (number), {\be} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Bold">
						<dt class="name">class <a href="#libjass.parts.Bold">Bold</a></dt>
						<dd class="description">
							<p>A bold tag {\b}</p>
						</dd>
						<dd class="usage">var bold = new Bold(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">*</dd>
									<dd class="parameter description">{\b1} -&gt; true, {\b0} -&gt; false, {\b###} -&gt; weight of the bold (number), {\b} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Border">
						<dt class="name">class <a href="#libjass.parts.Border">Border</a></dt>
						<dd class="description">
							<p>A border tag {\bord}</p>
						</dd>
						<dd class="usage">var border = new Border(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\bord###} -&gt; width (number), {\bord} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.BorderX">
						<dt class="name">class <a href="#libjass.parts.BorderX">BorderX</a></dt>
						<dd class="description">
							<p>A horizontal border tag {\xbord}</p>
						</dd>
						<dd class="usage">var borderX = new BorderX(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\xbord###} -&gt; width (number), {\xbord} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.BorderY">
						<dt class="name">class <a href="#libjass.parts.BorderY">BorderY</a></dt>
						<dd class="description">
							<p>A vertical border tag {\ybord}</p>
						</dd>
						<dd class="usage">var borderY = new BorderY(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\ybord###} -&gt; height (number), {\ybord} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Color">
						<dt class="name">class <a href="#libjass.parts.Color">Color</a></dt>
						<dd class="description">
							<p>Represents a CSS color with red, green, blue and alpha components. Instances of this class are immutable.</p>
						</dd>
						<dd class="usage">var color = new Color(red, green, blue, alpha);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">red</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">green</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">blue</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">alpha</dt>
									<dd class="parameter type">number=1</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
							<dl class="function" id="libjass.parts.Color.toString">
								<dt class="name"><a href="#libjass.parts.Color.toString">toString</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = color.toString();</dd>
								<dt>Returns</dt>
								<dd class="return type">string</dd>
								<dd class="return description">The CSS representation "rgba(...)" of this color.</dd>
							</dl>
							<dl class="function" id="libjass.parts.Color.withAlpha">
								<dt class="name"><a href="#libjass.parts.Color.withAlpha">withAlpha</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = color.withAlpha(value);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description">The new alpha. If null, the existing alpha is used.</dd>
										</dl>
									</dd>
								<dt>Returns</dt>
								<dd class="return type">!libjass.parts.Color</dd>
								<dd class="return description">Returns a new Color instance with the same color but the provided alpha.</dd>
							</dl>
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.ColorKaraoke">
						<dt class="name">class <a href="#libjass.parts.ColorKaraoke">ColorKaraoke</a></dt>
						<dd class="description">
							<p>A color karaoke tag {\k}</p>
						</dd>
						<dd class="usage">var colorKaraoke = new ColorKaraoke(duration);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">duration</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">{\k###} -&gt; duration (number)</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Comment">
						<dt class="name">class <a href="#libjass.parts.Comment">Comment</a></dt>
						<dd class="description">
							<p>A comment, i.e., any text enclosed in {} that is not understood as an ASS tag.</p>
						</dd>
						<dd class="usage">var comment = new Comment(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">string</dd>
									<dd class="parameter description">The text of this comment</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.ComplexFade">
						<dt class="name">class <a href="#libjass.parts.ComplexFade">ComplexFade</a></dt>
						<dd class="description">
							<p>A complex fade tag {\fade}</p>
						</dd>
						<dd class="usage">var complexFade = new ComplexFade(a1, a2, a3, t1, t2, t3, t4);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">a1</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">a2</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">a3</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">t1</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">t2</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">t3</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">t4</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.DrawingBaselineOffset">
						<dt class="name">class <a href="#libjass.parts.DrawingBaselineOffset">DrawingBaselineOffset</a></dt>
						<dd class="description">
							<p>A drawing mode baseline offset tag {\pbo}</p>
						</dd>
						<dd class="usage">var drawingBaselineOffset = new DrawingBaselineOffset(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.DrawingInstructions">
						<dt class="name">class <a href="#libjass.parts.DrawingInstructions">DrawingInstructions</a></dt>
						<dd class="description">
							<p>A pseudo-part representing text interpreted as drawing instructions</p>
						</dd>
						<dd class="usage">var drawingInstructions = new DrawingInstructions(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">string</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.DrawingMode">
						<dt class="name">class <a href="#libjass.parts.DrawingMode">DrawingMode</a></dt>
						<dd class="description">
							<p>A drawing mode tag {\p}</p>
						</dd>
						<dd class="usage">var drawingMode = new DrawingMode(scale);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">scale</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Fade">
						<dt class="name">class <a href="#libjass.parts.Fade">Fade</a></dt>
						<dd class="description">
							<p>A simple fade tag {\fad}</p>
						</dd>
						<dd class="usage">var fade = new Fade(start, end);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">start</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">end</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.FontName">
						<dt class="name">class <a href="#libjass.parts.FontName">FontName</a></dt>
						<dd class="description">
							<p>A font name tag {\fn}</p>
						</dd>
						<dd class="usage">var fontName = new FontName(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?string</dd>
									<dd class="parameter description">{\fn###} -&gt; name (string), {\fn} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.FontScaleX">
						<dt class="name">class <a href="#libjass.parts.FontScaleX">FontScaleX</a></dt>
						<dd class="description">
							<p>A horizontal font scaling tag {\fscx}</p>
						</dd>
						<dd class="usage">var fontScaleX = new FontScaleX(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\fscx###} -&gt; scale (number), {\fscx} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.FontScaleY">
						<dt class="name">class <a href="#libjass.parts.FontScaleY">FontScaleY</a></dt>
						<dd class="description">
							<p>A vertical font scaling tag {\fscy}</p>
						</dd>
						<dd class="usage">var fontScaleY = new FontScaleY(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\fscy###} -&gt; scale (number), {\fscy} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.FontSize">
						<dt class="name">class <a href="#libjass.parts.FontSize">FontSize</a></dt>
						<dd class="description">
							<p>A font size tag {\fs}</p>
						</dd>
						<dd class="usage">var fontSize = new FontSize(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\fs###} -&gt; size (number), {\fs} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.GaussianBlur">
						<dt class="name">class <a href="#libjass.parts.GaussianBlur">GaussianBlur</a></dt>
						<dd class="description">
							<p>A Gaussian blur tag {\blur}</p>
						</dd>
						<dd class="usage">var gaussianBlur = new GaussianBlur(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\blur###} -&gt; strength (number), {\blur} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Italic">
						<dt class="name">class <a href="#libjass.parts.Italic">Italic</a></dt>
						<dd class="description">
							<p>An italic tag {\i}</p>
						</dd>
						<dd class="usage">var italic = new Italic(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?boolean</dd>
									<dd class="parameter description">{\i1} -&gt; true, {\i0} -&gt; false, {\i} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.LetterSpacing">
						<dt class="name">class <a href="#libjass.parts.LetterSpacing">LetterSpacing</a></dt>
						<dd class="description">
							<p>A letter spacing tag {\fsp}</p>
						</dd>
						<dd class="usage">var letterSpacing = new LetterSpacing(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\fsp###} -&gt; spacing (number), {\fsp} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Move">
						<dt class="name">class <a href="#libjass.parts.Move">Move</a></dt>
						<dd class="description">
							<p>A movement tag {\move}</p>
						</dd>
						<dd class="usage">var move = new Move(x1, y1, x2, y2, t1, t2);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">x1</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">y1</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">x2</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">y2</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">t1</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">t2</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.OutlineAlpha">
						<dt class="name">class <a href="#libjass.parts.OutlineAlpha">OutlineAlpha</a></dt>
						<dd class="description">
							<p>An outline alpha tag {\3a}</p>
						</dd>
						<dd class="usage">var outlineAlpha = new OutlineAlpha(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\3a###} -&gt; alpha (number), {\3a} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.OutlineColor">
						<dt class="name">class <a href="#libjass.parts.OutlineColor">OutlineColor</a></dt>
						<dd class="description">
							<p>An outline color tag {\3c}</p>
						</dd>
						<dd class="usage">var outlineColor = new OutlineColor(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">libjass.parts.Color</dd>
									<dd class="parameter description">{\3c###} -&gt; color (Color), {\3c} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.OutlineKaraoke">
						<dt class="name">class <a href="#libjass.parts.OutlineKaraoke">OutlineKaraoke</a></dt>
						<dd class="description">
							<p>An outline karaoke tag {\ko}</p>
						</dd>
						<dd class="usage">var outlineKaraoke = new OutlineKaraoke(duration);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">duration</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">{\ko###} -&gt; duration (number)</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor abstract" id="libjass.parts.PartBase">
						<dt class="name">class <a href="#libjass.parts.PartBase">PartBase</a></dt>
						<dd class="description">
							<p>The base class of the ASS tag classes.</p>
						</dd>
						<dd class="usage">var partBase = new PartBase(name, propertyNames);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">name</dt>
									<dd class="parameter type">string</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">propertyNames</dt>
									<dd class="parameter type">...string</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
							<dl class="function" id="libjass.parts.PartBase.toString">
								<dt class="name"><a href="#libjass.parts.PartBase.toString">toString</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">var result = partBase.toString();</dd>
								<dt>Returns</dt>
								<dd class="return type">string</dd>
								<dd class="return description">A simple representation of this tag's name and properties.</dd>
							</dl>
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Position">
						<dt class="name">class <a href="#libjass.parts.Position">Position</a></dt>
						<dd class="description">
							<p>A position tag {\pos}</p>
						</dd>
						<dd class="usage">var position = new Position(x, y);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">x</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">y</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.PrimaryAlpha">
						<dt class="name">class <a href="#libjass.parts.PrimaryAlpha">PrimaryAlpha</a></dt>
						<dd class="description">
							<p>A primary alpha tag {\1a}</p>
						</dd>
						<dd class="usage">var primaryAlpha = new PrimaryAlpha(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\1a###} -&gt; alpha (number), {\1a} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.PrimaryColor">
						<dt class="name">class <a href="#libjass.parts.PrimaryColor">PrimaryColor</a></dt>
						<dd class="description">
							<p>A primary color tag {\c} or {\1c}</p>
						</dd>
						<dd class="usage">var primaryColor = new PrimaryColor(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">libjass.parts.Color</dd>
									<dd class="parameter description">{\1c###} -&gt; color (Color), {\1c} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.RectangularClip">
						<dt class="name">class <a href="#libjass.parts.RectangularClip">RectangularClip</a></dt>
						<dd class="description">
							<p>A rectangular clip tag {\clip} or {\iclip}</p>
						</dd>
						<dd class="usage">var rectangularClip = new RectangularClip(x1, y1, x2, y2, inside);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">x1</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">y1</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">x2</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">y2</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">inside</dt>
									<dd class="parameter type">boolean</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Reset">
						<dt class="name">class <a href="#libjass.parts.Reset">Reset</a></dt>
						<dd class="description">
							<p>A style reset tag {\r}</p>
						</dd>
						<dd class="usage">var reset = new Reset(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?string</dd>
									<dd class="parameter description">{\r###} -&gt; style name (string), {\r} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.RotateX">
						<dt class="name">class <a href="#libjass.parts.RotateX">RotateX</a></dt>
						<dd class="description">
							<p>An X-axis rotation tag {\frx}</p>
						</dd>
						<dd class="usage">var rotateX = new RotateX(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\frx###} -&gt; angle (number), {\frx} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.RotateY">
						<dt class="name">class <a href="#libjass.parts.RotateY">RotateY</a></dt>
						<dd class="description">
							<p>A Y-axis rotation tag {\fry}</p>
						</dd>
						<dd class="usage">var rotateY = new RotateY(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\fry###} -&gt; angle (number), {\fry} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.RotateZ">
						<dt class="name">class <a href="#libjass.parts.RotateZ">RotateZ</a></dt>
						<dd class="description">
							<p>A Z-axis rotation tag {\fr} or {\frz}</p>
						</dd>
						<dd class="usage">var rotateZ = new RotateZ(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\frz###} -&gt; angle (number), {\frz} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.RotationOrigin">
						<dt class="name">class <a href="#libjass.parts.RotationOrigin">RotationOrigin</a></dt>
						<dd class="description">
							<p>A rotation origin tag {\org}</p>
						</dd>
						<dd class="usage">var rotationOrigin = new RotationOrigin(x, y);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">x</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">y</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.SecondaryAlpha">
						<dt class="name">class <a href="#libjass.parts.SecondaryAlpha">SecondaryAlpha</a></dt>
						<dd class="description">
							<p>A secondary alpha tag {\2a}</p>
						</dd>
						<dd class="usage">var secondaryAlpha = new SecondaryAlpha(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\2a###} -&gt; alpha (number), {\2a} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.SecondaryColor">
						<dt class="name">class <a href="#libjass.parts.SecondaryColor">SecondaryColor</a></dt>
						<dd class="description">
							<p>A secondary color tag {\2c}</p>
						</dd>
						<dd class="usage">var secondaryColor = new SecondaryColor(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">libjass.parts.Color</dd>
									<dd class="parameter description">{\2c###} -&gt; color (Color), {\2c} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Shadow">
						<dt class="name">class <a href="#libjass.parts.Shadow">Shadow</a></dt>
						<dd class="description">
							<p>A shadow tag {\shad}</p>
						</dd>
						<dd class="usage">var shadow = new Shadow(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\shad###} -&gt; depth (number), {\shad} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.ShadowAlpha">
						<dt class="name">class <a href="#libjass.parts.ShadowAlpha">ShadowAlpha</a></dt>
						<dd class="description">
							<p>A shadow alpha tag {\4a}</p>
						</dd>
						<dd class="usage">var shadowAlpha = new ShadowAlpha(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\4a###} -&gt; alpha (number), {\4a} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.ShadowColor">
						<dt class="name">class <a href="#libjass.parts.ShadowColor">ShadowColor</a></dt>
						<dd class="description">
							<p>A shadow color tag {\4c}</p>
						</dd>
						<dd class="usage">var shadowColor = new ShadowColor(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">libjass.parts.Color</dd>
									<dd class="parameter description">{\4c###} -&gt; color (Color), {\4c} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.ShadowX">
						<dt class="name">class <a href="#libjass.parts.ShadowX">ShadowX</a></dt>
						<dd class="description">
							<p>A horizontal shadow tag {\xshad}</p>
						</dd>
						<dd class="usage">var shadowX = new ShadowX(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\xshad###} -&gt; depth (number), {\xshad} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.ShadowY">
						<dt class="name">class <a href="#libjass.parts.ShadowY">ShadowY</a></dt>
						<dd class="description">
							<p>A vertical shadow tag {\yshad}</p>
						</dd>
						<dd class="usage">var shadowY = new ShadowY(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\yshad###} -&gt; depth (number), {\yshad} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.SkewX">
						<dt class="name">class <a href="#libjass.parts.SkewX">SkewX</a></dt>
						<dd class="description">
							<p>An X-axis shearing tag {\fax}</p>
						</dd>
						<dd class="usage">var skewX = new SkewX(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\fax###} -&gt; angle (number), {\fax} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.SkewY">
						<dt class="name">class <a href="#libjass.parts.SkewY">SkewY</a></dt>
						<dd class="description">
							<p>A Y-axis shearing tag {\fay}</p>
						</dd>
						<dd class="usage">var skewY = new SkewY(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?number</dd>
									<dd class="parameter description">{\fay###} -&gt; angle (number), {\fay} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.StrikeThrough">
						<dt class="name">class <a href="#libjass.parts.StrikeThrough">StrikeThrough</a></dt>
						<dd class="description">
							<p>A strike-through tag {\s}</p>
						</dd>
						<dd class="usage">var strikeThrough = new StrikeThrough(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?boolean</dd>
									<dd class="parameter description">{\s1} -&gt; true, {\s0} -&gt; false, {\s} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.SweepingColorKaraoke">
						<dt class="name">class <a href="#libjass.parts.SweepingColorKaraoke">SweepingColorKaraoke</a></dt>
						<dd class="description">
							<p>A sweeping color karaoke tag {\K} or {\kf}</p>
						</dd>
						<dd class="usage">var sweepingColorKaraoke = new SweepingColorKaraoke(duration);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">duration</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">{\kf###} -&gt; duration (number)</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Text">
						<dt class="name">class <a href="#libjass.parts.Text">Text</a></dt>
						<dd class="description">
							<p>A block of text, i.e., any text not enclosed in {}. Also includes \h and \N.</p>
						</dd>
						<dd class="usage">var text = new Text(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">string</dd>
									<dd class="parameter description">The content of this block of text</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Transform">
						<dt class="name">class <a href="#libjass.parts.Transform">Transform</a></dt>
						<dd class="description">
							<p>A transform tag {\t}</p>
						</dd>
						<dd class="usage">var transform = new Transform(start, end, accel, tags);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">start</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">end</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">accel</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">tags</dt>
									<dd class="parameter type">Array.&lt;libjass.parts.Tag&gt;</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.Underline">
						<dt class="name">class <a href="#libjass.parts.Underline">Underline</a></dt>
						<dd class="description">
							<p>An underline tag {\u}</p>
						</dd>
						<dd class="usage">var underline = new Underline(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">?boolean</dd>
									<dd class="parameter description">{\u1} -&gt; true, {\u0} -&gt; false, {\u} -&gt; null</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.VectorClip">
						<dt class="name">class <a href="#libjass.parts.VectorClip">VectorClip</a></dt>
						<dd class="description">
							<p>A vector clip tag {\clip} or {\iclip}</p>
						</dd>
						<dd class="usage">var vectorClip = new VectorClip(scale, commands, inside);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">scale</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">commands</dt>
									<dd class="parameter type">string</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">inside</dt>
									<dd class="parameter type">boolean</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.parts.WrappingStyle">
						<dt class="name">class <a href="#libjass.parts.WrappingStyle">WrappingStyle</a></dt>
						<dd class="description">
							<p>A wrapping style tag {\q}</p>
						</dd>
						<dd class="usage">var wrappingStyle = new WrappingStyle(value);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">value</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">{\q###} -&gt; style (number)</dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
				</section>

			</section>
			<section>
				<h1 id="libjass.renderers">libjass.renderers</h1>

				<section>
					<h2>Classes</h2>
					<dl class="constructor" id="libjass.renderers.DefaultRenderer">
						<dt class="name">class <a href="#libjass.renderers.DefaultRenderer">DefaultRenderer</a> extends <a href="#libjass.renderers.NullRenderer">NullRenderer</a></dt>
						<dd class="description">
							<p>A default renderer implementation.</p>
						</dd>
						<dd class="usage">var defaultRenderer = new DefaultRenderer(video, ass, settings);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">video</dt>
									<dd class="parameter type">!HTMLVideoElement</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">ass</dt>
									<dd class="parameter type">!libjass.ASS</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">settings</dt>
									<dd class="parameter type">!libjass.RendererSettings</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
							<dl class="function" id="libjass.renderers.DefaultRenderer.addEventListener">
								<dt class="name"><a href="#libjass.renderers.DefaultRenderer.addEventListener">addEventListener</a></dt>
								<dd class="description">
									<p>Add a listener for the given event. The "ready" event is fired when fonts have been preloaded if settings.preLoadFonts is true, or in the next tick after the DefaultRenderer object is constructed otherwise. The "fullScreenChange" event is fired when the browser's fullscreenchange event is fired for the video element.</p>
								</dd>
								<dd class="usage">defaultRenderer.addEventListener(type, listener);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">type</dt>
											<dd class="parameter type">string</dd>
											<dd class="parameter description">The type of event to attach the listener for. One of "ready" and "fullScreenChange".</dd>
											<dt class="parameter name">listener</dt>
											<dd class="parameter type">!Function</dd>
											<dd class="parameter description">The listener</dd>
										</dl>
									</dd>
							</dl>
							<dl class="function" id="libjass.renderers.DefaultRenderer.draw">
								<dt class="name"><a href="#libjass.renderers.DefaultRenderer.draw">draw</a></dt>
								<dd class="description">
									<p>Returns the subtitle div for display. The currentTime is used to shift the animations appropriately, so that at the time the div is inserted into the DOM and the animations begin, they are in sync with the video time.</p>
								</dd>
								<dd class="usage">defaultRenderer.draw(dialogue);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">dialogue</dt>
											<dd class="parameter type">!libjass.Dialogue</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="function" id="libjass.renderers.DefaultRenderer.resizeVideo">
								<dt class="name"><a href="#libjass.renderers.DefaultRenderer.resizeVideo">resizeVideo</a></dt>
								<dd class="description">
									<p>Resize the video element and subtitles to the new dimensions.</p>
								</dd>
								<dd class="usage">defaultRenderer.resizeVideo(width, height);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">width</dt>
											<dd class="parameter type">number</dd>
											<dd class="parameter description"></dd>
											<dt class="parameter name">height</dt>
											<dd class="parameter type">number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="function private" id="libjass.renderers.DefaultRenderer._dispatchEvent">
								<dt class="name"><a href="#libjass.renderers.DefaultRenderer._dispatchEvent">_dispatchEvent</a></dt>
								<dd class="description">
									<p></p>
								</dd>
								<dd class="usage">defaultRenderer._dispatchEvent(type, args);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">type</dt>
											<dd class="parameter type">string</dd>
											<dd class="parameter description"></dd>
											<dt class="parameter name">args</dt>
											<dd class="parameter type">...*</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.renderers.NullRenderer">
						<dt class="name">class <a href="#libjass.renderers.NullRenderer">NullRenderer</a></dt>
						<dd class="description">
							<p>A renderer implementation that doesn't output anything.</p>
						</dd>
						<dd class="usage">var nullRenderer = new NullRenderer(video, ass, settings);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">video</dt>
									<dd class="parameter type">!HTMLVideoElement</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">ass</dt>
									<dd class="parameter type">!libjass.ASS</dd>
									<dd class="parameter description"></dd>
									<dt class="parameter name">settings</dt>
									<dd class="parameter type">!libjass.RendererSettings</dd>
									<dd class="parameter description"></dd>
								</dl>
							</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor" id="libjass.renderers.RendererSettings">
						<dt class="name">class <a href="#libjass.renderers.RendererSettings">RendererSettings</a></dt>
						<dd class="description">
							<p>Settings for the default renderer.</p>
						</dd>
						<dd class="usage">var rendererSettings = new RendererSettings();</dd>
						<dd class="functions">
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor private" id="libjass.renderers.AnimationCollection">
						<dt class="name">class <a href="#libjass.renderers.AnimationCollection">AnimationCollection</a></dt>
						<dd class="description">
							<p>This class represents a collection of keyframes. Each keyframe contains one or more CSS properties. The collection can then be converted to a CSS3 representation.</p>
						</dd>
						<dd class="usage">var animationCollection = new AnimationCollection(id, start, end);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">id</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">The ID of the dialogue that this keyframe is associated with</dd>
									<dt class="parameter name">start</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">The start time of the dialogue that this keyframe is associated with</dd>
									<dt class="parameter name">end</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">The end time of the dialogue that this keyframe is associated with</dd>
								</dl>
							</dd>
						<dd class="functions">
							<dl class="function" id="libjass.renderers.AnimationCollection.addCustom">
								<dt class="name"><a href="#libjass.renderers.AnimationCollection.addCustom">addCustom</a></dt>
								<dd class="description">
									<p>Add a new custom animation.</p>
								</dd>
								<dd class="usage">animationCollection.addCustom(timingFunction, animations);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">timingFunction</dt>
											<dd class="parameter type">string</dd>
											<dd class="parameter description"></dd>
											<dt class="parameter name">animations</dt>
											<dd class="parameter type">Array.&lt;!{time: number, properties: Object.&lt;string, string&gt;}&gt;</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="function" id="libjass.renderers.AnimationCollection.addFadeIn">
								<dt class="name"><a href="#libjass.renderers.AnimationCollection.addFadeIn">addFadeIn</a></dt>
								<dd class="description">
									<p>Add a fade-in animation.</p>
								</dd>
								<dd class="usage">animationCollection.addFadeIn(start, duration);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">start</dt>
											<dd class="parameter type">number</dd>
											<dd class="parameter description">The time from the dialogue start to start the fade-in</dd>
											<dt class="parameter name">duration</dt>
											<dd class="parameter type">number</dd>
											<dd class="parameter description">The duration of the fade-in</dd>
										</dl>
									</dd>
							</dl>
							<dl class="function" id="libjass.renderers.AnimationCollection.addFadeOut">
								<dt class="name"><a href="#libjass.renderers.AnimationCollection.addFadeOut">addFadeOut</a></dt>
								<dd class="description">
									<p>Add a fade-out animation.</p>
								</dd>
								<dd class="usage">animationCollection.addFadeOut(start, duration);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">start</dt>
											<dd class="parameter type">number</dd>
											<dd class="parameter description">The time from the dialogue start to start the fade-out</dd>
											<dt class="parameter name">duration</dt>
											<dd class="parameter type">number</dd>
											<dd class="parameter description">The duration of the fade-out</dd>
										</dl>
									</dd>
							</dl>
						</dd>
						<dd class="properties">
						</dd>
					</dl>
					<dl class="constructor private" id="libjass.renderers.SpanStyles">
						<dt class="name">class <a href="#libjass.renderers.SpanStyles">SpanStyles</a></dt>
						<dd class="description">
							<p>This class represents the style attribute of a span. As a Dialogue's div is rendered, individual parts are added to span's, and this class is used to maintain the style attribute of those.</p>
						</dd>
						<dd class="usage">var spanStyles = new SpanStyles(style, transformOrigin, scaleX, scaleY);</dd>
							<dd class="parameters">
								<dl>
									<dt class="parameter name">style</dt>
									<dd class="parameter type">!libjass.Style</dd>
									<dd class="parameter description">The default style for the dialogue this object is associated with</dd>
									<dt class="parameter name">transformOrigin</dt>
									<dd class="parameter type">string</dd>
									<dd class="parameter description">The transform origin of the dialogue this object is associated with</dd>
									<dt class="parameter name">scaleX</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">The horizontal scaling of the dialogue this object is associated with</dd>
									<dt class="parameter name">scaleY</dt>
									<dd class="parameter type">number</dd>
									<dd class="parameter description">The vertical scaling of the dialogue this object is associated with</dd>
								</dl>
							</dd>
						<dd class="functions">
							<dl class="function" id="libjass.renderers.SpanStyles.reset">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.reset">reset</a></dt>
								<dd class="description">
									<p>Resets the styles to the defaults provided by the argument.</p>
								</dd>
								<dd class="usage">spanStyles.reset(newStyle);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">newStyle</dt>
											<dd class="parameter type">!libjass.Style=</dd>
											<dd class="parameter description">The new defaults to reset the style to. If unspecified, the new style is the original style this object was created with.</dd>
										</dl>
									</dd>
							</dl>
							<dl class="function" id="libjass.renderers.SpanStyles.setStylesOnSpan">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.setStylesOnSpan">setStylesOnSpan</a></dt>
								<dd class="description">
									<p>Sets the style attribute on the given span element.</p>
								</dd>
								<dd class="usage">spanStyles.setStylesOnSpan(span);</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">span</dt>
											<dd class="parameter type">!HTMLSpanElement</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
						</dd>
						<dd class="properties">
							<dl class="setter" id="libjass.renderers.SpanStyles.blur">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.blur">blur</a></dt>
								<dd class="description">
									<p>Sets the blur property. null defaults it to 0.</p>
								</dd>
								<dd class="usage">spanStyles.blur = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.bold">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.bold">bold</a></dt>
								<dd class="description">
									<p>Sets the bold property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.bold = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">(?number|?boolean)</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.fontName">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.fontName">fontName</a></dt>
								<dd class="description">
									<p>Sets the font name property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.fontName = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?string</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.fontScaleX">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.fontScaleX">fontScaleX</a></dt>
								<dd class="description">
									<p>Sets the horizontal font scaling property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.fontScaleX = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.fontScaleY">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.fontScaleY">fontScaleY</a></dt>
								<dd class="description">
									<p>Sets the vertical font scaling property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.fontScaleY = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.fontSize">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.fontSize">fontSize</a></dt>
								<dd class="description">
									<p>Sets the font size property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.fontSize = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.italic">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.italic">italic</a></dt>
								<dd class="description">
									<p>Sets the italic property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.italic = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?boolean</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.letterSpacing">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.letterSpacing">letterSpacing</a></dt>
								<dd class="description">
									<p>Sets the letter spacing property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.letterSpacing = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.outlineAlpha">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.outlineAlpha">outlineAlpha</a></dt>
								<dd class="description">
									<p>Sets the outline alpha property.</p>
								</dd>
								<dd class="usage">spanStyles.outlineAlpha = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.outlineColor">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.outlineColor">outlineColor</a></dt>
								<dd class="description">
									<p>Sets the outline color property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.outlineColor = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">libjass.parts.Color</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.outlineWidthX">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.outlineWidthX">outlineWidthX</a></dt>
								<dd class="description">
									<p>Sets the outline width property. null defaults it to the style's original outline width value.</p>
								</dd>
								<dd class="usage">spanStyles.outlineWidthX = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.outlineWidthY">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.outlineWidthY">outlineWidthY</a></dt>
								<dd class="description">
									<p>Sets the outline height property. null defaults it to the style's original outline width value.</p>
								</dd>
								<dd class="usage">spanStyles.outlineWidthY = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.primaryAlpha">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.primaryAlpha">primaryAlpha</a></dt>
								<dd class="description">
									<p>Sets the primary alpha property.</p>
								</dd>
								<dd class="usage">spanStyles.primaryAlpha = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?number</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.primaryColor">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.primaryColor">primaryColor</a></dt>
								<dd class="description">
									<p>Sets the primary color property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.primaryColor = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">libjass.parts.Color</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.strikeThrough">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.strikeThrough">strikeThrough</a></dt>
								<dd class="description">
									<p>Sets the strike-through property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.strikeThrough = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?boolean</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
							<dl class="setter" id="libjass.renderers.SpanStyles.underline">
								<dt class="name"><a href="#libjass.renderers.SpanStyles.underline">underline</a></dt>
								<dd class="description">
									<p>Sets the underline property. null defaults it to the style's original value.</p>
								</dd>
								<dd class="usage">spanStyles.underline = value;</dd>
									<dd class="parameters">
										<dl>
											<dt class="parameter name">value</dt>
											<dd class="parameter type">?boolean</dd>
											<dd class="parameter description"></dd>
										</dl>
									</dd>
							</dl>
						</dd>
					</dl>
				</section>

			</section>
		</div>
	</body>
</html>
