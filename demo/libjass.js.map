{"version":3,"sources":["../src/settings.ts","../src/index.ts","../src/version.ts","../src/renderers/index.ts","../src/renderers/default.ts","../src/renderers/web/renderer.ts","../src/parser/ttf.ts","../src/renderers/web/span-styles.ts","../src/renderers/web/font-size.ts","../src/renderers/web/drawing-styles.ts","../src/renderers/web/animation-collection.ts","../src/renderers/null.ts","../src/renderers/web/keyframe.ts","../src/renderers/settings.ts","../src/renderers/clocks/video.ts","../src/renderers/clocks/auto.ts","../src/renderers/clocks/manual.ts","../src/utility/mixin.ts","../src/renderers/clocks/base.ts","../src/parser/index.ts","../src/parser/stream-parsers.ts","../src/types/ass.ts","../src/parser/misc.ts","../src/types/script-properties.ts","../src/types/dialogue.ts","../src/types/style.ts","../src/types/attachment.ts","../src/parser/streams.ts","../src/parser/parse.ts","../src/parts/index.ts","../src/parts/drawing.ts","../src/types/misc.ts","../src/webworker/index.ts","../src/webworker/channel.ts","../src/webworker/misc.ts","../src/webworker/commands.ts","../src/serialization.ts","../src/utility/promise.ts","../src/utility/map.ts","../src/utility/set.ts"],"names":["exports","factory","global","libjass","def","moduleId","deps","body","req","registeredModules","Object","create","apply","debugMode","settings_11","verboseMode","Set","set_2","Map","map_15","Promise","promise_8","DeferredPromise","webworker","parts","parser","renderers","serialize","serialization_8","deserialize","ASS","ass_2","Attachment","attachment_3","AttachmentType","Dialogue","dialogue_3","ScriptProperties","script_properties_2","Style","style_3","BorderStyle","misc_9","Format","WrappingStyle","version","version_1","configure","newConfig","settings","setDebugMode","setVerboseMode","set","setImplementation","map","promise","defineProperties","get","value","console","warn","ClockEvent","base_4","EventSource","AutoClock","auto_2","ManualClock","manual_2","VideoClock","video_2","DefaultRenderer","default_1","NullRenderer","null_2","WebRenderer","renderer_2","RendererSettings","settings_10","_super","__extends","_video","ass","call","this","video_1","document","createElement","parentElement","replaceChild","libjassSubsWrapper","insertBefore","firstElementChild","prototype","resize","videoWidth","videoHeight","videoOffsetWidth","offsetWidth","videoOffsetHeight","offsetHeight","ratio","Math","min","subsWrapperWidth","subsWrapperHeight","subsWrapperLeft","subsWrapperTop","resizeVideo","_ready","renderer_1","fontSrcUrlRegex","clock","_libjassSubsWrapper","_this","HTMLDivElement","temp","_layerWrappers","_layerAlignmentWrappers","_fontMetricsCache","map_14","_currentSubs","_preRenderedSubs","_eventListeners","classList","add","_subsWrapper","appendChild","className","_fontSizeElement","createTextNode","settings_9","log","preloadFontPromises","fontFetchPromisesCache","fontMap","attachedFontsMap","useAttachedFonts","attachments","forEach","attachment","type","attachment_2","Font","ttfNames","ttf_1","getTtfNames","ex","error","attachmentUrl","contents","name","correspondingFontMapEntry","undefined","push","existingList","srcs","fontFamily","fontFamilyMetricsPromise","fonts","source_1","src","match","join","attachedFontUrls","_i","attachedFontUrls_1","length","url","existingFontFaces_1","fontFace","family","fontFetchPromise","FontFace","quotedFontFace","promise_7","any","load","_calculateFontMetricsAfterFetch","catch","reason","urls_1","split","trim","filter","concat","thisFontFamilysFetchPromises","resolve","reject","xhr","XMLHttpRequest","addEventListener","err","open","send","allFontsFetchedPromise","first","then","metrics","all","defineProperty","width","height","left","top","_removeAllSubs","style","toFixed","_subsWrapperWidth","_scaleX","properties","resolutionX","_scaleY","resolutionY","clear","currentTime","_onClockTick","preRender","dialogue","currentTimeRelativeToDialogueStart","start","containsTransformTag","alreadyPreRenderedSub","id","sub","marginLeft","marginRight","marginTop","marginBottom","marginVertical","minWidth","dialogueAnimationStylesElement","dialogueAnimationCollection","animation_collection_1","AnimationCollection","svgElement","createElementNS","setAttribute","baseVal","valueAsString","svgDefsElement","currentSpan","currentSpanStyles","span_styles_1","SpanStyles","currentAnimationCollection","previousAddNewLine","startNewSpan","addNewLine","hasChildNodes","setStylesOnSpan","animationDelays","delay","makeNewLine","currentDrawingStyles","drawing_styles_1","DrawingStyles","wrappingStyle","karaokeTimesAccumulator","_a","part","Italic","italic","Bold","bold","Underline","underline","StrikeThrough","strikeThrough","Border","outlineWidth","outlineHeight","BorderX","BorderY","Shadow","shadowDepthX","shadowDepthY","ShadowX","ShadowY","Blur","blur","GaussianBlur","gaussianBlur","FontName","fontName","FontSize","fontSize","FontSizePlus","FontSizeMinus","FontScaleX","fontScaleX","FontScaleY","fontScaleY","LetterSpacing","letterSpacing","RotateX","rotationX","RotateY","rotationY","RotateZ","rotationZ","SkewX","skewX","SkewY","skewY","PrimaryColor","primaryColor","SecondaryColor","secondaryColor","OutlineColor","outlineColor","ShadowColor","shadowColor","Alpha","primaryAlpha","secondaryAlpha","outlineAlpha","shadowAlpha","PrimaryAlpha","SecondaryAlpha","OutlineAlpha","ShadowAlpha","Alignment","ColorKaraoke","keyframe_1","Keyframe","withAlpha","toString","duration","Reset","newStyleName","reset","styles","Position","position","x","y","Move","x1","y1","t1","t2","x2","y2","end","Fade","ComplexFade","a1","a2","t3","t4","a3","Transform","progression","pow","accel","_b","_c","tags","tag","interpolate","DrawingMode","scale","DrawingBaselineOffset","baselineOffset","DrawingInstructions","toSVG","Text","Comment","NewLine","divTransformStyle","transformOrigin","_transformOrigins","alignment","transformOriginString","_d","_e","webkitTransform","transform","webkitTransformOrigin","misc_8","EndOfLineWrapping","whiteSpace","NoLineWrapping","SmartWrappingWithWiderTopLine","SmartWrappingWithWiderBottomLine","textAlign","webkitAnimation","animationStyle","animation","textContent","result","draw","has","preRenderedSub","cloneNode","applyAnimationDelays","node","animationNames","animationName","webkitAnimationName","rate","webkitAnimationDelay","animationDelay","animatedDescendants","querySelectorAll","i","layer","layerWrapper","insertBeforeElement","insertBeforeLayer","layerAlignmentWrapper","insertBeforeAlignment","getElementsByTagName","sheet","cssRules","cssText","_onClockPlay","display","remove","delete","_removeSub","_onClockPause","_onClockStop","_onClockRateChange","_dispatchEvent","fontSizeElement","lastly","font_size_2","calculateFontMetrics","fallbackFonts","removeChild","parentNode","null_1","mixin_3","mixin","base_3","DataType","fieldDecorators","map_13","OffsetTable","__decorate","field","Uint16","struct","TableRecord","Char","Uint32","NameTableHeader","NameRecord","decoded","atob","bytes","Uint8Array","ArrayBuffer","charCodeAt","reader","dataView","DataView","buffer","offsetTable","read","nameTableRecord","numTables","tableRecord","c1","c2","c3","c4","Error","offset","nameTableHeader","set_1","count","nameRecord","nameId","recordOffset","stringOffset","nameBytes","subarray","platformId","name_4","j","String","fromCharCode","name_5","clazz","fields","__fields","fields_1","field_1","getInt8","getUint16","getUint32","existingDecorator","proto","ctor","constructor","renderer","_settings","_svgDefsElement","_nextFilterId","_id","_defaultStyle","newStyle","outlineThickness","shadowDepth","alpha","span","animationCollection","isTextOnlySpan","childNodes","fontStyleOrWeight","_italic","_bold","lineHeight","_fontScaleX","_fontSize","font_size_1","fontSizeForLineHeight","_fontName","font","textDecoration","_underline","_strikeThrough","_fontScaleY","_skewX","_skewY","_letterSpacing","_outlineWidth","_outlineHeight","_shadowDepthX","_shadowDepthY","_primaryColor","_primaryAlpha","_outlineColor","_outlineAlpha","_shadowColor","_shadowAlpha","enableSvg","opacity","color","_svg","_textShadow","_rotationX","_rotationY","filterElement","source","in1","sourceAlphaTransferNode","SVGComponentTransferFunctionElement","SVG_FECOMPONENTTRANSFER_TYPE_LINEAR","intercept","slope","mergedOutlines_1","outlineNumber_1","increment_1","preciseOutlines","_gaussianBlur","addOutline","sqrt","outlineId","outlineFilter","operator","SVGFEMorphologyElement","SVG_MORPHOLOGY_OPERATOR_DILATE","radiusX","radiusY","outlineReferenceNode","dx","dy","coloredOutline","createComponentTransferFilter","gaussianBlurFilter","stdDeviationX","stdDeviationY","_blur","blurFilter","edgeMode","SVGFEConvolveMatrixElement","SVG_EDGEMODE_NONE","cutoutNode","in2","SVGFECompositeElement","SVG_FECOMPOSITE_OPERATOR_OUT","shadowFilter","coloredShadow","lastFilter","mergedResult","shadowReferenceNode","sourceGraphicReferenceNode","childElementCount","filterId","filterProperty","webkitFilter","outlineCssString_1","shadowCssString_1","maxY","textShadow","substr","shadowCssString","valueOrDefault","_rotationZ","_secondaryColor","_secondaryAlpha","redTransferNode","red","greenTransferNode","green","blueTransferNode","blue","alphaTransferNode","newValue","defaultValue","prepareFontSizeElement","lineHeightForFontSize","promise_6","setTimeout","lineHeightForFontSizeSync","fontMetricsFromLineHeights","lowerLineHeight","upperLineHeight","fontSizeFromMetrics","factor","fontMetricsCache","existingMetrics","lowerLineHeight_1","_outputScaleX","_outputScaleY","_scale","_baselineOffset","drawingInstructions","fillColor","svg","instructions","scaleFactor","scaleX","scaleY","path","pathString","bboxMinX","Infinity","bboxMaxX","bboxMinY","bboxMaxY","instruction","drawing","MoveInstruction","max","LineInstruction","CubicBezierCurveInstruction","x3","y3","bboxWidth","bboxHeight","g","_style","_animationStyle","_animationDelays","map_12","_numAnimations","_nextId","_rate","timingFunction","keyframes","keyframes_1","keyframe","time","ruleCssText","keyframes_2","_ass","_clock","_lastRendererId","settings_7","from","base_2","Play","Tick","Pause","Stop","RateChange","enable","disable","toggle","setEnabled","enabled","settings_8","dialogues","preRenderTime","_time","_properties","makeFontMapFromStyleElement","linkStyle","map_11","styleSheet","rule","isFontFaceRule","name_3","getPropertyValue","line","matches","object","testSupportsSvg","_f","_g","CSSRule","FONT_FACE_RULE","settings_6","morphologyFilter","DOMException","domException","code","NO_MODIFICATION_ALLOWED_ERR","getAttribute","video","_autoClock","auto_1","play","pause","seeking","setRate","playbackRate","paused","listener","_getCurrentTime","_autoPauseAfter","_manualClock","manual_1","_nextAnimationFrameRequestId","_lastKnownExternalTime","_lastKnownExternalTimeObtainedAt","_startTicking","settings_5","_stopTicking","seek","_onTimerTick","timeStamp","currentExternalTime","tick","requestAnimationFrame","cancelAnimationFrame","_currentTime","_enabled","_paused","map_10","base_1","stop","mixin_2","mixins","mixins_1","mixin_1","getOwnPropertyNames","name_2","listeners","args","listeners_1","parse","parse_3","BrowserReadableStream","streams_1","StringStream","XhrStream","StreamParser","stream_parsers_1","SrtStreamParser","Section","_stream","ass_1","_minimalDeferred","promise_5","_deferred","_shouldSwallowBom","_currentSection","ScriptInfo","_currentAttachment","nextLine","_onNextLine","addAttachment","EOF","scriptProperties","currentSection","Styles","Events","Fonts","Graphics","Other","property","misc_7","parseLineIntoProperty","parseInt","scaleBorderAndShadow","stylesFormatSpecifier","property_1","str","addStyle","settings_4","stack","dialoguesFormatSpecifier","property_2","addEvent","startOfNewAttachmentRegex","startOfNewAttachment","exec","attachment_1","Graphic","uuencodedToBase64","filename","_currentDialogueNumber","_currentDialogueStart","_currentDialogueEnd","_currentDialogueText","style_2","map_9","dialogue_2","test","replace","substring","charCode","script_properties_1","_styles","map_8","_dialogues","_attachments","_stylesFormatSpecifier","_dialoguesFormatSpecifier","arguments","style_1","styleLine","misc_6","parseLineIntoTypedTemplate","styleTemplate","template","settings_3","repr_1","key","dialogueLine","dialogueTemplate","repr_2","dialogue_1","toJSON","_classTag","fromString","raw","misc_5","fromStream","stream","SRT","fromUrl","fetchPromise","fetch","ReadableStream","getReader","TextDecoder","response","ok","status","fromReadableStream","promise_4","encoding","fromJSON","obj","keys","name_1","serialization_7","registerClass","colonPos","indexOf","formatSpecifier","slice","map_7","formatKey","index","_resolutionX","_resolutionY","_wrappingStyle","_scaleBorderAndShadow","serialization_6","_parts","_containsTransformTag","normalizedTemplate_2","map_6","toLowerCase","_lastDialogueId","styleName","settings_2","_start","toTime","_end","_layer","misc_4","isNaN","text","_rawPartsString","_parsePartsString","_alignment","parse_2","possiblyIncorrectParses","serialization_5","reduce","previousValue","currentValue","parseFloat","normalizedTemplate_1","map_5","_name","misc_3","parse_1","_outlineThickness","_borderStyle","_shadowDepth","_marginLeft","_marginRight","_marginVertical","serialization_4","_filename","_type","_contents","serialization_3","_str","_readTill","nextNewLinePos","promise_3","_xhr","_pendingDeferred","_failedError","_onXhrProgress","_onXhrLoad","event","_onXhrError","deferred","_tryResolveNextLine","readyState","DONE","responseText","_buffer","_reader","_decoder","ignoreBOM","next","done","decode","rules","map_4","input","ParserRun","settings_1","_input","ruleFunction","_parseTree","ParseNode","_result","parse_dialogueParts","parent","current","_haveMore","enclosedTagsNode","parse_enclosedTags","whiteSpaceOrTextNode","parse_newline","parse_hardspace","parse_text","previousTextPart","inDrawingMode","pop","_peek","childNode","parse_tag_alpha","parse_tag_iclip","parse_tag_xbord","parse_tag_ybord","parse_tag_xshad","parse_tag_yshad","parse_tag_blur","parse_tag_bord","parse_tag_clip","parse_tag_fade","parse_tag_fscx","parse_tag_fscy","parse_tag_move","parse_tag_shad","parse_tag_fad","parse_tag_fax","parse_tag_fay","parse_tag_frx","parse_tag_fry","parse_tag_frz","parse_tag_fsp","parse_tag_fsplus","parse_tag_fsminus","parse_tag_org","parse_tag_pbo","parse_tag_pos","parse_tag_an","parse_tag_be","parse_tag_fn","parse_tag_fr","parse_tag_fs","parse_tag_kf","parse_tag_ko","parse_tag_1a","parse_tag_1c","parse_tag_2a","parse_tag_2c","parse_tag_3a","parse_tag_3c","parse_tag_4a","parse_tag_4c","parse_tag_a","parse_tag_b","parse_tag_c","parse_tag_i","parse_tag_k","parse_tag_K","parse_tag_p","parse_tag_q","parse_tag_r","parse_tag_s","parse_tag_t","parse_tag_u","parse_comment","valueNode","next2","parse_enableDisable","_parse_tag_clip_or_iclip","startNode","parse_decimal","endNode","a1Node","a2Node","a3Node","t1Node","t2Node","t3Node","t4Node","SweepingColorKaraoke","OutlineKaraoke","x1Node","y1Node","x2Node","y2Node","xNode","yNode","RotationOrigin","accelNode","firstNode","secondNode","thirdNode","transformTags","parse_drawingInstructions","currentType","numberParts","numberPart","splice","typePart","newType","parse_decimalInt32","isNegative","numberNode","parse_hexInt32","parse_decimalOrHexInt32","negative","numericalPart","parse_unsignedDecimal","characteristicNode","mantissaNode","parse_color","Color","parse_alpha","parse_colorWithAlpha","tagName","scaleNode","commandsNode","RectangularClip","VectorClip","makeTagParserFunction","tagConstructor","valueParser","required","self","_parent","_children","children","_value","_setEnd","newEnd","misc_2","registerWorkerCommand","commands_3","WorkerCommands","Parse","parameters","promise_2","_red","_green","_blue","_alpha","final","_duration","_x","_y","_x1","_y1","_x2","_y2","_t1","_t2","_a1","_a2","_a3","_t3","_t4","_accel","_tags","_inside","_instructions","addToString","ctorName","hasOwnProperty","propertyNames_1","Function","serialization_2","_x3","_y3","converter","validator","commands_2","supported","Worker","_scriptNode","currentScript","createWorker","scriptPath","channel_1","WorkerChannelImpl","WorkerGlobalScope","_comm","_pendingRequests","map_3","ev","_onMessage","data","request","command","promise_1","requestId","_lastRequestId","requestMessage","postMessage","serialization_1","cancelRequest","_respond","message","commands_1","Response","rawMessage","responseMessage","requestId_1","commandCallback","misc_1","getWorkerCommandHandler","Ping","workerCommands","map_2","handler","classes","map_1","size","JSON","stringify","hydratedValue","key_1","enqueueJob","MutationObserver","WebkitMutationObserver","process","nextTick","callback","pending_1","currentlyPending_1","div_1","observer","processing","processing_1","observe","attributes","SimplePromise","executor","_state","SimplePromiseState","PENDING","_fulfillReactions","_rejectReactions","_fulfilledValue","_rejectedReason","TypeError","_createResolvingFunctions","onFulfilled","onRejected","resultCapability","fulfillReaction","capabilities","rejectReaction","FULFILLED","_enqueueFulfilledReactionJob","REJECTED","_enqueueRejectedReactionJob","values","numUnresolved","race","values_1","alreadyResolved","resolution","_reject","_fulfill","_resolveWithThenable","thenable","reactions","reactions_1","reaction","reactions_2","handlerResult","_promise","enumerable","promises","first_rec","previousRejections","head","tail","SimpleMap","iterable","Array","isArray","iterable_2","element","_keyToProperty","_values","_keys","_size","callbackfn","thisArg","SimpleSet","iterable_1","_toProperty","_elements"],"mappings":"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","file":"libjass.js","sourceRoot":"","sourcesContent":["/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Debug mode. When true, libjass logs some debug messages.\n *\n * @type {boolean}\n */\nexport let debugMode: boolean = false;\n\n/**\n * Verbose debug mode. When true, libjass logs some more debug messages. This setting is independent of {@link libjass.debugMode}\n *\n * @type {boolean}\n */\nexport let verboseMode: boolean = false;\n\n/**\n * Sets the debug mode.\n *\n * @param {boolean} value\n */\nexport function setDebugMode(value: boolean): void {\n\tdebugMode = value;\n}\n\n/**\n * Sets the verbose debug mode.\n *\n * @param {boolean} value\n */\nexport function setVerboseMode(value: boolean): void {\n\tverboseMode = value;\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as settings from \"./settings\";\nexport { debugMode, verboseMode } from \"./settings\";\n\nimport * as set from \"./utility/set\";\nexport { Set } from \"./utility/set\";\n\nimport * as map from \"./utility/map\";\nexport { Map } from \"./utility/map\";\n\nimport * as promise from \"./utility/promise\";\nexport { Promise, DeferredPromise } from \"./utility/promise\";\n\nimport * as webworker from \"./webworker\";\nexport { webworker };\n\nimport * as parts from \"./parts\";\nexport { parts };\n\nimport * as parser from \"./parser\";\nexport { parser };\n\nimport * as renderers from \"./renderers\";\nexport { renderers };\n\nexport { serialize, deserialize } from \"./serialization\";\n\nexport { ASS } from \"./types/ass\";\nexport { Attachment, AttachmentType } from \"./types/attachment\";\nexport { Dialogue } from \"./types/dialogue\";\nexport { ScriptProperties } from \"./types/script-properties\";\nexport { Style } from \"./types/style\";\n\nexport { BorderStyle, Format, WrappingStyle } from \"./types/misc\";\n\nexport { version } from \"./version\";\n\n/**\n * Configures libjass with the given properties.\n *\n * @param {!*} newConfig\n * @param {?boolean} newConfig[\"debugMode\"] When true, libjass logs some debug messages.\n * @param {?boolean} newConfig[\"verboseMode\"] When true, libjass logs some more debug messages. This setting is independent of {@link libjass.debugMode}\n * @param {?function(new:Set, !Array.<T>=)} newConfig[\"Set\"] Sets the Set implementation used by libjass to the provided one. If null, {@link ./utility/set.SimpleSet} is used.\n * @param {?function(new:Map, !Array.<!Array.<*>>=)} newConfig[\"Map\"] Sets the Map implementation used by libjass to the provided one. If null, {@link ./utility/map.SimpleMap} is used.\n * @param {?function(new:Promise)} newConfig[\"Promise\"] Sets the Promise implementation used by libjass to the provided one. If null, {@link ./utility/promise.SimplePromise} is used.\n */\nexport function configure(newConfig: {\n\tdebugMode?: boolean,\n\tverboseMode?: boolean,\n\tSet?: typeof set.Set,\n\tMap?: typeof map.Map,\n\tPromise?: typeof promise.Promise,\n}): void {\n\tif (\"debugMode\" in newConfig) {\n\t\tsettings.setDebugMode(newConfig.debugMode);\n\t}\n\n\tif (\"verboseMode\" in newConfig) {\n\t\tsettings.setVerboseMode(newConfig.verboseMode);\n\t}\n\n\tif (\"Set\" in newConfig) {\n\t\tset.setImplementation(newConfig.Set);\n\t}\n\n\tif (\"Map\" in newConfig) {\n\t\tmap.setImplementation(newConfig.Map);\n\t}\n\n\tif (\"Promise\" in newConfig) {\n\t\tpromise.setImplementation(newConfig.Promise);\n\t}\n}\n\ndeclare const exports: any;\n\n// Getters below are to work around https://github.com/Microsoft/TypeScript/issues/6366\n\nObject.defineProperties(exports, {\n\tdebugMode: {\n\t\tget: () => settings.debugMode,\n\t\tset: value => {\n\t\t\tconsole.warn(\"Setter `libjass.debugMode = value` has been deprecated. Use `libjass.configure({ debugMode: value })` instead.\");\n\t\t\tsettings.setDebugMode(value);\n\t\t},\n\t},\n\n\tverboseMode: {\n\t\tget: () => settings.verboseMode,\n\t\tset: value => {\n\t\t\tconsole.warn(\"Setter `libjass.verboseMode = value` has been deprecated. Use `libjass.configure({ verboseMode: value })` instead.\");\n\t\t\tsettings.setVerboseMode(value);\n\t\t},\n\t},\n\n\tSet: {\n\t\tget: () => set.Set,\n\t\tset: value => {\n\t\t\tconsole.warn(\"Setter `libjass.Set = value` has been deprecated. Use `libjass.configure({ Set: value })` instead.\");\n\t\t\tset.setImplementation(value);\n\t\t},\n\t},\n\n\tMap: {\n\t\tget: () => map.Map,\n\t\tset: value => {\n\t\t\tconsole.warn(\"Setter `libjass.Map = value` has been deprecated. Use `libjass.configure({ Map: value })` instead.\");\n\t\t\tmap.setImplementation(value);\n\t\t},\n\t},\n\n\tPromise: {\n\t\tget: () => promise.Promise,\n\t\tset: value => {\n\t\t\tconsole.warn(\"Setter `libjass.Promise = value` has been deprecated. Use `libjass.configure({ Promise: value })` instead.\");\n\t\t\tpromise.setImplementation(value);\n\t\t},\n\t},\n});\n","/**\n * The version of libjass. An array like\n *\n *     [\"0.12.0\", 0, 12, 0]\n *\n * @type {!Array.<string|number>}\n */\nexport const version = [\"0.12.0\",0,12,0];\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Clock, ClockEvent, EventSource } from \"./clocks/base\";\nexport { AutoClock } from \"./clocks/auto\";\nexport { ManualClock } from \"./clocks/manual\";\nexport { VideoClock } from \"./clocks/video\";\n\nexport { DefaultRenderer } from \"./default\";\nexport { NullRenderer } from \"./null\";\nexport { WebRenderer } from \"./web/renderer\";\nexport { RendererSettings } from \"./settings\";\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VideoClock } from \"./clocks/video\";\nimport { RendererSettings } from \"./settings\";\nimport { WebRenderer } from \"./web/renderer\";\n\nimport { ASS } from \"../types/ass\";\n\n/**\n * A default renderer implementation.\n *\n * @param {!HTMLVideoElement} video\n * @param {!libjass.ASS} ass\n * @param {libjass.renderers.RendererSettings} settings\n */\nexport class DefaultRenderer extends WebRenderer {\n\tconstructor(private _video: HTMLVideoElement, ass: ASS, settings?: RendererSettings) {\n\t\tsuper(ass, new VideoClock(_video), document.createElement(\"div\"), settings);\n\n\t\tthis._video.parentElement.replaceChild(this.libjassSubsWrapper, this._video);\n\t\tthis.libjassSubsWrapper.insertBefore(this._video, this.libjassSubsWrapper.firstElementChild);\n\t}\n\n\t/**\n\t * Resize the subtitles to the dimensions of the video element.\n\t *\n\t * This method accounts for letterboxing if the video element's size is not the same ratio as the video resolution.\n\t */\n\tresize(): void {\n\t\t// Handle letterboxing around the video. If the width or height are greater than the video can be, then consider that dead space.\n\n\t\tconst videoWidth = this._video.videoWidth;\n\t\tconst videoHeight = this._video.videoHeight;\n\t\tconst videoOffsetWidth = this._video.offsetWidth;\n\t\tconst videoOffsetHeight = this._video.offsetHeight;\n\n\t\tconst ratio = Math.min(videoOffsetWidth / videoWidth, videoOffsetHeight / videoHeight);\n\t\tconst subsWrapperWidth = videoWidth * ratio;\n\t\tconst subsWrapperHeight = videoHeight * ratio;\n\t\tconst subsWrapperLeft = (videoOffsetWidth - subsWrapperWidth) / 2;\n\t\tconst subsWrapperTop = (videoOffsetHeight - subsWrapperHeight) / 2;\n\n\t\tsuper.resize(subsWrapperWidth, subsWrapperHeight, subsWrapperLeft, subsWrapperTop);\n\t}\n\n\t/**\n\t * @deprecated\n\t */\n\tresizeVideo(): void {\n\t\tconsole.warn(\"`DefaultRenderer.resizeVideo(width, height)` has been deprecated. Use `DefaultRenderer.resize()` instead.\");\n\t\tthis.resize();\n\t}\n\n\tprotected _ready(): void {\n\t\tthis.resize();\n\n\t\tsuper._ready();\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnimationCollection } from \"./animation-collection\";\nimport { DrawingStyles } from \"./drawing-styles\";\nimport { calculateFontMetrics } from \"./font-size\";\nimport { Keyframe } from \"./keyframe\";\nimport { SpanStyles } from \"./span-styles\";\n\nimport { Clock, EventSource } from \"../clocks/base\";\n\nimport { NullRenderer } from \"../null\";\nimport { RendererSettings } from \"../settings\";\n\nimport { getTtfNames } from \"../../parser/ttf\";\n\nimport * as parts from \"../../parts\";\n\nimport { debugMode } from \"../../settings\";\n\nimport { ASS } from \"../../types/ass\";\nimport { AttachmentType } from \"../../types/attachment\";\nimport { Dialogue } from \"../../types/dialogue\";\nimport { WrappingStyle } from \"../../types/misc\";\n\nimport { mixin } from \"../../utility/mixin\";\nimport { Map } from \"../../utility/map\";\nimport { Promise, any as Promise_any, first as Promise_first, lastly as Promise_finally } from \"../../utility/promise\";\nimport { Set } from \"../../utility/set\";\n\ndeclare const global: {\n\tdocument: {\n\t\tfonts?: FontFaceSet;\n\t};\n};\n\ninterface FontFaceSet {\n\t/**\n\t * @param {!FontFace} fontFace\n\t * @return {!FontFaceSet}\n\t */\n\tadd(fontFace: FontFace): FontFaceSet;\n\n\t/**\n\t * @param {function(!FontFace, !FontFace, !FontFaceSet)} callbackfn A function that is called with each value in the set.\n\t * @param {*} thisArg\n\t */\n\tforEach(callbackfn: (fontFace: FontFace, index: FontFace, set: FontFaceSet) => void, thisArg?: any): void;\n}\n\ninterface FontFace {\n\t/** @type {string} */\n\tfamily: string;\n\n\t/**\n\t * @return {!Promise.<!FontFace>}\n\t */\n\tload(): Promise<FontFace>;\n}\n\ndeclare var FontFace: {\n\tnew (family: string, source: string): FontFace;\n};\n\nconst fontSrcUrlRegex = /^(url|local)\\([\"']?(.+?)[\"']?\\)$/;\n\n/**\n * A renderer implementation that draws subtitles to the given <div>\n *\n * After the renderer fires its ready event, {@link libjass.renderers.WebRenderer.resize} must be called to initialize its size before starting the clock.\n *\n * @param {!libjass.ASS} ass\n * @param {!libjass.renderers.Clock} clock\n * @param {!HTMLDivElement} libjassSubsWrapper Subtitles will be rendered to this <div>\n * @param {!libjass.renderers.RendererSettings} settings\n */\nexport class WebRenderer extends NullRenderer implements EventSource<string> {\n\tprivate _subsWrapper: HTMLDivElement;\n\tprivate _subsWrapperWidth: number; // this._subsWrapper.offsetWidth is expensive, so cache this.\n\n\tprivate _layerWrappers: HTMLDivElement[] = [];\n\tprivate _layerAlignmentWrappers: HTMLDivElement[][] = [];\n\tprivate _fontSizeElement: HTMLDivElement;\n\n\tprivate _fontMetricsCache: Map<string, [number, number]> = new Map<string, [number, number]>();\n\n\tprivate _currentSubs: Map<Dialogue, HTMLDivElement> = new Map<Dialogue, HTMLDivElement>();\n\tprivate _preRenderedSubs: Map<number, PreRenderedSub> = new Map<number, PreRenderedSub>();\n\n\tprivate _scaleX: number;\n\tprivate _scaleY: number;\n\n\tconstructor(ass: ASS, clock: Clock, private _libjassSubsWrapper: HTMLDivElement, settings?: RendererSettings) {\n\t\tsuper(ass, clock, (() => {\n\t\t\tif (!(_libjassSubsWrapper instanceof HTMLDivElement)) {\n\t\t\t\tconst temp = settings;\n\t\t\t\tsettings = _libjassSubsWrapper as any;\n\t\t\t\t_libjassSubsWrapper = temp as any;\n\t\t\t\tconsole.warn(\"WebRenderer's constructor now takes libjassSubsWrapper as the third parameter and settings as the fourth parameter. Please update the caller.\");\n\t\t\t}\n\n\t\t\treturn settings;\n\t\t})());\n\n\t\tthis._libjassSubsWrapper.classList.add(\"libjass-wrapper\");\n\n\t\tthis._subsWrapper = document.createElement(\"div\");\n\t\tthis._libjassSubsWrapper.appendChild(this._subsWrapper);\n\t\tthis._subsWrapper.className = \"libjass-subs\";\n\n\t\tthis._fontSizeElement = document.createElement(\"div\");\n\t\tthis._libjassSubsWrapper.appendChild(this._fontSizeElement);\n\t\tthis._fontSizeElement.className = \"libjass-font-measure\";\n\t\tthis._fontSizeElement.appendChild(document.createTextNode(\"M\"));\n\n\t\t// Preload fonts\n\n\t\tif (debugMode) {\n\t\t\tconsole.log(`Preloading fonts...`);\n\t\t}\n\n\t\tconst preloadFontPromises: Promise<any>[] = [];\n\n\t\tconst fontFetchPromisesCache = new Map<string, Promise<any>>();\n\n\t\tconst fontMap = (this.settings.fontMap === null) ? new Map<string, string | string[]>() : this.settings.fontMap;\n\n\t\tconst attachedFontsMap = new Map<string, string[]>();\n\t\tif (this.settings.useAttachedFonts) {\n\t\t\tass.attachments.forEach(attachment => {\n\t\t\t\tif (attachment.type !== AttachmentType.Font) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet ttfNames: Set<string>;\n\t\t\t\ttry {\n\t\t\t\t\tttfNames = getTtfNames(attachment);\n\t\t\t\t}\n\t\t\t\tcatch (ex) {\n\t\t\t\t\tconsole.error(ex);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst attachmentUrl = `data:application/x-font-ttf;base64,${ attachment.contents }`;\n\n\t\t\t\tttfNames.forEach(name => {\n\t\t\t\t\tlet correspondingFontMapEntry = fontMap.get(name);\n\t\t\t\t\tif (correspondingFontMapEntry !== undefined) {\n\t\t\t\t\t\t// Also defined in fontMap.\n\t\t\t\t\t\tif (typeof correspondingFontMapEntry !== \"string\") {\n\t\t\t\t\t\t\t// Entry in fontMap is an array. Append this URL to it.\n\t\t\t\t\t\t\tcorrespondingFontMapEntry.push(attachmentUrl);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t/* The entry in fontMap is a string. Don't append this URL to it. Instead, put it in attachedFontsMap now\n\t\t\t\t\t\t\t * and it'll be merged with the entry from fontMap later. If it was added here, and later the string needed\n\t\t\t\t\t\t\t * to be split on commas, then the commas in the data URI would break the result.\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tlet existingList = attachedFontsMap.get(name);\n\t\t\t\t\t\t\tif (existingList === undefined) {\n\t\t\t\t\t\t\t\tattachedFontsMap.set(name, existingList = []);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\texistingList.push(attachmentUrl);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Not defined in fontMap. Add it there.\n\t\t\t\t\t\tfontMap.set(name, [attachmentUrl]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfontMap.forEach((srcs, fontFamily) => {\n\t\t\tlet fontFamilyMetricsPromise: Promise<[number, number]>;\n\n\t\t\tif (global.document.fonts && global.document.fonts.add) {\n\t\t\t\t// value should be string. If it's string[], combine it into string\n\t\t\t\tlet source =\n\t\t\t\t\t(typeof srcs === \"string\") ?\n\t\t\t\t\t\tsrcs :\n\t\t\t\t\t\tsrcs.map(src =>\n\t\t\t\t\t\t\t(src.match(fontSrcUrlRegex) !== null) ?\n\t\t\t\t\t\t\t\tsrc :\n\t\t\t\t\t\t\t\t`url(\"${ src }\")`).join(\", \");\n\n\t\t\t\tconst attachedFontUrls = attachedFontsMap.get(fontFamily);\n\t\t\t\tif (attachedFontUrls !== undefined) {\n\t\t\t\t\tfor (const url of attachedFontUrls) {\n\t\t\t\t\t\tsource += `, url(\"${ url }\")`;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet existingFontFaces: FontFace[] = [];\n\t\t\t\tglobal.document.fonts.forEach(fontFace => {\n\t\t\t\t\tif (fontFace.family === fontFamily || fontFace.family === `\"${ fontFamily }\"`) {\n\t\t\t\t\t\texistingFontFaces.push(fontFace);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tlet fontFetchPromise: Promise<FontFace>;\n\t\t\t\tif (existingFontFaces.length === 0) {\n\t\t\t\t\tconst fontFace = new FontFace(fontFamily, source);\n\t\t\t\t\tconst quotedFontFace = new FontFace(`\"${ fontFamily }\"`, source);\n\n\t\t\t\t\tglobal.document.fonts.add(fontFace);\n\t\t\t\t\tglobal.document.fonts.add(quotedFontFace);\n\n\t\t\t\t\tfontFetchPromise = Promise_any([fontFace.load(), quotedFontFace.load()]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfontFetchPromise = Promise_any(existingFontFaces.map(fontFace => fontFace.load()));\n\t\t\t\t}\n\n\t\t\t\tfontFamilyMetricsPromise = this._calculateFontMetricsAfterFetch(fontFamily, fontFetchPromise.catch(reason => {\n\t\t\t\t\tconsole.warn(`Fetching fonts for ${ fontFamily } at ${ source } failed: %o`, reason);\n\t\t\t\t\treturn null;\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// value should be string[]. If it's string, split it into string[]\n\t\t\t\tlet urls =\n\t\t\t\t\t((typeof srcs === \"string\") ?\n\t\t\t\t\t\tsrcs.split(/,/) :\n\t\t\t\t\t\tsrcs).map(url => url.trim()).map(url => {\n\t\t\t\t\t\t\tconst match = url.match(fontSrcUrlRegex);\n\n\t\t\t\t\t\t\tif (match === null) {\n\t\t\t\t\t\t\t\t// A URL\n\t\t\t\t\t\t\t\treturn url;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (match[1] === \"local\") {\n\t\t\t\t\t\t\t\t// A local() URL. Don't fetch it.\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// A url() URL. Extract the raw URL.\n\t\t\t\t\t\t\treturn match[2];\n\t\t\t\t\t\t}).filter(url => url !== null);\n\n\t\t\t\tconst attachedFontUrls = attachedFontsMap.get(fontFamily);\n\t\t\t\tif (attachedFontUrls !== undefined) {\n\t\t\t\t\turls = urls.concat(attachedFontUrls);\n\t\t\t\t}\n\n\t\t\t\tconst thisFontFamilysFetchPromises =\n\t\t\t\t\turls.map(url => {\n\t\t\t\t\t\tlet fontFetchPromise = fontFetchPromisesCache.get(url);\n\t\t\t\t\t\tif (fontFetchPromise === undefined) {\n\t\t\t\t\t\t\tfontFetchPromise =\n\t\t\t\t\t\t\t\tnew Promise<void>((resolve, reject) => {\n\t\t\t\t\t\t\t\t\tconst xhr = new XMLHttpRequest();\n\t\t\t\t\t\t\t\t\txhr.addEventListener(\"load\", () => {\n\t\t\t\t\t\t\t\t\t\tif (debugMode) {\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(`Preloaded ${ url }.`);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\txhr.addEventListener(\"error\", err => {\n\t\t\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\txhr.open(\"GET\", url, true);\n\t\t\t\t\t\t\t\t\txhr.send();\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tfontFetchPromisesCache.set(url, fontFetchPromise);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn fontFetchPromise;\n\t\t\t\t\t});\n\n\t\t\t\tconst allFontsFetchedPromise =\n\t\t\t\t\t(thisFontFamilysFetchPromises.length === 0) ?\n\t\t\t\t\t\tPromise.resolve<void>(null) :\n\t\t\t\t\t\tPromise_first(thisFontFamilysFetchPromises).catch(reason => {\n\t\t\t\t\t\t\tconsole.warn(`Fetching fonts for ${ fontFamily } at ${ urls.join(\", \") } failed: %o`, reason);\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t});\n\n\t\t\t\tfontFamilyMetricsPromise = this._calculateFontMetricsAfterFetch(fontFamily, allFontsFetchedPromise);\n\t\t\t}\n\n\t\t\tpreloadFontPromises.push(fontFamilyMetricsPromise.then(metrics => this._fontMetricsCache.set(fontFamily, metrics)));\n\t\t});\n\n\t\tPromise.all(preloadFontPromises).then(() => {\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.log(\"All fonts have been preloaded.\");\n\t\t\t}\n\n\t\t\tthis._ready();\n\t\t});\n\t}\n\n\t/**\n\t * @type {!HTMLDivElement}\n\t */\n\tget libjassSubsWrapper(): HTMLDivElement {\n\t\treturn this._libjassSubsWrapper;\n\t}\n\n\t/**\n\t * Resize the subtitles to the given new dimensions.\n\t *\n\t * @param {number} width\n\t * @param {number} height\n\t * @param {number=0} left\n\t * @param {number=0} top\n\t */\n\tresize(width: number, height: number, left: number = 0, top: number = 0): void {\n\t\tthis._removeAllSubs();\n\n\t\tthis._subsWrapper.style.width = `${ width.toFixed(3) }px`;\n\t\tthis._subsWrapper.style.height = `${ height.toFixed(3) }px`;\n\t\tthis._subsWrapper.style.left = `${ left.toFixed(3) }px`;\n\t\tthis._subsWrapper.style.top = `${ top.toFixed(3) }px`;\n\n\t\tthis._subsWrapperWidth = width;\n\n\t\tthis._scaleX = width / this.ass.properties.resolutionX;\n\t\tthis._scaleY = height / this.ass.properties.resolutionY;\n\n\t\t// Any dialogues which have been pre-rendered will need to be pre-rendered again.\n\t\tthis._preRenderedSubs.clear();\n\n\t\t// this.currentTime will be -1 if resize() is called before the clock begins playing for the first time. In this situation, there is no need to force a redraw.\n\t\tif (this.clock.currentTime !== -1) {\n\t\t\tthis._onClockTick();\n\t\t}\n\t}\n\n\t/**\n\t * The magic happens here. The subtitle div is rendered and stored. Call {@link libjass.renderers.WebRenderer.draw} to get a clone of the div to display.\n\t *\n\t * @param {!libjass.Dialogue} dialogue\n\t * @return {PreRenderedSub}\n\t */\n\tpreRender(dialogue: Dialogue): PreRenderedSub {\n\t\tconst currentTimeRelativeToDialogueStart = this.clock.currentTime - dialogue.start;\n\n\t\tif (dialogue.containsTransformTag && currentTimeRelativeToDialogueStart < 0) {\n\t\t\t// draw() expects this function to always return non-null, but it only calls this function when currentTimeRelativeToDialogueStart would be >= 0\n\t\t\treturn null;\n\t\t}\n\n\t\tconst alreadyPreRenderedSub = this._preRenderedSubs.get(dialogue.id);\n\t\tif (alreadyPreRenderedSub) {\n\t\t\treturn alreadyPreRenderedSub;\n\t\t}\n\n\t\tconst sub = document.createElement(\"div\");\n\n\t\tsub.style.marginLeft = `${ (this._scaleX * dialogue.style.marginLeft).toFixed(3) }px`;\n\t\tsub.style.marginRight = `${ (this._scaleX * dialogue.style.marginRight).toFixed(3) }px`;\n\t\tsub.style.marginTop = sub.style.marginBottom = `${ (this._scaleY * dialogue.style.marginVertical).toFixed(3) }px`;\n\t\tsub.style.minWidth = `${ (this._subsWrapperWidth - this._scaleX * (dialogue.style.marginLeft + dialogue.style.marginRight)).toFixed(3) }px`;\n\n\t\tconst dialogueAnimationStylesElement = document.createElement(\"style\");\n\t\tdialogueAnimationStylesElement.id = `libjass-animation-styles-${ this.id }-${ dialogue.id }`;\n\t\tdialogueAnimationStylesElement.type = \"text/css\";\n\n\t\tconst dialogueAnimationCollection = new AnimationCollection(this, dialogueAnimationStylesElement);\n\n\t\tconst svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\tsvgElement.setAttribute(\"version\", \"1.1\");\n\t\tsvgElement.setAttribute(\"class\", \"libjass-filters\");\n\t\tsvgElement.width.baseVal.valueAsString = \"0\";\n\t\tsvgElement.height.baseVal.valueAsString = \"0\";\n\n\t\tconst svgDefsElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n\t\tsvgElement.appendChild(svgDefsElement);\n\n\t\tlet currentSpan: HTMLSpanElement = null;\n\t\tconst currentSpanStyles = new SpanStyles(this, dialogue, this._scaleX, this._scaleY, this.settings, this._fontSizeElement, svgDefsElement, this._fontMetricsCache);\n\n\t\tlet currentAnimationCollection: AnimationCollection = null;\n\n\t\tlet previousAddNewLine = false; // If two or more \\N's are encountered in sequence, then all but the first will be created using currentSpanStyles.makeNewLine() instead\n\t\tconst startNewSpan = (addNewLine: boolean): void => {\n\t\t\tif (currentSpan !== null && currentSpan.hasChildNodes()) {\n\t\t\t\tsub.appendChild(currentSpanStyles.setStylesOnSpan(currentSpan, currentAnimationCollection));\n\t\t\t}\n\n\t\t\tif (currentAnimationCollection !== null) {\n\t\t\t\tcurrentAnimationCollection.animationDelays.forEach((delay, name) => dialogueAnimationCollection.animationDelays.set(name, delay));\n\t\t\t}\n\n\t\t\tif (addNewLine) {\n\t\t\t\tif (previousAddNewLine) {\n\t\t\t\t\tsub.appendChild(currentSpanStyles.makeNewLine());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsub.appendChild(document.createElement(\"br\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentSpan = document.createElement(\"span\");\n\t\t\tcurrentAnimationCollection = new AnimationCollection(this, dialogueAnimationStylesElement);\n\n\t\t\tpreviousAddNewLine = addNewLine;\n\t\t};\n\t\tstartNewSpan(false);\n\n\t\tconst currentDrawingStyles = new DrawingStyles(this._scaleX, this._scaleY);\n\n\t\tlet wrappingStyle = this.ass.properties.wrappingStyle;\n\n\t\tlet karaokeTimesAccumulator = 0;\n\n\t\tfor (const part of dialogue.parts) {\n\t\t\tif (part instanceof parts.Italic) {\n\t\t\t\tcurrentSpanStyles.italic = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Bold) {\n\t\t\t\tcurrentSpanStyles.bold = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Underline) {\n\t\t\t\tcurrentSpanStyles.underline = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.StrikeThrough) {\n\t\t\t\tcurrentSpanStyles.strikeThrough = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Border) {\n\t\t\t\tcurrentSpanStyles.outlineWidth = part.value;\n\t\t\t\tcurrentSpanStyles.outlineHeight = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.BorderX) {\n\t\t\t\tcurrentSpanStyles.outlineWidth = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.BorderY) {\n\t\t\t\tcurrentSpanStyles.outlineHeight = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Shadow) {\n\t\t\t\tcurrentSpanStyles.shadowDepthX = part.value;\n\t\t\t\tcurrentSpanStyles.shadowDepthY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ShadowX) {\n\t\t\t\tcurrentSpanStyles.shadowDepthX = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ShadowY) {\n\t\t\t\tcurrentSpanStyles.shadowDepthY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Blur) {\n\t\t\t\tcurrentSpanStyles.blur = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.GaussianBlur) {\n\t\t\t\tcurrentSpanStyles.gaussianBlur = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontName) {\n\t\t\t\tcurrentSpanStyles.fontName = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontSize) {\n\t\t\t\tcurrentSpanStyles.fontSize = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontSizePlus) {\n\t\t\t\tcurrentSpanStyles.fontSize *= (1 + part.value);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontSizeMinus) {\n\t\t\t\tcurrentSpanStyles.fontSize *= (1 - part.value);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontScaleX) {\n\t\t\t\tcurrentSpanStyles.fontScaleX = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.FontScaleY) {\n\t\t\t\tcurrentSpanStyles.fontScaleY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.LetterSpacing) {\n\t\t\t\tcurrentSpanStyles.letterSpacing = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.RotateX) {\n\t\t\t\tcurrentSpanStyles.rotationX = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.RotateY) {\n\t\t\t\tcurrentSpanStyles.rotationY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.RotateZ) {\n\t\t\t\tcurrentSpanStyles.rotationZ = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.SkewX) {\n\t\t\t\tcurrentSpanStyles.skewX = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.SkewY) {\n\t\t\t\tcurrentSpanStyles.skewY = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.PrimaryColor) {\n\t\t\t\tcurrentSpanStyles.primaryColor = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.SecondaryColor) {\n\t\t\t\tcurrentSpanStyles.secondaryColor = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.OutlineColor) {\n\t\t\t\tcurrentSpanStyles.outlineColor = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ShadowColor) {\n\t\t\t\tcurrentSpanStyles.shadowColor = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Alpha) {\n\t\t\t\tcurrentSpanStyles.primaryAlpha = part.value;\n\t\t\t\tcurrentSpanStyles.secondaryAlpha = part.value;\n\t\t\t\tcurrentSpanStyles.outlineAlpha = part.value;\n\t\t\t\tcurrentSpanStyles.shadowAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.PrimaryAlpha) {\n\t\t\t\tcurrentSpanStyles.primaryAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.SecondaryAlpha) {\n\t\t\t\tcurrentSpanStyles.secondaryAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.OutlineAlpha) {\n\t\t\t\tcurrentSpanStyles.outlineAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ShadowAlpha) {\n\t\t\t\tcurrentSpanStyles.shadowAlpha = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Alignment) {\n\t\t\t\t// Already handled in Dialogue\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ColorKaraoke) {\n\t\t\t\tstartNewSpan(false);\n\n\t\t\t\tcurrentAnimationCollection.add(\"step-end\", [\n\t\t\t\t\tnew Keyframe(0, new Map([\n\t\t\t\t\t\t[\"color\", currentSpanStyles.secondaryColor.withAlpha(currentSpanStyles.secondaryAlpha).toString()],\n\t\t\t\t\t])), new Keyframe(karaokeTimesAccumulator, new Map([\n\t\t\t\t\t\t[\"color\", currentSpanStyles.primaryColor.withAlpha(currentSpanStyles.primaryAlpha).toString()],\n\t\t\t\t\t]))\n\t\t\t\t]);\n\n\t\t\t\tkaraokeTimesAccumulator += part.duration;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.WrappingStyle) {\n\t\t\t\twrappingStyle = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Reset) {\n\t\t\t\tconst newStyleName = part.value;\n\t\t\t\tif (newStyleName === null) {\n\t\t\t\t\tcurrentSpanStyles.reset(null);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurrentSpanStyles.reset(this.ass.styles.get(newStyleName));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Position) {\n\t\t\t\tsub.style.position = \"absolute\";\n\t\t\t\tsub.style.left = `${ (this._scaleX * part.x).toFixed(3) }px`;\n\t\t\t\tsub.style.top = `${ (this._scaleY * part.y).toFixed(3) }px`;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Move) {\n\t\t\t\tsub.style.position = \"absolute\";\n\t\t\t\tdialogueAnimationCollection.add(\"linear\", [new Keyframe(0, new Map([\n\t\t\t\t\t[\"left\", `${ (this._scaleX * part.x1).toFixed(3) }px`],\n\t\t\t\t\t[\"top\", `${ (this._scaleY * part.y1).toFixed(3) }px`],\n\t\t\t\t])), new Keyframe(part.t1, new Map([\n\t\t\t\t\t[\"left\", `${ (this._scaleX * part.x1).toFixed(3) }px`],\n\t\t\t\t\t[\"top\", `${ (this._scaleY * part.y1).toFixed(3) }px`],\n\t\t\t\t])), new Keyframe(part.t2, new Map([\n\t\t\t\t\t[\"left\", `${ (this._scaleX * part.x2).toFixed(3) }px`],\n\t\t\t\t\t[\"top\", `${ (this._scaleY * part.y2).toFixed(3) }px`],\n\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start, new Map([\n\t\t\t\t\t[\"left\", `${ (this._scaleX * part.x2).toFixed(3) }px`],\n\t\t\t\t\t[\"top\", `${ (this._scaleY * part.y2).toFixed(3) }px`],\n\t\t\t\t]))]);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Fade) {\n\t\t\t\tdialogueAnimationCollection.add(\"linear\", [new Keyframe(0, new Map([\n\t\t\t\t\t[\"opacity\", \"0\"],\n\t\t\t\t])), new Keyframe(part.start, new Map([\n\t\t\t\t\t[\"opacity\", \"1\"],\n\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start - part.end, new Map([\n\t\t\t\t\t[\"opacity\", \"1\"],\n\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start, new Map([\n\t\t\t\t\t[\"opacity\", \"0\"],\n\t\t\t\t]))]);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.ComplexFade) {\n\t\t\t\tdialogueAnimationCollection.add(\"linear\", [new Keyframe(0, new Map([\n\t\t\t\t\t[\"opacity\", part.a1.toFixed(3)],\n\t\t\t\t])), new Keyframe(part.t1, new Map([\n\t\t\t\t\t[\"opacity\", part.a1.toFixed(3)],\n\t\t\t\t])), new Keyframe(part.t2, new Map([\n\t\t\t\t\t[\"opacity\", part.a2.toFixed(3)],\n\t\t\t\t])), new Keyframe(part.t3, new Map([\n\t\t\t\t\t[\"opacity\", part.a2.toFixed(3)],\n\t\t\t\t])), new Keyframe(part.t4, new Map([\n\t\t\t\t\t[\"opacity\", part.a3.toFixed(3)],\n\t\t\t\t])), new Keyframe(dialogue.end - dialogue.start, new Map([\n\t\t\t\t\t[\"opacity\", part.a3.toFixed(3)],\n\t\t\t\t]))]);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Transform) {\n\t\t\t\tconst progression =\n\t\t\t\t\t(currentTimeRelativeToDialogueStart <= part.start) ? 0 :\n\t\t\t\t\t(currentTimeRelativeToDialogueStart >= part.end) ? 1 :\n\t\t\t\t\tMath.pow((currentTimeRelativeToDialogueStart - part.start) / (part.end - part.start), part.accel);\n\n\t\t\t\tfor (const tag of part.tags) {\n\t\t\t\t\tif (tag instanceof parts.Border) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineWidth += progression * (tag.value - currentSpanStyles.outlineWidth);\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineHeight += progression * (tag.value - currentSpanStyles.outlineHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineWidth = null;\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineHeight = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.BorderX) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineWidth += progression * (tag.value - currentSpanStyles.outlineWidth);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineWidth = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.BorderY) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineHeight += progression * (tag.value - currentSpanStyles.outlineHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineHeight = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.Shadow) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowDepthX += progression * (tag.value - currentSpanStyles.shadowDepthX);\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowDepthY += progression * (tag.value - currentSpanStyles.shadowDepthY);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowDepthX = null;\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowDepthY = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.ShadowX) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowDepthX += progression * (tag.value - currentSpanStyles.shadowDepthX);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowDepthX = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.ShadowY) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowDepthY += progression * (tag.value - currentSpanStyles.shadowDepthY);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowDepthY = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.Blur) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.blur += progression * (tag.value - currentSpanStyles.blur);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.blur = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.GaussianBlur) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.gaussianBlur += progression * (tag.value - currentSpanStyles.gaussianBlur);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.gaussianBlur = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.FontSize) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.fontSize += progression * (tag.value - currentSpanStyles.fontSize);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.fontSize = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.FontSizePlus) {\n\t\t\t\t\t\tcurrentSpanStyles.fontSize *= (1 + progression * tag.value);\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.FontSizeMinus) {\n\t\t\t\t\t\tcurrentSpanStyles.fontSize *= (1 - progression * tag.value);\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.FontScaleX) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.fontScaleX += progression * (tag.value - currentSpanStyles.fontScaleX);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.fontScaleX = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.FontScaleY) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.fontScaleY += progression * (tag.value - currentSpanStyles.fontScaleY);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.fontScaleY = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.LetterSpacing) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.letterSpacing += progression * (tag.value - currentSpanStyles.letterSpacing);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.letterSpacing = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.RotateX) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.rotationX += progression * (tag.value - currentSpanStyles.rotationX);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.rotationX = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.RotateY) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.rotationY += progression * (tag.value - currentSpanStyles.rotationY);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.rotationY = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.RotateZ) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.rotationZ += progression * (tag.value - currentSpanStyles.rotationZ);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.rotationZ = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.SkewX) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.skewX += progression * (tag.value - currentSpanStyles.skewX);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.skewX = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.SkewY) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.skewY += progression * (tag.value - currentSpanStyles.skewY);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.skewY = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.PrimaryColor) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.primaryColor = currentSpanStyles.primaryColor.interpolate(tag.value, progression);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.primaryColor = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.SecondaryColor) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.secondaryColor = currentSpanStyles.secondaryColor.interpolate(tag.value, progression);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.secondaryColor = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.OutlineColor) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineColor = currentSpanStyles.outlineColor.interpolate(tag.value, progression);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineColor = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.ShadowColor) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowColor = currentSpanStyles.shadowColor.interpolate(tag.value, progression);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowColor = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.Alpha) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.primaryAlpha += progression * (tag.value - currentSpanStyles.primaryAlpha);\n\t\t\t\t\t\t\tcurrentSpanStyles.secondaryAlpha += progression * (tag.value - currentSpanStyles.secondaryAlpha);\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineAlpha += progression * (tag.value - currentSpanStyles.outlineAlpha);\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowAlpha += progression * (tag.value - currentSpanStyles.shadowAlpha);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.primaryAlpha = null;\n\t\t\t\t\t\t\tcurrentSpanStyles.secondaryAlpha = null;\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineAlpha = null;\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowAlpha = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.PrimaryAlpha) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.primaryAlpha += progression * (tag.value - currentSpanStyles.primaryAlpha);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.primaryAlpha = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.SecondaryAlpha) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.secondaryAlpha += progression * (tag.value - currentSpanStyles.secondaryAlpha);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.secondaryAlpha = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.OutlineAlpha) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineAlpha += progression * (tag.value - currentSpanStyles.outlineAlpha);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.outlineAlpha = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse if (tag instanceof parts.ShadowAlpha) {\n\t\t\t\t\t\tif (tag.value !== null) {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowAlpha += progression * (tag.value - currentSpanStyles.shadowAlpha);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcurrentSpanStyles.shadowAlpha = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.DrawingMode) {\n\t\t\t\tif (part.scale !== 0) {\n\t\t\t\t\tcurrentDrawingStyles.scale = part.scale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.DrawingBaselineOffset) {\n\t\t\t\tcurrentDrawingStyles.baselineOffset = part.value;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.DrawingInstructions) {\n\t\t\t\tcurrentSpan.appendChild(currentDrawingStyles.toSVG(part, currentSpanStyles.primaryColor.withAlpha(currentSpanStyles.primaryAlpha)));\n\t\t\t\tstartNewSpan(false);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Text) {\n\t\t\t\tcurrentSpan.appendChild(document.createTextNode(part.value + \"\\u200C\"));\n\t\t\t\tstartNewSpan(false);\n\t\t\t}\n\n\t\t\telse if (debugMode && part instanceof parts.Comment) {\n\t\t\t\tcurrentSpan.appendChild(document.createTextNode(part.value));\n\t\t\t\tstartNewSpan(false);\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.NewLine) {\n\t\t\t\tstartNewSpan(true);\n\t\t\t}\n\t\t}\n\n\t\tlet divTransformStyle = \"\";\n\t\tconst transformOrigin = WebRenderer._transformOrigins[dialogue.alignment];\n\t\tconst transformOriginString = `${ transformOrigin[0] }% ${ transformOrigin[1] }%`;\n\n\t\tfor (const part of dialogue.parts) {\n\t\t\tif (part instanceof parts.Position || part instanceof parts.Move) {\n\n\t\t\t\tdivTransformStyle = `translate(${ -transformOrigin[0] }%, ${ -transformOrigin[1] }%) translate(-${ sub.style.marginLeft }, -${ sub.style.marginTop })`;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (currentSpanStyles.rotationY !== 0) {\n\t\t\tdivTransformStyle += ` rotateY(${ currentSpanStyles.rotationY }deg)`;\n\t\t}\n\t\tif (currentSpanStyles.rotationX !== 0) {\n\t\t\tdivTransformStyle += ` rotateX(${ currentSpanStyles.rotationX }deg)`;\n\t\t}\n\t\tif (currentSpanStyles.rotationZ !== 0) {\n\t\t\tdivTransformStyle += ` rotateZ(${ -1 * currentSpanStyles.rotationZ }deg)`;\n\t\t}\n\n\t\tsub.style.webkitTransform = divTransformStyle;\n\t\tsub.style.transform = divTransformStyle;\n\n\t\tsub.style.webkitTransformOrigin = transformOriginString;\n\t\tsub.style.transformOrigin = transformOriginString;\n\n\t\tswitch (wrappingStyle) {\n\t\t\tcase WrappingStyle.EndOfLineWrapping:\n\t\t\t\tsub.style.whiteSpace = \"pre-wrap\";\n\t\t\t\tbreak;\n\n\t\t\tcase WrappingStyle.NoLineWrapping:\n\t\t\t\tsub.style.whiteSpace = \"pre\";\n\t\t\t\tbreak;\n\n\t\t\tcase WrappingStyle.SmartWrappingWithWiderTopLine:\n\t\t\tcase WrappingStyle.SmartWrappingWithWiderBottomLine:\n\t\t\t\t/* Not supported. Treat the same as EndOfLineWrapping */\n\t\t\t\tsub.style.whiteSpace = \"pre-wrap\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (sub.style.position !== \"\") {\n\t\t\t// Explicitly set text alignment on absolutely-positioned subs because they'll go in a .an0 <div> and so won't get alignment CSS text-align.\n\t\t\tswitch (dialogue.alignment) {\n\t\t\t\tcase 1: case 4: case 7: sub.style.textAlign = \"left\"; break;\n\t\t\t\tcase 2: case 5: case 8: sub.style.textAlign = \"center\"; break;\n\t\t\t\tcase 3: case 6: case 9: sub.style.textAlign = \"right\"; break;\n\t\t\t}\n\t\t}\n\n\t\tsub.style.webkitAnimation = dialogueAnimationCollection.animationStyle;\n\t\tsub.style.animation = dialogueAnimationCollection.animationStyle;\n\n\t\tsub.setAttribute(\"data-dialogue-id\", `${ this.id }-${ dialogue.id }`);\n\n\t\tif (dialogueAnimationStylesElement.textContent !== \"\") {\n\t\t\tsub.appendChild(dialogueAnimationStylesElement);\n\t\t}\n\n\t\tif (svgDefsElement.hasChildNodes()) {\n\t\t\tsub.appendChild(svgElement);\n\t\t}\n\n\t\tconst result = { sub, animationDelays: dialogueAnimationCollection.animationDelays };\n\n\t\tif (!dialogue.containsTransformTag) {\n\t\t\tthis._preRenderedSubs.set(dialogue.id, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Returns the subtitle div for display. The {@link libjass.renderers.Clock.currentTime} of the {@link libjass.renderers.NullRenderer.clock} is used to shift the\n\t * animations appropriately, so that at the time the div is inserted into the DOM and the animations begin, they are in sync with the clock time.\n\t *\n\t * @param {!libjass.Dialogue} dialogue\n\t */\n\tdraw(dialogue: Dialogue): void {\n\t\tif (this._currentSubs.has(dialogue) && !dialogue.containsTransformTag) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (debugMode) {\n\t\t\tconsole.log(dialogue.toString());\n\t\t}\n\n\t\tlet preRenderedSub = this._preRenderedSubs.get(dialogue.id);\n\n\t\tif (preRenderedSub === undefined) {\n\t\t\tpreRenderedSub = this.preRender(dialogue);\n\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.log(dialogue.toString());\n\t\t\t}\n\t\t}\n\n\t\tconst result = preRenderedSub.sub.cloneNode(true);\n\n\t\tconst applyAnimationDelays = (node: HTMLElement) => {\n\t\t\tconst animationNames = node.style.animationName || node.style.webkitAnimationName || \"\";\n\t\t\tif (animationNames !== \"\") {\n\t\t\t\tconst animationDelays = animationNames.split(\",\").map(name => {\n\t\t\t\t\tname = name.trim();\n\t\t\t\t\tconst delay = preRenderedSub.animationDelays.get(name);\n\t\t\t\t\treturn `${ ((delay + dialogue.start - this.clock.currentTime) / this.clock.rate).toFixed(3) }s`;\n\t\t\t\t}).join(\", \");\n\n\t\t\t\tnode.style.webkitAnimationDelay = animationDelays;\n\t\t\t\tnode.style.animationDelay = animationDelays;\n\t\t\t}\n\t\t};\n\t\tapplyAnimationDelays(result);\n\t\tconst animatedDescendants = result.querySelectorAll('[style*=\"animation:\"]');\n\t\tfor (let i = 0; i < animatedDescendants.length; i++) {\n\t\t\tapplyAnimationDelays(animatedDescendants[i] as HTMLElement);\n\t\t}\n\n\t\tconst layer = dialogue.layer;\n\t\tconst alignment = (result.style.position === \"absolute\") ? 0 : dialogue.alignment; // Alignment 0 is for absolutely-positioned subs\n\n\t\t// Create the layer wrapper div and the alignment div inside it if not already created\n\t\tif (this._layerWrappers[layer] === undefined) {\n\t\t\tconst layerWrapper = document.createElement(\"div\");\n\t\t\tlayerWrapper.className = `layer layer${ layer }`;\n\n\t\t\t// Find the next greater layer div and insert this div before that one\n\t\t\tlet insertBeforeElement: HTMLDivElement = null;\n\t\t\tfor (let insertBeforeLayer = layer + 1; insertBeforeLayer < this._layerWrappers.length && insertBeforeElement === null; insertBeforeLayer++) {\n\t\t\t\tif (this._layerWrappers[insertBeforeLayer] !== undefined) {\n\t\t\t\t\tinsertBeforeElement = this._layerWrappers[insertBeforeLayer];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._subsWrapper.insertBefore(layerWrapper, insertBeforeElement);\n\n\t\t\tthis._layerWrappers[layer] = layerWrapper;\n\t\t\tthis._layerAlignmentWrappers[layer] = [];\n\t\t}\n\n\t\tlet layerAlignmentWrapper = this._layerAlignmentWrappers[layer][alignment];\n\t\tif (layerAlignmentWrapper === undefined) {\n\t\t\tlayerAlignmentWrapper = this._layerAlignmentWrappers[layer][alignment] = document.createElement(\"div\");\n\t\t\tlayerAlignmentWrapper.className = `an an${ alignment }`;\n\n\t\t\t// Find the next greater layer,alignment div and insert this div before that one\n\t\t\tconst layerWrapper = this._layerWrappers[layer];\n\t\t\tlet insertBeforeElement: HTMLDivElement = null;\n\t\t\tfor (let insertBeforeAlignment = alignment + 1; insertBeforeAlignment < this._layerAlignmentWrappers[layer].length && insertBeforeElement === null; insertBeforeAlignment++) {\n\t\t\t\tif (this._layerAlignmentWrappers[layer][insertBeforeAlignment] !== undefined) {\n\t\t\t\t\tinsertBeforeElement = this._layerAlignmentWrappers[layer][insertBeforeAlignment];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlayerWrapper.insertBefore(layerAlignmentWrapper, insertBeforeElement);\n\t\t}\n\n\t\tif (alignment >= 1 && alignment <= 3) {\n\t\t\t// New subs go above existing subs\n\t\t\tlayerAlignmentWrapper.insertBefore(result, layerAlignmentWrapper.firstElementChild);\n\t\t}\n\t\telse {\n\t\t\t// New subs go below existing subs\n\t\t\tlayerAlignmentWrapper.appendChild(result);\n\t\t}\n\n\t\t// Workaround for IE\n\t\tconst dialogueAnimationStylesElement = result.getElementsByTagName(\"style\")[0];\n\t\tif (dialogueAnimationStylesElement !== undefined) {\n\t\t\tconst sheet = dialogueAnimationStylesElement.sheet as CSSStyleSheet;\n\t\t\tif (sheet.cssRules.length === 0) {\n\t\t\t\tsheet.cssText = dialogueAnimationStylesElement.textContent;\n\t\t\t}\n\t\t}\n\n\t\tthis._currentSubs.set(dialogue, result);\n\t}\n\n\tprotected _onClockPlay(): void {\n\t\tsuper._onClockPlay();\n\n\t\tthis._removeAllSubs();\n\n\t\tthis._subsWrapper.style.display = \"\";\n\n\t\tthis._subsWrapper.classList.remove(\"paused\");\n\t}\n\n\tprotected _onClockTick(): void {\n\t\t// Remove dialogues that should be removed before adding new ones via super._onClockTick()\n\n\t\tconst currentTime = this.clock.currentTime;\n\n\t\tthis._currentSubs.forEach((sub: HTMLDivElement, dialogue: Dialogue) => {\n\t\t\tif (dialogue.start > currentTime || dialogue.end < currentTime || dialogue.containsTransformTag) {\n\t\t\t\tthis._currentSubs.delete(dialogue);\n\t\t\t\tthis._removeSub(sub);\n\t\t\t}\n\t\t});\n\n\t\tsuper._onClockTick();\n\t}\n\n\tprotected _onClockPause(): void {\n\t\tsuper._onClockPause();\n\n\t\tthis._subsWrapper.classList.add(\"paused\");\n\t}\n\n\tprotected _onClockStop(): void {\n\t\tsuper._onClockStop();\n\n\t\tthis._subsWrapper.style.display = \"none\";\n\t}\n\n\tprotected _onClockRateChange(): void {\n\t\tsuper._onClockRateChange();\n\n\t\t// Any dialogues which have been pre-rendered will need to be pre-rendered again.\n\t\tthis._preRenderedSubs.clear();\n\t}\n\n\tprotected _ready(): void {\n\t\tthis._dispatchEvent(\"ready\", []);\n\t}\n\n\t/**\n\t * @param {string} fontFamily\n\t * @param {!Promise.<*>} fontFetchPromise\n\t * @return {!Promise.<[number, number]>}\n\t */\n\tprivate _calculateFontMetricsAfterFetch(fontFamily: string, fontFetchPromise: Promise<any>): Promise<[number, number]> {\n\t\treturn fontFetchPromise.then(() => {\n\t\t\tconst fontSizeElement = this._fontSizeElement.cloneNode(true);\n\t\t\tthis._libjassSubsWrapper.appendChild(fontSizeElement);\n\t\t\treturn Promise_finally(calculateFontMetrics(fontFamily, this.settings.fallbackFonts, fontSizeElement), () => {\n\t\t\t\tthis._libjassSubsWrapper.removeChild(fontSizeElement);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {!HTMLDivElement} sub\n\t */\n\tprivate _removeSub(sub: HTMLDivElement): void {\n\t\tsub.parentNode.removeChild(sub);\n\t}\n\n\tprivate _removeAllSubs(): void {\n\t\tthis._currentSubs.forEach((sub: HTMLDivElement) => this._removeSub(sub));\n\t\tthis._currentSubs.clear();\n\t}\n\n\tprivate static _transformOrigins: number[][] = [\n\t\t[],\n\t\t[0, 100], [50, 100], [100, 100],\n\t\t[0, 50], [50, 50], [100, 50],\n\t\t[0, 0], [50, 0], [100, 0]\n\t];\n\n\t// EventSource members\n\n\t/**\n\t * @type {!Map.<T, !Array.<Function>>}\n\t */\n\t_eventListeners: Map<string, Function[]> = new Map<string, Function[]>();\n\n\t/**\n\t * @type {function(number, !Function)}\n\t */\n\taddEventListener: (type: string, listener: Function) => void;\n\n\t/**\n\t * @type {function(number, Array.<*>)}\n\t */\n\t_dispatchEvent: (type: string, args: Object[]) => void;\n}\nmixin(WebRenderer, [EventSource]);\n\nexport interface PreRenderedSub {\n\t/** @type {!HTMLDivElement} */\n\tsub: HTMLDivElement;\n\n\t/** @type {!Map.<string, number>} */\n\tanimationDelays: Map<string, number>;\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attachment } from \"../types/attachment\";\n\nimport { Map } from \"../utility/map\";\nimport { Set } from \"../utility/set\";\n\ntype DataReader = { dataView: DataView; position: number; };\n\nenum DataType {\n\tChar,\n\tUint16,\n\tUint32,\n}\n\ntype StructMemberDefinition = { type: DataType; field: string; };\n\nconst fieldDecorators = new Map<DataType, (proto: any, field: string) => void>();\n\n@struct\nclass OffsetTable {\n\t/** @type {number} */ @field(DataType.Uint16) majorVersion: number;\n\t/** @type {number} */ @field(DataType.Uint16) minorVersion: number;\n\t/** @type {number} */ @field(DataType.Uint16) numTables: number;\n\t/** @type {number} */ @field(DataType.Uint16) searchRange: number;\n\t/** @type {number} */ @field(DataType.Uint16) entrySelector: number;\n\t/** @type {number} */ @field(DataType.Uint16) rangeShift: number;\n\n\t/** @type {function(!{ dataView: DataView, position: number }): OffsetTable} */\n\tstatic read: (reader: DataReader) => OffsetTable;\n}\n\n@struct\nclass TableRecord {\n\t/** @type {string} */ @field(DataType.Char) c1: string;\n\t/** @type {string} */ @field(DataType.Char) c2: string;\n\t/** @type {string} */ @field(DataType.Char) c3: string;\n\t/** @type {string} */ @field(DataType.Char) c4: string;\n\t/** @type {number} */ @field(DataType.Uint32) checksum: number;\n\t/** @type {number} */ @field(DataType.Uint32) offset: number;\n\t/** @type {number} */ @field(DataType.Uint32) length: number;\n\n\t/** @type {function(!{ dataView: DataView, position: number }): TableRecord} */\n\tstatic read: (reader: DataReader) => TableRecord;\n}\n\n@struct\nclass NameTableHeader {\n\t/** @type {number} */ @field(DataType.Uint16) formatSelector: number;\n\t/** @type {number} */ @field(DataType.Uint16) count: number;\n\t/** @type {number} */ @field(DataType.Uint16) stringOffset: number;\n\n\t/** @type {function(!{ dataView: DataView, position: number }): NameTableHeader} */\n\tstatic read: (reader: DataReader) => NameTableHeader;\n}\n\n@struct\nclass NameRecord {\n\t/** @type {number} */ @field(DataType.Uint16) platformId: number;\n\t/** @type {number} */ @field(DataType.Uint16) encodingId: number;\n\t/** @type {number} */ @field(DataType.Uint16) languageId: number;\n\t/** @type {number} */ @field(DataType.Uint16) nameId: number;\n\t/** @type {number} */ @field(DataType.Uint16) length: number;\n\t/** @type {number} */ @field(DataType.Uint16) offset: number;\n\n\t/** @type {function(!{ dataView: DataView, position: number }): NameRecord} */\n\tstatic read: (reader: DataReader) => NameRecord;\n}\n\n/**\n * Gets all the font names from the given font attachment.\n *\n * @param {!libjass.Attachment} attachment\n * @return {!libjass.Set.<string>}\n */\nexport function getTtfNames(attachment: Attachment): Set<string> {\n\tconst decoded = atob(attachment.contents);\n\n\tconst bytes = new Uint8Array(new ArrayBuffer(decoded.length));\n\n\tfor (let i = 0; i < decoded.length; i++) {\n\t\tbytes[i] = decoded.charCodeAt(i);\n\t}\n\n\tconst reader = { dataView: new DataView(bytes.buffer), position: 0 };\n\n\tconst offsetTable = OffsetTable.read(reader);\n\tlet nameTableRecord: TableRecord = null;\n\tfor (let i = 0; i < offsetTable.numTables; i++) {\n\t\tconst tableRecord = TableRecord.read(reader);\n\t\tif (tableRecord.c1 + tableRecord.c2 + tableRecord.c3 + tableRecord.c4 === \"name\") {\n\t\t\tnameTableRecord = tableRecord;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (nameTableRecord === null) {\n\t\tthrow new Error('Could not find \"name\" table record.');\n\t}\n\n\treader.position = nameTableRecord.offset;\n\tconst nameTableHeader = NameTableHeader.read(reader);\n\n\tconst result = new Set<string>();\n\tfor (let i = 0; i < nameTableHeader.count; i++) {\n\t\tconst nameRecord = NameRecord.read(reader);\n\n\t\tswitch (nameRecord.nameId) {\n\t\t\tcase 1:\n\t\t\tcase 4:\n\t\t\tcase 6:\n\t\t\t\tconst recordOffset = nameTableRecord.offset + nameTableHeader.stringOffset + nameRecord.offset;\n\t\t\t\tconst nameBytes = bytes.subarray(recordOffset, recordOffset + nameRecord.length);\n\n\t\t\t\tswitch (nameRecord.platformId) {\n\t\t\t\t\tcase 1: {\n\t\t\t\t\t\tlet name = \"\";\n\n\t\t\t\t\t\tfor (let j = 0; j < nameBytes.length; j++) {\n\t\t\t\t\t\t\tname += String.fromCharCode(nameBytes[j]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult.add(name);\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 3: {\n\t\t\t\t\t\tlet name = \"\";\n\n\t\t\t\t\t\tfor (let j = 0; j < nameBytes.length; j += 2) {\n\t\t\t\t\t\t\tname += String.fromCharCode((nameBytes[j] << 8) + nameBytes[j + 1]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult.add(name);\n\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * @param {!function(new(): T)} clazz\n * @return {!function(new(): T)}\n */\nfunction struct<T>(clazz: { new (): T; read(reader: DataReader): T; }): { new (): T; read(reader: DataReader): T; } {\n\tconst fields: StructMemberDefinition[] = (clazz as any).__fields;\n\n\tclazz.read = (reader: DataReader) => {\n\t\tconst result: any = new clazz();\n\n\t\tfor (const field of fields) {\n\t\t\tlet value: any;\n\t\t\tswitch (field.type) {\n\t\t\t\tcase DataType.Char:\n\t\t\t\t\tvalue = String.fromCharCode(reader.dataView.getInt8(reader.position));\n\t\t\t\t\treader.position += 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase DataType.Uint16:\n\t\t\t\t\tvalue = reader.dataView.getUint16(reader.position);\n\t\t\t\t\treader.position += 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase DataType.Uint32:\n\t\t\t\t\tvalue = reader.dataView.getUint32(reader.position);\n\t\t\t\t\treader.position += 4;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tresult[field.field] = value;\n\t\t}\n\n\t\treturn result;\n\t};\n\n\treturn clazz;\n}\n\n/**\n * @param {number} type\n * @return {function(T, string)}\n */\nfunction field<T>(type: DataType): (proto: T, field: string) => void {\n\tlet existingDecorator = fieldDecorators.get(type);\n\tif (existingDecorator === undefined) {\n\t\texistingDecorator = (proto: T, field: string) => {\n\t\t\tconst ctor: { __fields?: StructMemberDefinition[] } = proto.constructor;\n\t\t\tif (ctor.__fields === undefined) {\n\t\t\t\tctor.__fields = [];\n\t\t\t}\n\n\t\t\tctor.__fields.push({ type, field });\n\t\t};\n\n\t\tfieldDecorators.set(type, existingDecorator);\n\t}\n\n\treturn existingDecorator;\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnimationCollection } from \"./animation-collection\";\n\nimport { fontSizeForLineHeight } from \"./font-size\";\n\nimport { WebRenderer } from \"./renderer\";\n\nimport { RendererSettings } from \"../settings\";\n\nimport { Color } from \"../../parts\";\n\nimport { Style } from \"../../types/style\";\nimport { Dialogue } from \"../../types/dialogue\";\n\nimport { Map } from \"../../utility/map\";\n\n/**\n * This class represents the style attribute of a span.\n * As a Dialogue's div is rendered, individual parts are added to span's, and this class is used to maintain the style attribute of those.\n *\n * @param {!libjass.renderers.NullRenderer} renderer The renderer that this set of styles is associated with\n * @param {!libjass.Dialogue} dialogue The Dialogue that this set of styles is associated with\n * @param {number} scaleX The horizontal scaling of the subtitles\n * @param {number} scaleY The vertical scaling of the subtitles\n * @param {!libjass.renderers.RendererSettings} settings The renderer settings\n * @param {!HTMLDivElement} fontSizeElement A <div> element to measure font sizes with\n * @param {!SVGDefsElement} svgDefsElement An SVG <defs> element to append filter definitions to\n * @param {!Map<string, [number, number]>} fontMetricsCache Font metrics cache\n */\nexport class SpanStyles {\n\tprivate _id: string;\n\tprivate _defaultStyle: Style;\n\n\tprivate _italic: boolean;\n\tprivate _bold: boolean | number;\n\tprivate _underline: boolean;\n\tprivate _strikeThrough: boolean;\n\n\tprivate _outlineWidth: number;\n\tprivate _outlineHeight: number;\n\n\tprivate _shadowDepthX: number;\n\tprivate _shadowDepthY: number;\n\n\tprivate _fontName: string;\n\tprivate _fontSize: number;\n\n\tprivate _fontScaleX: number;\n\tprivate _fontScaleY: number;\n\n\tprivate _letterSpacing: number;\n\n\tprivate _rotationX: number;\n\tprivate _rotationY: number;\n\tprivate _rotationZ: number;\n\n\tprivate _skewX: number;\n\tprivate _skewY: number;\n\n\tprivate _primaryColor: Color;\n\tprivate _secondaryColor: Color;\n\tprivate _outlineColor: Color;\n\tprivate _shadowColor: Color;\n\n\tprivate _primaryAlpha: number;\n\tprivate _secondaryAlpha: number;\n\tprivate _outlineAlpha: number;\n\tprivate _shadowAlpha: number;\n\n\tprivate _blur: number;\n\tprivate _gaussianBlur: number;\n\n\tprivate _nextFilterId = 0;\n\n\tconstructor(renderer: WebRenderer, dialogue: Dialogue, private _scaleX: number, private _scaleY: number, private _settings: RendererSettings, private _fontSizeElement: HTMLDivElement, private _svgDefsElement: SVGDefsElement, private _fontMetricsCache: Map<string, [number, number]>) {\n\t\tthis._id = `${ renderer.id }-${ dialogue.id }`;\n\t\tthis._defaultStyle = dialogue.style;\n\n\t\tthis.reset(null);\n\t}\n\n\t/**\n\t * Resets the styles to the defaults provided by the argument.\n\t *\n\t * @param {libjass.Style} newStyle The new defaults to reset the style to. If null, the styles are reset to the default style of the Dialogue.\n\t */\n\treset(newStyle: Style): void {\n\t\tif (newStyle === undefined || newStyle === null) {\n\t\t\tnewStyle = this._defaultStyle;\n\t\t}\n\n\t\tthis.italic = newStyle.italic;\n\t\tthis.bold = newStyle.bold;\n\t\tthis.underline = newStyle.underline;\n\t\tthis.strikeThrough = newStyle.strikeThrough;\n\n\t\tthis.outlineWidth = newStyle.outlineThickness;\n\t\tthis.outlineHeight = newStyle.outlineThickness;\n\n\t\tthis.shadowDepthX = newStyle.shadowDepth;\n\t\tthis.shadowDepthY = newStyle.shadowDepth;\n\n\t\tthis.fontName = newStyle.fontName;\n\t\tthis.fontSize = newStyle.fontSize;\n\n\t\tthis.fontScaleX = newStyle.fontScaleX;\n\t\tthis.fontScaleY = newStyle.fontScaleY;\n\n\t\tthis.letterSpacing = newStyle.letterSpacing;\n\n\t\tthis.rotationX = 0;\n\t\tthis.rotationY = 0;\n\t\tthis.rotationZ = newStyle.rotationZ;\n\n\t\tthis.skewX = 0;\n\t\tthis.skewY = 0;\n\n\t\tthis.primaryColor = newStyle.primaryColor;\n\t\tthis.secondaryColor = newStyle.secondaryColor;\n\t\tthis.outlineColor = newStyle.outlineColor;\n\t\tthis.shadowColor = newStyle.shadowColor;\n\n\t\tthis.primaryAlpha = newStyle.primaryColor.alpha;\n\t\tthis.secondaryAlpha = newStyle.secondaryColor.alpha;\n\t\tthis.outlineAlpha = newStyle.outlineColor.alpha;\n\t\tthis.shadowAlpha = newStyle.shadowColor.alpha;\n\n\t\tthis.blur = null;\n\t\tthis.gaussianBlur = null;\n\t}\n\n\t/**\n\t * Sets the style attribute on the given span element.\n\t *\n\t * @param {!HTMLSpanElement} span\n\t * @param {!AnimationCollection} animationCollection\n\t * @return {!HTMLSpanElement} The resulting <span> with the CSS styles applied. This may be a wrapper around the input <span> if the styles were applied using SVG filters.\n\t */\n\tsetStylesOnSpan(span: HTMLSpanElement, animationCollection: AnimationCollection): HTMLSpanElement {\n\t\tconst isTextOnlySpan = span.childNodes[0] instanceof Text;\n\n\t\tlet fontStyleOrWeight = \"\";\n\t\tif (this._italic) {\n\t\t\tfontStyleOrWeight += \"italic \";\n\t\t}\n\t\tif (this._bold === true) {\n\t\t\tfontStyleOrWeight += \"bold \";\n\t\t}\n\t\telse if (this._bold !== false) {\n\t\t\tfontStyleOrWeight += this._bold + \" \";\n\t\t}\n\n\t\tconst lineHeight = this._scaleY * (isTextOnlySpan ? this._fontScaleX : 1) * this._fontSize;\n\t\tconst fontSize = fontSizeForLineHeight(this._fontName, lineHeight, this._settings.fallbackFonts, this._fontSizeElement, this._fontMetricsCache);\n\n\t\tlet fonts = this._fontName;\n\n\t\t// Quote the font family unless it's a generic family, as those must never be quoted\n\t\tswitch (fonts) {\n\t\t\tcase \"cursive\":\n\t\t\tcase \"fantasy\":\n\t\t\tcase \"monospace\":\n\t\t\tcase \"sans-serif\":\n\t\t\tcase \"serif\":\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfonts = `\"${ fonts }\"`;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (this._settings.fallbackFonts !== \"\") {\n\t\t\tfonts += `, ${ this._settings.fallbackFonts }`;\n\t\t}\n\n\t\tspan.style.font = `${ fontStyleOrWeight }${ fontSize.toFixed(3) }px/${ lineHeight.toFixed(3) }px ${ fonts }`;\n\n\t\tlet textDecoration = \"\";\n\t\tif (this._underline) {\n\t\t\ttextDecoration = \"underline\";\n\t\t}\n\t\tif (this._strikeThrough) {\n\t\t\ttextDecoration += \" line-through\";\n\t\t}\n\t\tspan.style.textDecoration = textDecoration.trim();\n\n\t\tlet transform = \"\";\n\t\tif (isTextOnlySpan) {\n\t\t\tif (this._fontScaleY !== this._fontScaleX) {\n\t\t\t\ttransform += `scaleY(${ (this._fontScaleY / this._fontScaleX).toFixed(3) }) `;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._fontScaleX !== 1) {\n\t\t\t\ttransform += `scaleX(${ this._fontScaleX }) `;\n\t\t\t}\n\t\t\tif (this._fontScaleY !== 1) {\n\t\t\t\ttransform += `scaleY(${ this._fontScaleY }) `;\n\t\t\t}\n\t\t}\n\t\tif (this._skewX !== 0 || this._skewY !== 0) {\n\t\t\ttransform += `matrix(1, ${ this._skewY }, ${ this._skewX }, 1, 0, 0) `;\n\t\t}\n\t\tif (transform !== \"\") {\n\t\t\tspan.style.webkitTransform = transform;\n\t\t\tspan.style.webkitTransformOrigin = \"50% 50%\";\n\t\t\tspan.style.transform = transform;\n\t\t\tspan.style.transformOrigin = \"50% 50%\";\n\t\t\tspan.style.display = \"inline-block\";\n\t\t}\n\n\t\tspan.style.letterSpacing = `${ (this._scaleX * this._letterSpacing).toFixed(3) }px`;\n\n\t\tconst outlineWidth = this._scaleX * this._outlineWidth;\n\t\tconst outlineHeight = this._scaleY * this._outlineHeight;\n\t\tconst shadowDepthX = this._scaleX * this._shadowDepthX;\n\t\tconst shadowDepthY = this._scaleY * this._shadowDepthY;\n\n\t\tlet primaryColor = this._primaryColor.withAlpha(this._primaryAlpha);\n\t\tlet outlineColor = this._outlineColor.withAlpha(this._outlineAlpha);\n\t\tlet shadowColor = this._shadowColor.withAlpha(this._shadowAlpha);\n\n\t\t// If we're in non-SVG mode and all colors have the same alpha, then set all colors to alpha === 1 and set the common alpha as the span's opacity property instead\n\t\tif (\n\t\t\t!this._settings.enableSvg &&\n\t\t\t((outlineWidth === 0 && outlineHeight === 0) || outlineColor.alpha === primaryColor.alpha) &&\n\t\t\t((this._shadowDepthX === 0 && this._shadowDepthY === 0) || shadowColor.alpha === primaryColor.alpha)\n\t\t) {\n\t\t\tprimaryColor = this._primaryColor.withAlpha(1);\n\t\t\toutlineColor = this._outlineColor.withAlpha(1);\n\t\t\tshadowColor = this._shadowColor.withAlpha(1);\n\n\t\t\tspan.style.opacity = this._primaryAlpha.toFixed(3);\n\t\t}\n\n\t\tspan.style.color = primaryColor.toString();\n\n\t\tif (this._settings.enableSvg) {\n\t\t\tthis._svg(\n\t\t\t\tspan,\n\t\t\t\toutlineWidth, outlineHeight, outlineColor,\n\t\t\t\tshadowDepthX, shadowDepthY, shadowColor\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\tthis._textShadow(\n\t\t\t\tspan,\n\t\t\t\toutlineWidth, outlineHeight, outlineColor,\n\t\t\t\tshadowDepthX, shadowDepthY, shadowColor\n\t\t\t);\n\t\t}\n\n\t\tif (this._rotationX !== 0 || this._rotationY !== 0) {\n\t\t\t// Perspective needs to be set on a \"transformable element\"\n\t\t\tspan.style.display = \"inline-block\";\n\t\t}\n\n\t\tspan.style.webkitAnimation = animationCollection.animationStyle;\n\t\tspan.style.animation = animationCollection.animationStyle;\n\n\t\treturn span;\n\t}\n\n\t/**\n\t * @param {!HTMLSpanElement} span\n\t * @param {number} outlineWidth\n\t * @param {number} outlineHeight\n\t * @param {!libjass.parts.Color} outlineColor\n\t * @param {number} shadowDepthX\n\t * @param {number} shadowDepthY\n\t * @param {!libjass.parts.Color} shadowColor\n\t */\n\tprivate _svg(\n\t\tspan: HTMLSpanElement,\n\t\toutlineWidth: number, outlineHeight: number, outlineColor: Color,\n\t\tshadowDepthX: number, shadowDepthY: number, shadowColor: Color\n\t): void {\n\t\tconst filterElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"filter\");\n\n\t\tif (outlineWidth > 0 || outlineHeight > 0 || shadowDepthX > 0 || shadowDepthY > 0) {\n\t\t\t// Start with SourceAlpha. Leave the alpha as 0 if it's 0, and set it to 1 if it's greater than 0\n\t\t\tconst source = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feComponentTransfer\");\n\t\t\tfilterElement.appendChild(source);\n\t\t\tsource.in1.baseVal = \"SourceAlpha\";\n\t\t\tsource.result.baseVal = \"source\";\n\n\t\t\tconst sourceAlphaTransferNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feFuncA\");\n\t\t\tsource.appendChild(sourceAlphaTransferNode);\n\t\t\tsourceAlphaTransferNode.type.baseVal = SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR;\n\t\t\tsourceAlphaTransferNode.intercept.baseVal = 0;\n\n\t\t\t/* The alphas of all colored pixels of the SourceAlpha should be made as close to 1 as possible. This way the summed outlines below will be uniformly dark.\n\t\t\t * Multiply the pixels by 1 / primaryAlpha so that the primaryAlpha pixels become 1. A higher value would make the outline larger and too sharp,\n\t\t\t * leading to jagged outer edge and transparent space around the inner edge between itself and the SourceGraphic.\n\t\t\t */\n\t\t\tsourceAlphaTransferNode.slope.baseVal = (this._primaryAlpha === 0) ? 1 : (1 / this._primaryAlpha);\n\n\t\t\t/* Construct an elliptical border by merging together many rectangles. The border is creating using dilate morphology filters, but these only support\n\t\t\t * generating rectangles.   http://lists.w3.org/Archives/Public/public-fx/2012OctDec/0003.html\n\t\t\t */\n\n\t\t\t// Merge the individual outlines\n\t\t\tconst mergedOutlines = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feMerge\");\n\t\t\tfilterElement.appendChild(mergedOutlines);\n\t\t\tmergedOutlines.result.baseVal = \"outline-alpha\";\n\n\t\t\tlet outlineNumber = 0;\n\n\t\t\tconst increment = (!this._settings.preciseOutlines && this._gaussianBlur > 0) ? this._gaussianBlur : 1;\n\n\t\t\t((addOutline: (x: number, y: number) => void) => {\n\t\t\t\tif (outlineWidth <= outlineHeight) {\n\t\t\t\t\tif (outlineWidth > 0) {\n\t\t\t\t\t\tlet x: number;\n\t\t\t\t\t\tfor (x = 0; x <= outlineWidth; x += increment) {\n\t\t\t\t\t\t\taddOutline(x, outlineHeight / outlineWidth * Math.sqrt(outlineWidth * outlineWidth - x * x));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (x !== outlineWidth + increment) {\n\t\t\t\t\t\t\taddOutline(outlineWidth, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\taddOutline(0, outlineHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (outlineHeight > 0) {\n\t\t\t\t\t\tlet y: number;\n\t\t\t\t\t\tfor (y = 0; y <= outlineHeight; y += increment) {\n\t\t\t\t\t\t\taddOutline(outlineWidth / outlineHeight * Math.sqrt(outlineHeight * outlineHeight - y * y), y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (y !== outlineHeight + increment) {\n\t\t\t\t\t\t\taddOutline(0, outlineHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\taddOutline(outlineWidth, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})((x: number, y: number): void => {\n\t\t\t\tconst outlineId = `outline${ outlineNumber }`;\n\n\t\t\t\tconst outlineFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feMorphology\");\n\t\t\t\tfilterElement.insertBefore(outlineFilter, mergedOutlines);\n\t\t\t\toutlineFilter.in1.baseVal = \"source\";\n\t\t\t\toutlineFilter.operator.baseVal = SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_DILATE;\n\t\t\t\toutlineFilter.radiusX.baseVal = x;\n\t\t\t\toutlineFilter.radiusY.baseVal = y;\n\t\t\t\toutlineFilter.result.baseVal = outlineId;\n\n\t\t\t\tconst outlineReferenceNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feMergeNode\");\n\t\t\t\tmergedOutlines.appendChild(outlineReferenceNode);\n\t\t\t\toutlineReferenceNode.in1.baseVal = outlineId;\n\n\t\t\t\toutlineNumber++;\n\t\t\t});\n\n\t\t\t((addOutline: (x: number, y: number) => void) => {\n\t\t\t\tif ((outlineWidth % 1) > 0) {\n\t\t\t\t\taddOutline(outlineWidth, 0);\n\t\t\t\t\taddOutline(-outlineWidth, 0);\n\t\t\t\t}\n\n\t\t\t\tif ((outlineHeight % 1) > 0) {\n\t\t\t\t\taddOutline(0, outlineHeight);\n\t\t\t\t\taddOutline(0, -outlineHeight);\n\t\t\t\t}\n\t\t\t})((x: number, y: number): void => {\n\t\t\t\tconst outlineId = `outline${ outlineNumber }`;\n\n\t\t\t\tconst outlineFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feOffset\");\n\t\t\t\tfilterElement.insertBefore(outlineFilter, mergedOutlines);\n\t\t\t\toutlineFilter.in1.baseVal = \"source\";\n\t\t\t\toutlineFilter.dx.baseVal = x;\n\t\t\t\toutlineFilter.dy.baseVal = y;\n\t\t\t\toutlineFilter.result.baseVal = outlineId;\n\n\t\t\t\tconst outlineReferenceNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feMergeNode\");\n\t\t\t\tmergedOutlines.appendChild(outlineReferenceNode);\n\t\t\t\toutlineReferenceNode.in1.baseVal = outlineId;\n\n\t\t\t\toutlineNumber++;\n\t\t\t});\n\n\t\t\t// Color it with the outline color\n\t\t\tconst coloredOutline = createComponentTransferFilter(outlineColor);\n\t\t\tfilterElement.appendChild(coloredOutline);\n\t\t\tcoloredOutline.in1.baseVal = \"outline-alpha\";\n\n\t\t\t// Blur the merged outline\n\t\t\tif (this._gaussianBlur > 0) {\n\t\t\t\tconst gaussianBlurFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feGaussianBlur\");\n\t\t\t\tfilterElement.appendChild(gaussianBlurFilter);\n\n\t\t\t\t// Don't use setStdDeviation - cloneNode() clears it in Chrome\n\t\t\t\tgaussianBlurFilter.stdDeviationX.baseVal = this._gaussianBlur;\n\t\t\t\tgaussianBlurFilter.stdDeviationY.baseVal = this._gaussianBlur;\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._blur; i++) {\n\t\t\t\tconst blurFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feConvolveMatrix\");\n\t\t\t\tfilterElement.appendChild(blurFilter);\n\t\t\t\tblurFilter.setAttribute(\"kernelMatrix\", \"1 2 1 2 4 2 1 2 1\");\n\t\t\t\tblurFilter.edgeMode.baseVal = SVGFEConvolveMatrixElement.SVG_EDGEMODE_NONE;\n\t\t\t}\n\n\t\t\t// Cut out the source, so only the exterior remains\n\t\t\tconst cutoutNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feComposite\");\n\t\t\tfilterElement.appendChild(cutoutNode);\n\t\t\tcutoutNode.in2.baseVal = \"source\";\n\t\t\tcutoutNode.operator.baseVal = SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_OUT;\n\t\t\tcutoutNode.result.baseVal = \"outline-colored\";\n\n\t\t\tif (shadowDepthX > 0 || shadowDepthY > 0) {\n\t\t\t\tconst shadowFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feOffset\");\n\t\t\t\tfilterElement.appendChild(shadowFilter);\n\t\t\t\tshadowFilter.in1.baseVal = \"outline-alpha\";\n\t\t\t\tshadowFilter.dx.baseVal = shadowDepthX;\n\t\t\t\tshadowFilter.dy.baseVal = shadowDepthY;\n\n\t\t\t\t// Color it with the shadow color\n\t\t\t\tconst coloredShadow = createComponentTransferFilter(shadowColor);\n\t\t\t\tfilterElement.appendChild(coloredShadow);\n\n\t\t\t\tlet lastFilter: SVGFEComponentTransferElement | SVGFEGaussianBlurElement | SVGFEConvolveMatrixElement = coloredShadow;\n\n\t\t\t\t// Blur the shadow\n\t\t\t\tif (this._gaussianBlur > 0) {\n\t\t\t\t\tconst gaussianBlurFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feGaussianBlur\");\n\t\t\t\t\tfilterElement.appendChild(gaussianBlurFilter);\n\n\t\t\t\t\t// Don't use setStdDeviation - cloneNode() clears it in Chrome\n\t\t\t\t\tgaussianBlurFilter.stdDeviationX.baseVal = this._gaussianBlur;\n\t\t\t\t\tgaussianBlurFilter.stdDeviationY.baseVal = this._gaussianBlur;\n\n\t\t\t\t\tlastFilter = gaussianBlurFilter;\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < this._blur; i++) {\n\t\t\t\t\tconst blurFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feConvolveMatrix\");\n\t\t\t\t\tfilterElement.appendChild(blurFilter);\n\t\t\t\t\tblurFilter.setAttribute(\"kernelMatrix\", \"1 2 1 2 4 2 1 2 1\");\n\t\t\t\t\tblurFilter.edgeMode.baseVal = SVGFEConvolveMatrixElement.SVG_EDGEMODE_NONE;\n\n\t\t\t\t\tlastFilter = blurFilter;\n\t\t\t\t}\n\n\t\t\t\tlastFilter.result.baseVal = \"shadow\";\n\t\t\t}\n\n\t\t\t// Merge the main text, outline and shadow\n\t\t\tconst mergedResult = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feMerge\");\n\t\t\tfilterElement.appendChild(mergedResult);\n\n\t\t\tif (shadowDepthX > 0 || shadowDepthY > 0) {\n\t\t\t\tconst shadowReferenceNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feMergeNode\");\n\t\t\t\tmergedResult.appendChild(shadowReferenceNode);\n\t\t\t\tshadowReferenceNode.in1.baseVal = \"shadow\";\n\t\t\t}\n\n\t\t\tconst outlineReferenceNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feMergeNode\");\n\t\t\tmergedResult.appendChild(outlineReferenceNode);\n\t\t\toutlineReferenceNode.in1.baseVal = \"outline-colored\";\n\n\t\t\tconst sourceGraphicReferenceNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feMergeNode\");\n\t\t\tmergedResult.appendChild(sourceGraphicReferenceNode);\n\t\t\tsourceGraphicReferenceNode.in1.baseVal = \"SourceGraphic\";\n\t\t}\n\t\telse {\n\t\t\t// Blur the source graphic directly\n\t\t\tif (this._gaussianBlur > 0) {\n\t\t\t\tconst gaussianBlurFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feGaussianBlur\");\n\t\t\t\tfilterElement.appendChild(gaussianBlurFilter);\n\n\t\t\t\t// Don't use setStdDeviation - cloneNode() clears it in Chrome\n\t\t\t\tgaussianBlurFilter.stdDeviationX.baseVal = this._gaussianBlur;\n\t\t\t\tgaussianBlurFilter.stdDeviationY.baseVal = this._gaussianBlur;\n\t\t\t}\n\t\t\tfor (let i = 0; i < this._blur; i++) {\n\t\t\t\tconst blurFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feConvolveMatrix\");\n\t\t\t\tfilterElement.appendChild(blurFilter);\n\t\t\t\tblurFilter.setAttribute(\"kernelMatrix\", \"1 2 1 2 4 2 1 2 1\");\n\t\t\t\tblurFilter.edgeMode.baseVal = SVGFEConvolveMatrixElement.SVG_EDGEMODE_NONE;\n\t\t\t}\n\t\t}\n\n\t\tif (filterElement.childElementCount > 0) {\n\t\t\tconst filterId = `libjass-svg-filter-${ this._id }-${ this._nextFilterId++ }`;\n\n\t\t\tthis._svgDefsElement.appendChild(filterElement);\n\t\t\tfilterElement.id = filterId;\n\t\t\tfilterElement.x.baseVal.valueAsString = \"-50%\";\n\t\t\tfilterElement.width.baseVal.valueAsString = \"200%\";\n\t\t\tfilterElement.y.baseVal.valueAsString = \"-50%\";\n\t\t\tfilterElement.height.baseVal.valueAsString = \"200%\";\n\n\t\t\tconst filterProperty = `url(\"#${ filterId }\")`;\n\t\t\tspan.style.webkitFilter = filterProperty;\n\t\t\tspan.style.filter = filterProperty;\n\t\t}\n\t}\n\n\t/**\n\t * @param {!HTMLSpanElement} span\n\t * @param {number} outlineWidth\n\t * @param {number} outlineHeight\n\t * @param {!libjass.parts.Color} outlineColor\n\t * @param {number} shadowDepthX\n\t * @param {number} shadowDepthY\n\t * @param {!libjass.parts.Color} shadowColor\n\t */\n\tprivate _textShadow(\n\t\tspan: HTMLSpanElement,\n\t\toutlineWidth: number, outlineHeight: number, outlineColor: Color,\n\t\tshadowDepthX: number, shadowDepthY: number, shadowColor: Color\n\t): void {\n\t\tif (outlineWidth > 0 || outlineHeight > 0) {\n\t\t\tlet outlineCssString = \"\";\n\t\t\tlet shadowCssString = \"\";\n\n\t\t\t((addOutline: (x: number, y: number) => void) => {\n\t\t\t\tfor (let x = 0; x <= outlineWidth; x++) {\n\t\t\t\t\tconst maxY = (outlineWidth === 0) ? outlineHeight : outlineHeight * Math.sqrt(1 - ((x * x) / (outlineWidth * outlineWidth)));\n\t\t\t\t\tfor (let y = 0; y <= maxY; y++) {\n\t\t\t\t\t\taddOutline(x, y);\n\n\t\t\t\t\t\tif (x !== 0) {\n\t\t\t\t\t\t\taddOutline(-x, y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (y !== 0) {\n\t\t\t\t\t\t\taddOutline(x, -y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (x !== 0 && y !== 0) {\n\t\t\t\t\t\t\taddOutline(-x, -y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ((outlineWidth % 1) > 0) {\n\t\t\t\t\taddOutline(outlineWidth, 0);\n\t\t\t\t\taddOutline(-outlineWidth, 0);\n\t\t\t\t}\n\n\t\t\t\tif ((outlineHeight % 1) > 0) {\n\t\t\t\t\taddOutline(0, outlineHeight);\n\t\t\t\t\taddOutline(0, -outlineHeight);\n\t\t\t\t}\n\t\t\t})((x: number, y: number): void => {\n\t\t\t\toutlineCssString += `, ${ outlineColor.toString() } ${ x.toFixed(3) }px ${ y.toFixed(3) }px ${ this._gaussianBlur.toFixed(3) }px`;\n\n\t\t\t\tif (this._shadowDepthX !== 0 || this._shadowDepthY !== 0) {\n\t\t\t\t\tshadowCssString += `, ${ shadowColor.toString() } ${ (x + shadowDepthX).toFixed(3) }px ${ (y + shadowDepthY).toFixed(3) }px ${ this._gaussianBlur.toFixed(3) }px`;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tspan.style.textShadow = (outlineCssString + shadowCssString).substr(\", \".length);\n\t\t}\n\t\telse if (this._shadowDepthX !== 0 || this._shadowDepthY !== 0) {\n\t\t\tconst shadowCssString = `${ shadowColor.toString() } ${ shadowDepthX.toFixed(3) }px ${ shadowDepthY.toFixed(3) }px 0px`;\n\t\t\tif (span.style.textShadow === \"\") {\n\t\t\t\tspan.style.textShadow = shadowCssString;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tspan.style.textShadow += \", \" + shadowCssString;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @return {!HTMLBRElement}\n\t */\n\tmakeNewLine(): HTMLBRElement {\n\t\tconst result = document.createElement(\"br\");\n\t\tresult.style.lineHeight = `${ (this._scaleY * this._fontSize).toFixed(3) }px`;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Sets the italic property. null defaults it to the default style's value.\n\t *\n\t * @type {?boolean}\n\t */\n\tset italic(value: boolean) {\n\t\tthis._italic = valueOrDefault(value, this._defaultStyle.italic);\n\t}\n\n\t/**\n\t * Sets the bold property. null defaults it to the default style's value.\n\t *\n\t * @type {(?boolean|?number)}\n\t */\n\tset bold(value: boolean | number) {\n\t\tthis._bold = valueOrDefault(value, this._defaultStyle.bold);\n\t}\n\n\t/**\n\t * Sets the underline property. null defaults it to the default style's value.\n\t *\n\t * @type {?boolean}\n\t */\n\tset underline(value: boolean) {\n\t\tthis._underline = valueOrDefault(value, this._defaultStyle.underline);\n\t}\n\n\t/**\n\t * Sets the strike-through property. null defaults it to the default style's value.\n\t *\n\t * @type {?boolean}\n\t */\n\tset strikeThrough(value: boolean) {\n\t\tthis._strikeThrough = valueOrDefault(value, this._defaultStyle.strikeThrough);\n\t}\n\n\t/**\n\t * Gets the outline width property.\n\t *\n\t * @type {number}\n\t */\n\tget outlineWidth(): number {\n\t\treturn this._outlineWidth;\n\t}\n\n\t/**\n\t * Sets the outline width property. null defaults it to the style's original outline width value.\n\t *\n\t * @type {?number}\n\t */\n\tset outlineWidth(value: number) {\n\t\tthis._outlineWidth = valueOrDefault(value, this._defaultStyle.outlineThickness);\n\t}\n\n\t/**\n\t * Gets the outline height property.\n\t *\n\t * @type {number}\n\t */\n\tget outlineHeight(): number {\n\t\treturn this._outlineHeight;\n\t}\n\n\t/**\n\t * Sets the outline height property. null defaults it to the style's original outline height value.\n\t *\n\t * @type {?number}\n\t */\n\tset outlineHeight(value: number) {\n\t\tthis._outlineHeight = valueOrDefault(value, this._defaultStyle.outlineThickness);\n\t}\n\n\t/**\n\t * Gets the shadow width property.\n\t *\n\t * @type {number}\n\t */\n\tget shadowDepthX(): number {\n\t\treturn this._shadowDepthX;\n\t}\n\n\t/**\n\t * Sets the shadow width property. null defaults it to the style's original shadow depth value.\n\t *\n\t * @type {?number}\n\t */\n\tset shadowDepthX(value: number) {\n\t\tthis._shadowDepthX = valueOrDefault(value, this._defaultStyle.shadowDepth);\n\t}\n\n\t/**\n\t * Gets the shadow height property.\n\t *\n\t * @type {number}\n\t */\n\tget shadowDepthY(): number {\n\t\treturn this._shadowDepthY;\n\t}\n\n\t/**\n\t * Sets the shadow height property. null defaults it to the style's original shadow depth value.\n\t *\n\t * @type {?number}\n\t */\n\tset shadowDepthY(value: number) {\n\t\tthis._shadowDepthY = valueOrDefault(value, this._defaultStyle.shadowDepth);\n\t}\n\n\t/**\n\t * Gets the blur property.\n\t *\n\t * @type {number}\n\t */\n\tget blur(): number {\n\t\treturn this._blur;\n\t}\n\n\t/**\n\t * Sets the blur property. null defaults it to 0.\n\t *\n\t * @type {?number}\n\t */\n\tset blur(value: number) {\n\t\tthis._blur = valueOrDefault(value, 0);\n\t}\n\n\t/**\n\t * Gets the Gaussian blur property.\n\t *\n\t * @type {number}\n\t */\n\tget gaussianBlur(): number {\n\t\treturn this._gaussianBlur;\n\t}\n\n\t/**\n\t * Sets the Gaussian blur property. null defaults it to 0.\n\t *\n\t * @type {?number}\n\t */\n\tset gaussianBlur(value: number) {\n\t\tthis._gaussianBlur = valueOrDefault(value, 0);\n\t}\n\n\t/**\n\t * Sets the font name property. null defaults it to the default style's value.\n\t *\n\t * @type {?string}\n\t */\n\tset fontName(value: string) {\n\t\tthis._fontName = valueOrDefault(value, this._defaultStyle.fontName);\n\t}\n\n\t/**\n\t * Gets the font size property.\n\t *\n\t * @type {number}\n\t */\n\tget fontSize(): number {\n\t\treturn this._fontSize;\n\t}\n\n\t/**\n\t * Sets the font size property. null defaults it to the default style's value.\n\t *\n\t * @type {?number}\n\t */\n\tset fontSize(value: number) {\n\t\tthis._fontSize = valueOrDefault(value, this._defaultStyle.fontSize);\n\t}\n\n\t/**\n\t * Gets the horizontal font scaling property.\n\t *\n\t * @type {number}\n\t */\n\tget fontScaleX(): number {\n\t\treturn this._fontScaleX;\n\t}\n\n\t/**\n\t * Sets the horizontal font scaling property. null defaults it to the default style's value.\n\t *\n\t * @type {?number}\n\t */\n\tset fontScaleX(value: number) {\n\t\tthis._fontScaleX = valueOrDefault(value, this._defaultStyle.fontScaleX);\n\t}\n\n\t/**\n\t * Gets the vertical font scaling property.\n\t *\n\t * @type {number}\n\t */\n\tget fontScaleY(): number {\n\t\treturn this._fontScaleY;\n\t}\n\n\t/**\n\t * Sets the vertical font scaling property. null defaults it to the default style's value.\n\t *\n\t * @type {?number}\n\t */\n\tset fontScaleY(value: number) {\n\t\tthis._fontScaleY = valueOrDefault(value, this._defaultStyle.fontScaleY);\n\t}\n\n\t/**\n\t * Gets the letter spacing property.\n\t *\n\t * @type {number}\n\t */\n\tget letterSpacing(): number {\n\t\treturn this._letterSpacing;\n\t}\n\n\t/**\n\t * Sets the letter spacing property. null defaults it to the default style's value.\n\t *\n\t * @type {?number}\n\t */\n\tset letterSpacing(value: number) {\n\t\tthis._letterSpacing = valueOrDefault(value, this._defaultStyle.letterSpacing);\n\t}\n\n\t/**\n\t * Gets the X-axis rotation property.\n\t *\n\t * @type {number}\n\t */\n\tget rotationX(): number {\n\t\treturn this._rotationX;\n\t}\n\n\t/**\n\t * Sets the X-axis rotation property.\n\t *\n\t * @type {?number}\n\t */\n\tset rotationX(value: number) {\n\t\tthis._rotationX = valueOrDefault(value, 0);\n\t}\n\n\t/**\n\t * Gets the Y-axis rotation property.\n\t *\n\t * @type {number}\n\t */\n\tget rotationY(): number {\n\t\treturn this._rotationY;\n\t}\n\n\t/**\n\t * Sets the Y-axis rotation property.\n\t *\n\t * @type {?number}\n\t */\n\tset rotationY(value: number) {\n\t\tthis._rotationY = valueOrDefault(value, 0);\n\t}\n\n\t/**\n\t * Gets the Z-axis rotation property.\n\t *\n\t * @type {number}\n\t */\n\tget rotationZ(): number {\n\t\treturn this._rotationZ;\n\t}\n\n\t/**\n\t * Sets the Z-axis rotation property.\n\t *\n\t * @type {?number}\n\t */\n\tset rotationZ(value: number) {\n\t\tthis._rotationZ = valueOrDefault(value, this._defaultStyle.rotationZ);\n\t}\n\n\t/**\n\t * Gets the X-axis skew property.\n\t *\n\t * @type {number}\n\t */\n\tget skewX(): number {\n\t\treturn this._skewX;\n\t}\n\n\t/**\n\t * Sets the X-axis skew property.\n\t *\n\t * @type {?number}\n\t */\n\tset skewX(value: number) {\n\t\tthis._skewX = valueOrDefault(value, 0);\n\t}\n\n\t/**\n\t * Gets the Y-axis skew property.\n\t *\n\t * @type {number}\n\t */\n\tget skewY(): number {\n\t\treturn this._skewY;\n\t}\n\n\t/**\n\t * Sets the Y-axis skew property.\n\t *\n\t * @type {?number}\n\t */\n\tset skewY(value: number) {\n\t\tthis._skewY = valueOrDefault(value, 0);\n\t}\n\n\t/**\n\t * Gets the primary color property.\n\t *\n\t * @type {!libjass.Color}\n\t */\n\tget primaryColor(): Color {\n\t\treturn this._primaryColor;\n\t}\n\n\t/**\n\t * Sets the primary color property. null defaults it to the default style's value.\n\t *\n\t * @type {libjass.Color}\n\t */\n\tset primaryColor(value: Color) {\n\t\tthis._primaryColor = valueOrDefault(value, this._defaultStyle.primaryColor);\n\t}\n\n\t/**\n\t * Gets the secondary color property.\n\t *\n\t * @type {!libjass.Color}\n\t */\n\tget secondaryColor(): Color {\n\t\treturn this._secondaryColor;\n\t}\n\n\t/**\n\t * Sets the secondary color property. null defaults it to the default style's value.\n\t *\n\t * @type {libjass.Color}\n\t */\n\tset secondaryColor(value: Color) {\n\t\tthis._secondaryColor = valueOrDefault(value, this._defaultStyle.secondaryColor);\n\t}\n\n\t/**\n\t * Gets the outline color property.\n\t *\n\t * @type {!libjass.Color}\n\t */\n\tget outlineColor(): Color {\n\t\treturn this._outlineColor;\n\t}\n\n\t/**\n\t * Sets the outline color property. null defaults it to the default style's value.\n\t *\n\t * @type {libjass.Color}\n\t */\n\tset outlineColor(value: Color) {\n\t\tthis._outlineColor = valueOrDefault(value, this._defaultStyle.outlineColor);\n\t}\n\n\t/**\n\t * Gets the shadow color property.\n\t *\n\t * @type {!libjass.Color}\n\t */\n\tget shadowColor(): Color {\n\t\treturn this._shadowColor;\n\t}\n\n\t/**\n\t * Sets the shadow color property. null defaults it to the default style's value.\n\t *\n\t * @type {libjass.Color}\n\t */\n\tset shadowColor(value: Color) {\n\t\tthis._shadowColor = valueOrDefault(value, this._defaultStyle.shadowColor);\n\t}\n\n\t/**\n\t * Gets the primary alpha property.\n\t *\n\t * @type {number}\n\t */\n\tget primaryAlpha(): number {\n\t\treturn this._primaryAlpha;\n\t}\n\n\t/**\n\t * Sets the primary alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tset primaryAlpha(value: number) {\n\t\tthis._primaryAlpha = valueOrDefault(value, this._defaultStyle.primaryColor.alpha);\n\t}\n\n\t/**\n\t * Gets the secondary alpha property.\n\t *\n\t * @type {number}\n\t */\n\tget secondaryAlpha(): number {\n\t\treturn this._secondaryAlpha;\n\t}\n\n\t/**\n\t * Sets the secondary alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tset secondaryAlpha(value: number) {\n\t\tthis._secondaryAlpha = valueOrDefault(value, this._defaultStyle.secondaryColor.alpha);\n\t}\n\n\t/**\n\t * Gets the outline alpha property.\n\t *\n\t * @type {number}\n\t */\n\tget outlineAlpha(): number {\n\t\treturn this._outlineAlpha;\n\t}\n\n\t/**\n\t * Sets the outline alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tset outlineAlpha(value: number) {\n\t\tthis._outlineAlpha = valueOrDefault(value, this._defaultStyle.outlineColor.alpha);\n\t}\n\n\t/**\n\t * Gets the shadow alpha property.\n\t *\n\t * @type {number}\n\t */\n\tget shadowAlpha(): number {\n\t\treturn this._shadowAlpha;\n\t}\n\n\t/**\n\t * Sets the shadow alpha property.\n\t *\n\t * @type {?number}\n\t */\n\tset shadowAlpha(value: number) {\n\t\tthis._shadowAlpha = valueOrDefault(value, this._defaultStyle.shadowColor.alpha);\n\t}\n}\n\n/**\n * @param {!libjass.parts.Color} color\n * @return {!SVGFEComponentTransferElement}\n */\nfunction createComponentTransferFilter(color: Color): SVGFEComponentTransferElement {\n\tconst result = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feComponentTransfer\");\n\n\tconst redTransferNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feFuncR\");\n\tresult.appendChild(redTransferNode);\n\tredTransferNode.type.baseVal = SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR;\n\tredTransferNode.slope.baseVal = 0;\n\tredTransferNode.intercept.baseVal = color.red / 255;\n\n\tconst greenTransferNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feFuncG\");\n\tresult.appendChild(greenTransferNode);\n\tgreenTransferNode.type.baseVal = SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR;\n\tgreenTransferNode.slope.baseVal = 0;\n\tgreenTransferNode.intercept.baseVal = color.green / 255;\n\n\tconst blueTransferNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feFuncB\");\n\tresult.appendChild(blueTransferNode);\n\tblueTransferNode.type.baseVal = SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR;\n\tblueTransferNode.slope.baseVal = 0;\n\tblueTransferNode.intercept.baseVal = color.blue / 255;\n\n\tconst alphaTransferNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feFuncA\");\n\tresult.appendChild(alphaTransferNode);\n\talphaTransferNode.type.baseVal = SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR;\n\talphaTransferNode.slope.baseVal = color.alpha;\n\talphaTransferNode.intercept.baseVal = 0;\n\n\treturn result;\n}\n\n/**\n * @param {?T} newValue\n * @param {!T} defaultValue\n * @return {!T}\n */\nfunction valueOrDefault<T>(newValue: T, defaultValue: T): T {\n\treturn ((newValue !== null) ? newValue : defaultValue);\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../../utility/map\";\nimport { Promise } from \"../../utility/promise\";\n\n/**\n * @param {string} fontFamily\n * @param {number} fontSize\n * @param {string} fallbackFonts\n * @param {!HTMLDivElement} fontSizeElement\n */\nfunction prepareFontSizeElement(fontFamily: string, fontSize: number, fallbackFonts: string, fontSizeElement: HTMLDivElement): void {\n\tlet fonts = `\"${ fontFamily }\"`;\n\tif (fallbackFonts !== \"\") {\n\t\tfonts += `, ${ fallbackFonts }`;\n\t}\n\n\tfontSizeElement.style.fontFamily = fonts;\n\tfontSizeElement.style.fontSize = `${ fontSize }px`;\n}\n\n/**\n * @param {string} fontFamily\n * @param {number} fontSize\n * @param {string} fallbackFonts\n * @param {!HTMLDivElement} fontSizeElement\n * @return {!Promise.<number>}\n */\nfunction lineHeightForFontSize(fontFamily: string, fontSize: number, fallbackFonts: string, fontSizeElement: HTMLDivElement): Promise<number> {\n\tprepareFontSizeElement(fontFamily, fontSize, fallbackFonts, fontSizeElement);\n\n\treturn new Promise(resolve => setTimeout(() => resolve(fontSizeElement.offsetHeight), 1000));\n}\n\n/**\n * @param {string} fontFamily\n * @param {number} fontSize\n * @param {string} fallbackFonts\n * @param {!HTMLDivElement} fontSizeElement\n * @return {number}\n */\nfunction lineHeightForFontSizeSync(fontFamily: string, fontSize: number, fallbackFonts: string, fontSizeElement: HTMLDivElement): number {\n\tprepareFontSizeElement(fontFamily, fontSize, fallbackFonts, fontSizeElement);\n\n\treturn fontSizeElement.offsetHeight;\n}\n\n/**\n * @param {number} lowerLineHeight\n * @param {number} upperLineHeight\n * @return {[number, number]}\n */\nfunction fontMetricsFromLineHeights(lowerLineHeight: number, upperLineHeight: number): [number, number] {\n\treturn [lowerLineHeight, (360 - 180) / (upperLineHeight - lowerLineHeight)];\n}\n\n/**\n * Calculates font metrics for the given font family.\n *\n * @param {string} fontFamily\n * @param {string} fallbackFonts\n * @param {!HTMLDivElement} fontSizeElement\n * @return {!Promise.<number>}\n */\nexport function calculateFontMetrics(fontFamily: string, fallbackFonts: string, fontSizeElement: HTMLDivElement): Promise<[number, number]> {\n\treturn lineHeightForFontSize(fontFamily, 180, fallbackFonts, fontSizeElement).then(lowerLineHeight =>\n\t\tlineHeightForFontSize(fontFamily, 360, fallbackFonts, fontSizeElement).then(upperLineHeight =>\n\t\t\tfontMetricsFromLineHeights(lowerLineHeight, upperLineHeight)\n\t\t)\n\t);\n}\n\n/**\n * @param {number} lineHeight\n * @param {number} lowerLineHeight\n * @param {number} factor\n * @return {number}\n */\nfunction fontSizeFromMetrics(lineHeight: number, lowerLineHeight: number, factor: number): number {\n\treturn 180 + (lineHeight - lowerLineHeight) * factor;\n}\n\n/**\n * Uses linear interpolation to calculate the CSS font size that would give the specified line height for the specified font family.\n *\n * WARNING: If fontMetricsCache doesn't already contain a cached value for this font family, and it is not a font already installed on the user's device, then this function\n * may return wrong values. To avoid this, make sure to preload the font using the {@link libjass.renderers.RendererSettings.fontMap} property when constructing the renderer.\n *\n * @param {string} fontFamily\n * @param {number} lineHeight\n * @param {string} fallbackFonts\n * @param {!HTMLDivElement} fontSizeElement\n * @param {!Map.<string, [number, number]>} fontMetricsCache\n * @return {number}\n */\nexport function fontSizeForLineHeight(fontFamily: string, lineHeight: number, fallbackFonts: string, fontSizeElement: HTMLDivElement, fontMetricsCache: Map<string, [number, number]>): number {\n\tlet existingMetrics = fontMetricsCache.get(fontFamily);\n\tif (existingMetrics === undefined) {\n\t\tconst lowerLineHeight = lineHeightForFontSizeSync(fontFamily, 180, fallbackFonts, fontSizeElement);\n\t\tconst upperLineHeight = lineHeightForFontSizeSync(fontFamily, 360, fallbackFonts, fontSizeElement);\n\t\tfontMetricsCache.set(fontFamily, existingMetrics = fontMetricsFromLineHeights(lowerLineHeight, upperLineHeight));\n\t}\n\n\tconst [lowerLineHeight, factor] = existingMetrics;\n\treturn fontSizeFromMetrics(lineHeight, lowerLineHeight, factor);\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as parts from \"../../parts\";\n\n/**\n * This class represents an ASS drawing - a set of drawing instructions between {\\p} tags.\n *\n * @param {number} outputScaleX\n * @param {number} outputScaleY\n */\nexport class DrawingStyles {\n\tprivate _scale: number = 1;\n\tprivate _baselineOffset: number = 0;\n\n\tconstructor(private _outputScaleX: number, private _outputScaleY: number) { }\n\n\t/**\n\t * @type {number}\n\t */\n\tset scale(value: number) {\n\t\tthis._scale = value;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tset baselineOffset(value: number) {\n\t\tthis._baselineOffset = value;\n\t}\n\n\t/**\n\t * Converts this drawing to an <svg> element.\n\t *\n\t * @param {!libjass.parts.DrawingInstructions} drawingInstructions\n\t * @param {!libjass.parts.Color} fillColor\n\t * @return {!SVGSVGElement}\n\t */\n\ttoSVG(drawingInstructions: parts.DrawingInstructions, fillColor: parts.Color): SVGSVGElement {\n\t\tconst svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n\t\tsvg.setAttribute(\"version\", \"1.1\");\n\n\t\tif (drawingInstructions.instructions.length === 0) {\n\t\t\treturn svg;\n\t\t}\n\n\t\tconst scaleFactor = Math.pow(2, this._scale - 1);\n\t\tconst scaleX = this._outputScaleX / scaleFactor;\n\t\tconst scaleY = this._outputScaleY / scaleFactor;\n\n\t\tconst path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\t\tlet pathString = \"\";\n\n\t\tlet bboxMinX = Infinity;\n\t\tlet bboxMaxX = -Infinity;\n\t\tlet bboxMinY = Infinity;\n\t\tlet bboxMaxY = -Infinity;\n\n\t\tfor (const instruction of drawingInstructions.instructions) {\n\t\t\tif (instruction instanceof parts.drawing.MoveInstruction) {\n\t\t\t\tpathString += ` M ${ instruction.x.toFixed(3) } ${ (instruction.y + this._baselineOffset).toFixed(3) }`;\n\n\t\t\t\tbboxMinX = Math.min(bboxMinX, instruction.x);\n\t\t\t\tbboxMaxX = Math.max(bboxMaxX, instruction.x);\n\t\t\t\tbboxMinY = Math.min(bboxMinY, instruction.y + this._baselineOffset);\n\t\t\t\tbboxMaxY = Math.max(bboxMaxY, instruction.y + this._baselineOffset);\n\t\t\t}\n\t\t\telse if (instruction instanceof parts.drawing.LineInstruction) {\n\t\t\t\tpathString += ` L ${ instruction.x.toFixed(3) } ${ (instruction.y + this._baselineOffset).toFixed(3) }`;\n\n\t\t\t\tbboxMinX = Math.min(bboxMinX, instruction.x);\n\t\t\t\tbboxMaxX = Math.max(bboxMaxX, instruction.x);\n\t\t\t\tbboxMinY = Math.min(bboxMinY, instruction.y + this._baselineOffset);\n\t\t\t\tbboxMaxY = Math.max(bboxMaxY, instruction.y + this._baselineOffset);\n\t\t\t}\n\t\t\telse if (instruction instanceof parts.drawing.CubicBezierCurveInstruction) {\n\t\t\t\tpathString += ` C ${ instruction.x1.toFixed(3) } ${ (instruction.y1 + this._baselineOffset).toFixed(3) } ${ instruction.x2.toFixed(3) } ${ (instruction.y2 + this._baselineOffset).toFixed(3) } ${ instruction.x3.toFixed(3) } ${ (instruction.y3 + this._baselineOffset).toFixed(3) }`;\n\n\t\t\t\tbboxMinX = Math.min(bboxMinX, instruction.x1, instruction.x2, instruction.x3);\n\t\t\t\tbboxMaxX = Math.max(bboxMaxX, instruction.x1, instruction.x2, instruction.x3);\n\t\t\t\tbboxMinY = Math.min(bboxMinY, instruction.y1 + this._baselineOffset, instruction.y2 + this._baselineOffset, instruction.y3 + this._baselineOffset);\n\t\t\t\tbboxMaxY = Math.max(bboxMaxY, instruction.y1 + this._baselineOffset, instruction.y2 + this._baselineOffset, instruction.y3 + this._baselineOffset);\n\t\t\t}\n\t\t}\n\n\t\tbboxMinX *= scaleX;\n\t\tbboxMaxX *= scaleX;\n\t\tbboxMinY *= scaleY;\n\t\tbboxMaxY *= scaleY;\n\n\t\tconst bboxWidth = bboxMaxX - bboxMinX;\n\t\tconst bboxHeight = bboxMaxY - bboxMinY;\n\n\t\tsvg.width.baseVal.valueAsString = `${ bboxWidth.toFixed(3) }px`;\n\t\tsvg.height.baseVal.valueAsString = `${ bboxHeight.toFixed(3) }px`;\n\n\t\t// svg.viewBox.baseVal is null in atleast FF. See https://bugzilla.mozilla.org/show_bug.cgi?id=888307 which justifies it with SVG 1.2 spec.\n\t\tsvg.setAttribute(\"viewBox\", `${ bboxMinX } ${ bboxMinY } ${ bboxWidth } ${ bboxHeight }`);\n\n\t\tsvg.style.position = \"relative\";\n\t\tsvg.style.left = `${ bboxMinX.toFixed(3) }px`;\n\t\tsvg.style.top = `${ bboxMinY.toFixed(3) }px`;\n\n\t\tconst g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t\tsvg.appendChild(g);\n\t\tg.setAttribute(\"transform\", `scale(${ scaleX.toFixed(3) } ${ scaleY.toFixed(3) })`);\n\n\t\tg.appendChild(path);\n\t\tpath.setAttribute(\"d\", pathString);\n\t\tpath.setAttribute(\"fill\", fillColor.toString());\n\n\t\treturn svg;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Keyframe } from \"./keyframe\";\n\nimport { NullRenderer } from \"../null\";\n\nimport { Map } from \"../../utility/map\";\n\n/**\n * This class represents a collection of animations. Each animation contains one or more keyframes.\n * The collection can then be converted to a CSS3 representation.\n *\n * @param {!libjass.renderers.NullRenderer} renderer The renderer that this collection is associated with\n * @param {!HTMLStyleElement} style A <style> element to insert the animation rules into\n */\nexport class AnimationCollection {\n\tprivate static _nextId: number = 0;\n\n\tprivate _id: string;\n\tprivate _rate: number;\n\n\tprivate _animationStyle: string = \"\";\n\tprivate _animationDelays: Map<string, number> = new Map<string, number>();\n\tprivate _numAnimations: number = 0;\n\n\tconstructor(renderer: NullRenderer, private _style: HTMLStyleElement) {\n\t\tthis._id = `${ renderer.id }-${ AnimationCollection._nextId++ }`;\n\t\tthis._rate = renderer.clock.rate;\n\t}\n\n\t/**\n\t * This string should be set as the \"animation\" CSS property of the target element.\n\t *\n\t * @type {string}\n\t */\n\tget animationStyle(): string {\n\t\treturn this._animationStyle;\n\t}\n\n\t/**\n\t * This array should be used to set the \"animation-delay\" CSS property of the target element.\n\t *\n\t * @type {!Array.<number>}\n\t */\n\tget animationDelays(): Map<string, number> {\n\t\treturn this._animationDelays;\n\t}\n\n\t/**\n\t * Add an animation to this collection. The given keyframes together make one animation.\n\t *\n\t * @param {string} timingFunction One of the acceptable values for the \"animation-timing-function\" CSS property\n\t * @param {!Array.<!libjass.renderers.Keyframe>} keyframes\n\t */\n\tadd(timingFunction: string, keyframes: Keyframe[]): void {\n\t\tif (keyframes.length < 1) {\n\t\t\tthrow new Error(\"Atleast one keyframe must be provided.\");\n\t\t}\n\n\t\tlet start: number = null;\n\t\tlet end: number = null;\n\n\t\tfor (const keyframe of keyframes) {\n\t\t\tif (start === null) {\n\t\t\t\tstart = keyframe.time;\n\t\t\t}\n\n\t\t\tend = keyframe.time;\n\t\t}\n\n\t\tlet ruleCssText = \"\";\n\n\t\tfor (const keyframe of keyframes) {\n\t\t\truleCssText +=\n`\t${ (100 * ((end - start === 0) ? 1 : ((keyframe.time - start) / (end - start)))).toFixed(3) }% {\n`;\n\n\t\t\tkeyframe.properties.forEach((value, name) => {\n\t\t\t\truleCssText +=\n`\t\t${ name }: ${ value };\n`;\n\t\t\t});\n\n\t\t\truleCssText +=\n`\t}\n`;\n\t\t}\n\n\t\tconst animationName = `animation-${ this._id }-${ this._numAnimations++ }`;\n\n\t\tthis._style.appendChild(document.createTextNode(\n`@-webkit-keyframes ${ animationName } {\n${ ruleCssText }\n}`));\n\n\t\tthis._style.appendChild(document.createTextNode(\n`@keyframes ${ animationName } {\n${ ruleCssText }\n}`));\n\n\t\tif (this._animationStyle !== \"\") {\n\t\t\tthis._animationStyle += \",\";\n\t\t}\n\n\t\tthis._animationStyle += `${ animationName } ${ ((end - start) / this._rate).toFixed(3) }s ${ timingFunction }`;\n\t\tthis._animationDelays.set(animationName, start);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Clock, ClockEvent } from \"./clocks/base\";\n\nimport { RendererSettings } from \"./settings\";\n\nimport { debugMode, verboseMode } from \"../settings\";\n\nimport { ASS } from \"../types/ass\";\nimport { Dialogue } from \"../types/dialogue\";\n\n/**\n * A renderer implementation that doesn't output anything.\n *\n * @param {!libjass.ASS} ass\n * @param {!libjass.renderers.Clock} clock\n * @param {libjass.renderers.RendererSettings} settings\n */\nexport class NullRenderer {\n\tprivate static _lastRendererId = -1;\n\n\tprivate _id: number;\n\n\tprivate _settings: RendererSettings;\n\n\tconstructor(private _ass: ASS, private _clock: Clock, settings?: RendererSettings) {\n\t\tthis._id = ++NullRenderer._lastRendererId;\n\n\t\tthis._settings = RendererSettings.from(settings);\n\n\t\tthis._clock.addEventListener(ClockEvent.Play, () => this._onClockPlay());\n\t\tthis._clock.addEventListener(ClockEvent.Tick, () => this._onClockTick());\n\t\tthis._clock.addEventListener(ClockEvent.Pause, () => this._onClockPause());\n\t\tthis._clock.addEventListener(ClockEvent.Stop, () => this._onClockStop());\n\t\tthis._clock.addEventListener(ClockEvent.RateChange, () => this._onClockRateChange());\n\t}\n\n\t/**\n\t * The unique ID of this renderer. Auto-generated.\n\t *\n\t * @type {number}\n\t */\n\tget id(): number {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * @type {!libjass.ASS}\n\t */\n\tget ass(): ASS {\n\t\treturn this._ass;\n\t}\n\n\t/**\n\t * @type {!libjass.renderers.Clock}\n\t */\n\tget clock(): Clock {\n\t\treturn this._clock;\n\t}\n\n\t/**\n\t * @type {!libjass.renderers.RendererSettings}\n\t */\n\tget settings(): RendererSettings {\n\t\treturn this._settings;\n\t}\n\n\t/**\n\t * Pre-render a dialogue. This is a no-op for this type.\n\t *\n\t * @param {!libjass.Dialogue} dialogue\n\t */\n\tpreRender(dialogue: Dialogue): void { }\n\n\t/**\n\t * Draw a dialogue. This is a no-op for this type.\n\t *\n\t * @param {!libjass.Dialogue} dialogue\n\t */\n\tdraw(dialogue: Dialogue): void { }\n\n\t/**\n\t * Enable the renderer.\n\t *\n\t * @return {boolean} True if the renderer is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean {\n\t\treturn this._clock.enable();\n\t}\n\n\t/**\n\t * Disable the renderer.\n\t *\n\t * @return {boolean} True if the renderer is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean {\n\t\treturn this._clock.disable();\n\t}\n\n\t/**\n\t * Toggle the renderer.\n\t */\n\ttoggle(): void {\n\t\tthis._clock.toggle();\n\t}\n\n\t/**\n\t * Enable or disable the renderer.\n\t *\n\t * @param {boolean} enabled If true, the renderer is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the renderer is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean {\n\t\treturn this._clock.setEnabled(enabled);\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget enabled(): boolean {\n\t\treturn this._clock.enabled;\n\t}\n\n\t/**\n\t * Runs when the clock is enabled, or starts playing, or is resumed from pause.\n\t */\n\tprotected _onClockPlay(): void {\n\t\tif (verboseMode) {\n\t\t\tconsole.log(\"NullRenderer._onClockPlay\");\n\t\t}\n\t}\n\n\t/**\n\t * Runs when the clock's current time changed. This might be a result of either regular playback or seeking.\n\t */\n\tprotected _onClockTick(): void {\n\t\tconst currentTime = this._clock.currentTime;\n\n\t\tif (verboseMode) {\n\t\t\tconsole.log(`NullRenderer._onClockTick: currentTime = ${ currentTime }`);\n\t\t}\n\n\t\tfor (const dialogue of this._ass.dialogues) {\n\t\t\ttry {\n\t\t\t\tif (dialogue.end > currentTime) {\n\t\t\t\t\tif (dialogue.start <= currentTime) {\n\t\t\t\t\t\t// This dialogue is visible right now. Draw it.\n\t\t\t\t\t\tthis.draw(dialogue);\n\t\t\t\t\t}\n\t\t\t\t\telse if (dialogue.start <= (currentTime + this._settings.preRenderTime)) {\n\t\t\t\t\t\t// This dialogue will be visible soon. Pre-render it.\n\t\t\t\t\t\tthis.preRender(dialogue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (ex) {\n\t\t\t\tif (debugMode) {\n\t\t\t\t\tconsole.error(`Rendering dialogue ${ dialogue.id } failed.`, ex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Runs when the clock is paused.\n\t */\n\tprotected _onClockPause(): void {\n\t\tif (verboseMode) {\n\t\t\tconsole.log(\"NullRenderer._onClockPause\");\n\t\t}\n\t}\n\n\t/**\n\t * Runs when the clock is disabled.\n\t */\n\tprotected _onClockStop(): void {\n\t\tif (verboseMode) {\n\t\t\tconsole.log(\"NullRenderer._onClockStop\");\n\t\t}\n\t}\n\n\t/**\n\t * Runs when the clock changes its rate.\n\t */\n\tprotected _onClockRateChange(): void {\n\t\tif (verboseMode) {\n\t\t\tconsole.log(\"NullRenderer._onClockRateChange\");\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../../utility/map\";\n\n/**\n * This class represents a single keyframe. It has a list of CSS properties (names and values) associated with a point in time. Multiple keyframes make up an animation.\n *\n * @param {number} time\n * @param {!Map.<string, string>} properties\n */\nexport class Keyframe {\n\tconstructor(private _time: number, private _properties: Map<string, string>) { }\n\n\t/**\n\t * @type {number}\n\t */\n\tget time(): number {\n\t\treturn this._time;\n\t}\n\n\t/**\n\t * @type {!Map.<string, string>}\n\t */\n\tget properties(): Map<string, string> {\n\t\treturn this._properties;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugMode } from \"../settings\";\nimport { Map } from \"../utility/map\";\n\n/**\n * Settings for the renderer.\n */\nexport class RendererSettings {\n\t/**\n\t * A map of font name to one or more URLs of that font. If provided, the fonts in this map are pre-loaded by the WebRenderer when it's created.\n\t *\n\t * The key of each entry of the map is the font name used in the ASS script. There are three choices for the value:\n\t *\n\t * - A single string that you would use for the src attribute of a @font-face rule. Eg: `'url(\"/fonts.foo.ttf\"), url(\"/fonts/foo-fallback.ttf\"), local(\"Arial.ttf\")'`\n\t *\n\t * - An array of the individual sources that you would use for the src attribute of a @font-face rule. Eg: `['url(\"/fonts.foo.ttf\")', 'url(\"/fonts/foo-fallback.ttf\")', 'local(\"Arial\")']`\n\t *\n\t * - An array of URLs. Eg: `[\"/fonts.foo.ttf\", \"/fonts/foo-fallback.ttf\"]`\n\t *\n\t * Only the first and second forms allow you to use local fonts. The third form only allows you to use remote fonts.\n\t *\n\t * If you have a <style> or <link> element on the page containing @font-face rules, you can use the {@link libjass.renderers.RendererSettings.makeFontMapFromStyleElement}\n\t * convenience method to create a font map.\n\t *\n\t * Defaults to null.\n\t *\n\t * @type {Map.<string, (string|!Array.<string>)>}\n\t */\n\tfontMap: Map<string, string | string[]>;\n\n\t/**\n\t * Subtitles will be pre-rendered for this amount of time (seconds).\n\t *\n\t * Defaults to 5.\n\t *\n\t * @type {number}\n\t */\n\tpreRenderTime: number;\n\n\t/**\n\t * Subtitle outlines will be rendered in full detail. When false, the value of blur is used to draw less outlines for better performance and (hopefully) similar output.\n\t *\n\t * Defaults to false.\n\t *\n\t * @type {boolean}\n\t */\n\tpreciseOutlines: boolean;\n\n\t/**\n\t * Outlines and blur are implemented using SVG filters by default. When false, they will be rendered using alternative means.\n\t *\n\t * IE 11 and below do not support SVG filters on HTML elements so this should be set to false there. See http://caniuse.com/svg-html for details.\n\t *\n\t * Defaults to true.\n\t *\n\t * @type {boolean}\n\t */\n\tenableSvg: boolean;\n\n\t/**\n\t * Comma-separated list of fonts to be used when font specified in ASS Styles not loaded.\n\t *\n\t * The value should be a valid CSS font-family property (i.e. comma-separated and individual names in quotes if necessary). Use empty string to disable fallback.\n\t *\n\t * Defaults to 'Arial, Helvetica, sans-serif, \"Segoe UI Symbol\"'.\n\t *\n\t * @type {string}\n\t */\n\tfallbackFonts: string;\n\n\t/**\n\t * If true, attached TTF fonts in the ASS script will be used. The font is loaded as a data: URI. Requires ES6 typed arrays (ArrayBuffer, DataView, Uint8Array, etc).\n\t *\n\t * The font is naively parsed to extract the strings that will be used as the font family. Do not use this option with untrusted fonts or scripts.\n\t *\n\t * Defaults to false.\n\t *\n\t * @type {boolean}\n\t */\n\tuseAttachedFonts: boolean;\n\n\t/**\n\t * A convenience method to create a font map from a <style> or <link> element that contains @font-face rules. There should be one @font-face rule for each font name, mapping to a font file URL.\n\t *\n\t * For example:\n\t *\n\t *     @font-face {\n\t *         font-family: \"Helvetica\";\n\t *         src: url(\"/fonts/helvetica.ttf\"), local(\"Arial\");\n\t *     }\n\t *\n\t * More complicated @font-face syntax like format() or multi-line src are not supported.\n\t *\n\t * @param {!LinkStyle} linkStyle\n\t * @return {!Map.<string, string>}\n\t */\n\tstatic makeFontMapFromStyleElement(linkStyle: LinkStyle): Map<string, string> {\n\t\tconst fontMap = new Map<string, string>();\n\n\t\tconst styleSheet = linkStyle.sheet as CSSStyleSheet;\n\t\tfor (let i = 0; i < styleSheet.cssRules.length; i++) {\n\t\t\tconst rule = styleSheet.cssRules[i];\n\n\t\t\tif (isFontFaceRule(rule)) {\n\t\t\t\tconst name = rule.style.getPropertyValue(\"font-family\").match(/^[\"']?(.*?)[\"']?$/)[1];\n\n\t\t\t\tlet src = rule.style.getPropertyValue(\"src\");\n\t\t\t\tif (!src) {\n\t\t\t\t\tsrc = rule.cssText.split(\"\\n\")\n\t\t\t\t\t\t.map(line => line.match(/src:\\s*([^;]+?)\\s*;/))\n\t\t\t\t\t\t.filter(matches => matches !== null)\n\t\t\t\t\t\t.map(matches => matches[1])[0];\n\t\t\t\t}\n\n\t\t\t\tfontMap.set(name, src);\n\t\t\t}\n\t\t}\n\n\t\treturn fontMap;\n\t}\n\n\t/**\n\t * Converts an arbitrary object into a {@link libjass.renderers.RendererSettings} object.\n\t *\n\t * @param {*} object\n\t * @return {!libjass.renderers.RendererSettings}\n\t */\n\tstatic from(object?: any): RendererSettings {\n\t\tif (object === undefined || object === null) {\n\t\t\tobject = {};\n\t\t}\n\n\t\tconst {\n\t\t\tfontMap = null,\n\t\t\tpreRenderTime = 5,\n\t\t\tpreciseOutlines = false,\n\t\t\tenableSvg = testSupportsSvg(),\n\t\t\tfallbackFonts = 'Arial, Helvetica, sans-serif, \"Segoe UI Symbol\"',\n\t\t\tuseAttachedFonts = false,\n\t\t} = object as RendererSettings;\n\n\t\tconst result = new RendererSettings();\n\t\tresult.fontMap = fontMap;\n\t\tresult.preRenderTime = preRenderTime;\n\t\tresult.preciseOutlines = preciseOutlines;\n\t\tresult.enableSvg = enableSvg;\n\t\tresult.fallbackFonts = fallbackFonts;\n\t\tresult.useAttachedFonts = useAttachedFonts;\n\n\t\treturn result;\n\t}\n}\n\n/**\n * @param {!CSSRule} rule\n * @return {boolean}\n */\nfunction isFontFaceRule(rule: CSSRule): rule is CSSFontFaceRule {\n\treturn rule.type === CSSRule.FONT_FACE_RULE;\n}\n\n/**\n * Returns true if this environment may support SVG filter effects. May return false positives.\n *\n * @return {boolean}\n */\nfunction testSupportsSvg(): boolean {\n\tif (debugMode) {\n\t\tconsole.log(\"Testing whether SVG filter effects are supported.\");\n\t}\n\n\tif (typeof document === \"undefined\") {\n\t\tif (debugMode) {\n\t\t\tconsole.log(\"This doesn't look like a browser. Assuming it doesn't support SVG filter effects.\");\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tconst morphologyFilter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feMorphology\");\n\n\t// https://connect.microsoft.com/IE/feedback/details/2375800\n\ttry {\n\t\tmorphologyFilter.radiusX.baseVal = 1;\n\t}\n\tcatch (ex) {\n\t\tif (debugMode) {\n\t\t\tif (ex instanceof DOMException) {\n\t\t\t\tconst domException = ex as DOMException;\n\t\t\t\tif (domException.code === DOMException.NO_MODIFICATION_ALLOWED_ERR) {\n\t\t\t\t\tconsole.log(\"Setting SVGFEMorphologyElement.radiusX.baseVal threw NoModificationAllowedError. This browser doesn't support SVG DOM correctly.\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(`Setting SVGFEMorphologyElement.radiusX.baseVal threw unexpected DOMException code ${ domException.code }. This browser doesn't support SVG DOM correctly.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(`Setting SVGFEMorphologyElement.radiusX.baseVal threw unexpected exception ${ ex }. This browser doesn't support SVG SVG DOM correctly.`);\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// https://connect.microsoft.com/IE/feedback/details/2375757\n\tmorphologyFilter.setAttribute(\"radius\", \"1\");\n\tif (morphologyFilter.cloneNode().getAttribute(\"radius\") !== \"1\") {\n\t\tif (debugMode) {\n\t\t\tconsole.log(\"SVGFEMorphologyElement's radius attribute was corrupted when cloned. This browser doesn't support SVG DOM correctly.\");\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tif (debugMode) {\n\t\tconsole.log(\"This browser may support SVG filter effects.\");\n\t}\n\n\treturn true;\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AutoClock } from \"./auto\";\nimport { Clock, ClockEvent } from \"./base\";\n\n/**\n * An implementation of libjass.renderers.Clock that generates {@link libjass.renderers.ClockEvent}s according to the state of a <video> element.\n *\n * @param {!HTMLVideoElement} video\n */\nexport class VideoClock implements Clock {\n\tprivate _autoClock: AutoClock;\n\n\tconstructor(video: HTMLVideoElement) {\n\t\tthis._autoClock = new AutoClock(() => video.currentTime, 100);\n\t\tvideo.addEventListener(\"playing\", () => this._autoClock.play(), false);\n\t\tvideo.addEventListener(\"pause\", () => this._autoClock.pause(), false);\n\t\tvideo.addEventListener(\"seeking\", () => this._autoClock.seeking(), false);\n\t\tvideo.addEventListener(\"ratechange\", () => this._autoClock.setRate(video.playbackRate), false);\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget currentTime(): number {\n\t\treturn this._autoClock.currentTime;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget enabled(): boolean {\n\t\treturn this._autoClock.enabled;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget paused(): boolean {\n\t\treturn this._autoClock.paused;\n\t}\n\n\t/**\n\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @type {number}\n\t */\n\tget rate(): number {\n\t\treturn this._autoClock.rate;\n\t}\n\n\t/**\n\t * Enable the clock.\n\t *\n\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean {\n\t\treturn this._autoClock.enable();\n\t}\n\n\t/**\n\t * Disable the clock.\n\t *\n\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean {\n\t\treturn this._autoClock.disable();\n\t}\n\n\t/**\n\t * Toggle the clock.\n\t */\n\ttoggle(): void {\n\t\tif (this._autoClock.enabled) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse {\n\t\t\tthis.enable();\n\t\t}\n\t}\n\n\t/**\n\t * Enable or disable the clock.\n\t *\n\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean {\n\t\tif (enabled) {\n\t\t\treturn this.enable();\n\t\t}\n\t\telse {\n\t\t\treturn this.disable();\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @param {!Function} listener\n\t */\n\taddEventListener(type: ClockEvent, listener: Function): void {\n\t\tthis._autoClock.addEventListener(type, listener);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugMode } from \"../../settings\";\n\nimport { Clock, ClockEvent } from \"./base\";\nimport { ManualClock } from \"./manual\";\n\n/**\n * An implementation of {@link libjass.renderers.Clock} that automatically ticks and generates {@link libjass.renderers.ClockEvent}s according to the state of an external driver.\n *\n * For example, if you're using libjass to render subtitles on a canvas with your own video controls, these video controls will function as the driver to this AutoClock.\n * It would call {@link libjass.renderers.AutoClock.play}, {@link libjass.renderers.AutoClock.pause}, etc. when the user pressed the corresponding video controls.\n *\n * The difference from ManualClock is that AutoClock does not require the driver to call something like {@link libjass.renderers.ManualClock.tick}. Instead it keeps its\n * own time with a high-resolution requestAnimationFrame-based timer.\n *\n * If using libjass with a <video> element, consider using {@link libjass.renderers.VideoClock} that uses the video element as a driver.\n *\n * @param {function():number} getCurrentTime A callback that will be invoked to get the current time of the external driver.\n * @param {number} autoPauseAfter If two calls to getCurrentTime are more than autoPauseAfter milliseconds apart but return the same time, then the external driver will be\n * considered to have paused.\n */\nexport class AutoClock implements Clock {\n\tprivate _manualClock: ManualClock = new ManualClock();\n\n\tprivate _nextAnimationFrameRequestId: number = null;\n\n\tprivate _lastKnownExternalTime: number = null;\n\tprivate _lastKnownExternalTimeObtainedAt: number = null;\n\n\tconstructor(private _getCurrentTime: () => number, private _autoPauseAfter: number) { }\n\n\t/**\n\t * Tells the clock to start generating ticks.\n\t */\n\tplay(): void {\n\t\tif (!this._manualClock.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._startTicking();\n\n\t\tthis._manualClock.play();\n\t}\n\n\t/**\n\t * Tells the clock to pause.\n\t */\n\tpause(): void {\n\t\tif (!this._manualClock.enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._nextAnimationFrameRequestId === null) {\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.warn(\"AutoClock.pause: Abnormal state detected. AutoClock._nextAnimationFrameRequestId should not have been null.\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._stopTicking();\n\n\t\tthis._manualClock.pause();\n\t}\n\n\t/**\n\t * Tells the clock that the external driver is seeking.\n\t */\n\tseeking(): void {\n\t\tthis._manualClock.seek(this._getCurrentTime());\n\t}\n\n\t// Clock members\n\n\t/**\n\t * @type {number}\n\t */\n\tget currentTime(): number {\n\t\treturn this._manualClock.currentTime;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget enabled(): boolean {\n\t\treturn this._manualClock.enabled;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget paused(): boolean {\n\t\treturn this._manualClock.paused;\n\t}\n\n\t/**\n\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @type {number}\n\t */\n\tget rate(): number {\n\t\treturn this._manualClock.rate;\n\t}\n\n\t/**\n\t * Sets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @param {number} rate The new rate of the clock.\n\t */\n\tsetRate(rate: number): void {\n\t\tthis._manualClock.setRate(rate);\n\t}\n\n\t/**\n\t * Enable the clock.\n\t *\n\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean {\n\t\tif (!this._manualClock.enable()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._startTicking();\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Disable the clock.\n\t *\n\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean {\n\t\tif (!this._manualClock.disable()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._stopTicking();\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Toggle the clock.\n\t */\n\ttoggle(): void {\n\t\tif (this._manualClock.enabled) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse {\n\t\t\tthis.enable();\n\t\t}\n\t}\n\n\t/**\n\t * Enable or disable the clock.\n\t *\n\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean {\n\t\tif (enabled) {\n\t\t\treturn this.enable();\n\t\t}\n\t\telse {\n\t\t\treturn this.disable();\n\t\t}\n\t}\n\n\t/**\n\t * @param {number} type\n\t * @param {!Function} listener\n\t */\n\taddEventListener(type: ClockEvent, listener: Function): void {\n\t\tthis._manualClock.addEventListener(type, listener);\n\t};\n\n\t/**\n\t * @param {number} timeStamp\n\t */\n\tprivate _onTimerTick(timeStamp: number): void {\n\t\tif (!this._manualClock.enabled) {\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.warn(\"AutoClock._onTimerTick: Called when disabled.\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst currentTime = this._manualClock.currentTime;\n\t\tconst currentExternalTime = this._getCurrentTime();\n\n\t\tif (!this._manualClock.paused) {\n\t\t\tif (this._lastKnownExternalTime !== null && currentExternalTime === this._lastKnownExternalTime) {\n\t\t\t\tif (timeStamp - this._lastKnownExternalTimeObtainedAt > this._autoPauseAfter) {\n\t\t\t\t\tthis._lastKnownExternalTimeObtainedAt = null;\n\t\t\t\t\tthis._manualClock.seek(currentExternalTime);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._manualClock.tick((timeStamp - this._lastKnownExternalTimeObtainedAt) / 1000 * this._manualClock.rate + this._lastKnownExternalTime);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._lastKnownExternalTime = currentExternalTime;\n\t\t\t\tthis._lastKnownExternalTimeObtainedAt = timeStamp;\n\t\t\t\tthis._manualClock.tick(currentExternalTime);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (currentTime !== currentExternalTime) {\n\t\t\t\tthis._lastKnownExternalTime = currentExternalTime;\n\t\t\t\tthis._lastKnownExternalTimeObtainedAt = timeStamp;\n\t\t\t\tthis._manualClock.tick(currentExternalTime);\n\t\t\t}\n\t\t}\n\n\t\tthis._nextAnimationFrameRequestId = requestAnimationFrame(timeStamp => this._onTimerTick(timeStamp));\n\t}\n\n\tprivate _startTicking(): void {\n\t\tif (this._nextAnimationFrameRequestId === null) {\n\t\t\tthis._nextAnimationFrameRequestId = requestAnimationFrame(timeStamp => this._onTimerTick(timeStamp));\n\t\t}\n\t}\n\n\tprivate _stopTicking(): void {\n\t\tif (this._nextAnimationFrameRequestId !== null) {\n\t\t\tcancelAnimationFrame(this._nextAnimationFrameRequestId);\n\t\t\tthis._nextAnimationFrameRequestId = null;\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { mixin } from \"../../utility/mixin\";\nimport { Map } from \"../../utility/map\";\n\nimport { Clock, ClockEvent, EventSource } from \"./base\";\n\n/**\n * An implementation of {@link libjass.renderers.Clock} that allows user script to manually trigger {@link libjass.renderers.ClockEvent}s.\n */\nexport class ManualClock implements Clock, EventSource<ClockEvent> {\n\tprivate _currentTime: number = -1;\n\tprivate _rate: number = 1;\n\n\tprivate _enabled: boolean = true;\n\tprivate _paused: boolean = true;\n\n\t/**\n\t * Trigger a {@link libjass.renderers.ClockEvent.Play}\n\t */\n\tplay(): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._paused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._paused = false;\n\n\t\tthis._dispatchEvent(ClockEvent.Play, []);\n\t}\n\n\t/**\n\t * Trigger a {@link libjass.renderers.ClockEvent.Tick} with the given time.\n\t *\n\t * @param {number} currentTime\n\t */\n\ttick(currentTime: number): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._currentTime === currentTime) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.play();\n\n\t\tthis._currentTime = currentTime;\n\t\tthis._dispatchEvent(ClockEvent.Tick, []);\n\t}\n\n\t/**\n\t * Seek to the given time. Unlike {@link libjass.renderers.ManualClock.tick} this is used to represent a discontinuous jump, such as the user seeking\n\t * via the video element's position bar.\n\t *\n\t * @param {number} time\n\t */\n\tseek(time: number): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pause();\n\n\t\tif (this._currentTime === time) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.stop();\n\n\t\tthis.tick(time);\n\n\t\tthis.pause();\n\t}\n\n\t/**\n\t * Trigger a {@link libjass.renderers.ClockEvent.Pause}\n\t */\n\tpause(): void {\n\t\tif (!this._enabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._paused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._paused = true;\n\n\t\tthis._dispatchEvent(ClockEvent.Pause, []);\n\t}\n\n\t/**\n\t * Trigger a {@link libjass.renderers.ClockEvent.Stop}\n\t */\n\tstop(): void {\n\t\tthis._dispatchEvent(ClockEvent.Stop, []);\n\t}\n\n\t// Clock members\n\n\t/**\n\t * @type {number}\n\t */\n\tget currentTime(): number {\n\t\treturn this._currentTime;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget enabled(): boolean {\n\t\treturn this._enabled;\n\t}\n\n\t/**\n\t * @type {boolean}\n\t */\n\tget paused(): boolean {\n\t\treturn this._paused;\n\t}\n\n\t/**\n\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @type {number}\n\t */\n\tget rate(): number {\n\t\treturn this._rate;\n\t}\n\n\t/**\n\t * Sets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @param {number} rate The new rate of the clock.\n\t */\n\tsetRate(rate: number): void {\n\t\tif (this._rate === rate) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._rate = rate;\n\n\t\tthis._dispatchEvent(ClockEvent.RateChange, []);\n\t}\n\n\t/**\n\t * Enable the clock.\n\t *\n\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean {\n\t\tif (this._enabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._enabled = true;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Disable the clock.\n\t *\n\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean {\n\t\tif (!this._enabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.pause();\n\n\t\tthis.stop();\n\n\t\tthis._enabled = false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Toggle the clock.\n\t */\n\ttoggle(): void {\n\t\tif (this._enabled) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse {\n\t\t\tthis.enable();\n\t\t}\n\t}\n\n\t/**\n\t * Enable or disable the clock.\n\t *\n\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean {\n\t\tif (enabled) {\n\t\t\treturn this.enable();\n\t\t}\n\t\telse {\n\t\t\treturn this.disable();\n\t\t}\n\t}\n\n\t// EventSource members\n\n\t/**\n\t * @type {!Map.<T, !Array.<Function>>}\n\t */\n\t_eventListeners: Map<ClockEvent, Function[]> = new Map<ClockEvent, Function[]>();\n\n\t/**\n\t * @type {function(number, !Function)}\n\t */\n\taddEventListener: (type: ClockEvent, listener: Function) => void;\n\n\t/**\n\t * @type {function(number, Array.<*>)}\n\t */\n\t_dispatchEvent: (type: ClockEvent, args: Object[]) => void;\n}\nmixin(ManualClock, [EventSource]);\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Adds properties of the given mixins' prototypes to the given class's prototype.\n *\n * @param {!*} clazz\n * @param {!Array.<*>} mixins\n */\nexport function mixin(clazz: any, mixins: any[]): void {\n\tfor (const mixin of mixins) {\n\t\tfor (const name of Object.getOwnPropertyNames(mixin.prototype)) {\n\t\t\tclazz.prototype[name] = mixin.prototype[name];\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../../utility/map\";\n\n/**\n * A mixin class that represents an event source.\n */\nexport class EventSource<T> {\n\t/**\n\t * A map from event type to an array of all the listeners registered for that event type.\n\t *\n\t * @type {!Map.<T, !Array.<Function>>}\n\t */\n\t_eventListeners: Map<T, Function[]>;\n\n\t/**\n\t * Add a listener for the given event.\n\t *\n\t * @param {!T} type The type of event to attach the listener for\n\t * @param {!Function} listener The listener\n\t */\n\taddEventListener(type: T, listener: Function): void {\n\t\tlet listeners = this._eventListeners.get(type);\n\n\t\tif (listeners === undefined) {\n\t\t\tthis._eventListeners.set(type, listeners = []);\n\t\t}\n\n\t\tlisteners.push(listener);\n\t}\n\n\t/**\n\t * Calls all listeners registered for the given event type.\n\t *\n\t * @param {!T} type The type of event to dispatch\n\t * @param {!Array.<*>} args Arguments for the listeners of the event\n\t */\n\t_dispatchEvent(type: T, args: Object[]): void {\n\t\tconst listeners = this._eventListeners.get(type);\n\t\tif (listeners !== undefined) {\n\t\t\tfor (const listener of listeners) {\n\t\t\t\tlistener.apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The type of clock event.\n */\nexport enum ClockEvent {\n\tPlay,\n\tTick,\n\tPause,\n\tStop,\n\tRateChange,\n}\n\n/**\n * The clock interface. A clock is used by a renderer as a source of {@link libjass.renderers.ClockEvent}s.\n */\nexport interface Clock {\n\t/**\n\t * @type {number}\n\t */\n\tcurrentTime: number;\n\n\t/**\n\t * @type {boolean}\n\t */\n\tenabled: boolean;\n\n\t/**\n\t * @type {boolean}\n\t */\n\tpaused: boolean;\n\n\t/**\n\t * Gets the rate of the clock - how fast the clock ticks compared to real time.\n\t *\n\t * @type {number}\n\t */\n\trate: number;\n\n\t/**\n\t * Enable the clock.\n\t *\n\t * @return {boolean} True if the clock is now enabled, false if it was already enabled.\n\t */\n\tenable(): boolean;\n\n\t/**\n\t * Disable the clock.\n\t *\n\t * @return {boolean} True if the clock is now disabled, false if it was already disabled.\n\t */\n\tdisable(): boolean;\n\n\t/**\n\t * Toggle the clock.\n\t */\n\ttoggle(): void;\n\n\t/**\n\t * Enable or disable the clock.\n\t *\n\t * @param {boolean} enabled If true, the clock is enabled, otherwise it's disabled.\n\t * @return {boolean} True if the clock is now in the given state, false if it was already in that state.\n\t */\n\tsetEnabled(enabled: boolean): boolean;\n\n\t// EventSource members\n\n\t/**\n\t * @param {number} type\n\t * @param {!Function} listener\n\t */\n\taddEventListener(type: ClockEvent, listener: Function): void;\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { parse } from \"./parse\";\nexport { BrowserReadableStream, Stream, StringStream, XhrStream } from \"./streams\";\nexport { StreamParser, SrtStreamParser } from \"./stream-parsers\";\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugMode } from \"../settings\";\n\nimport { ASS } from \"../types/ass\";\nimport { Style } from \"../types/style\";\nimport { Dialogue } from \"../types/dialogue\";\nimport { Attachment, AttachmentType } from \"../types/attachment\";\n\nimport { Map } from \"../utility/map\";\n\nimport { Promise, DeferredPromise } from \"../utility/promise\";\n\nimport { parseLineIntoProperty } from \"./misc\";\nimport { Stream } from \"./streams\";\n\nenum Section {\n\tScriptInfo,\n\tStyles,\n\tEvents,\n\tFonts,\n\tGraphics,\n\tOther,\n\tEOF,\n}\n\n/**\n * A parser that parses an {@link libjass.ASS} object from a {@link libjass.parser.Stream}.\n *\n * @param {!libjass.parser.Stream} stream The {@link libjass.parser.Stream} to parse\n */\nexport class StreamParser {\n\tprivate _ass: ASS = new ASS();\n\tprivate _minimalDeferred: DeferredPromise<ASS> = new DeferredPromise<ASS>();\n\tprivate _deferred: DeferredPromise<ASS> = new DeferredPromise<ASS>();\n\n\tprivate _shouldSwallowBom: boolean = true;\n\tprivate _currentSection: Section = Section.ScriptInfo;\n\tprivate _currentAttachment: Attachment = null;\n\n\tconstructor(private _stream: Stream) {\n\t\tthis._stream.nextLine().then(line => this._onNextLine(line), reason => {\n\t\t\tthis._minimalDeferred.reject(reason);\n\t\t\tthis._deferred.reject(reason);\n\t\t});\n\t}\n\n\t/**\n\t * @type {!Promise.<!libjass.ASS>} A promise that will be resolved when the script properties of the ASS script have been parsed from the stream. Styles and events have not necessarily been\n\t * parsed at the point this promise becomes resolved.\n\t */\n\tget minimalASS(): Promise<ASS> {\n\t\treturn this._minimalDeferred.promise;\n\t}\n\n\t/**\n\t * @type {!Promise.<!libjass.ASS>} A promise that will be resolved when the entire stream has been parsed.\n\t */\n\tget ass(): Promise<ASS> {\n\t\treturn this._deferred.promise;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tprivate get currentSection(): Section {\n\t\treturn this._currentSection;\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tprivate set currentSection(value: Section) {\n\t\tif (this._currentAttachment !== null) {\n\t\t\tthis._ass.addAttachment(this._currentAttachment);\n\t\t\tthis._currentAttachment = null;\n\t\t}\n\n\t\tif (this._currentSection === Section.ScriptInfo && value !== Section.ScriptInfo) {\n\t\t\t// Exiting script info section\n\t\t\tthis._minimalDeferred.resolve(this._ass);\n\t\t}\n\n\t\tif (value === Section.EOF) {\n\t\t\tconst scriptProperties = this._ass.properties;\n\t\t\tif (scriptProperties.resolutionX === undefined || scriptProperties.resolutionY === undefined) {\n\t\t\t\t// Malformed script.\n\t\t\t\tthis._minimalDeferred.reject(\"Malformed ASS script.\");\n\t\t\t\tthis._deferred.reject(\"Malformed ASS script.\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._minimalDeferred.resolve(this._ass);\n\t\t\t\tthis._deferred.resolve(this._ass);\n\t\t\t}\n\t\t}\n\n\t\tthis._currentSection = value;\n\t}\n\n\t/**\n\t * @param {string} line\n\t */\n\tprivate _onNextLine(line: string): void {\n\t\tif (line === null) {\n\t\t\tthis.currentSection = Section.EOF;\n\t\t\treturn;\n\t\t}\n\n\t\tif (line[line.length - 1] === \"\\r\") {\n\t\t\tline = line.substr(0, line.length - 1);\n\t\t}\n\n\t\tif (line.charCodeAt(0) === 0xfeff && this._shouldSwallowBom) {\n\t\t\tline = line.substr(1);\n\t\t}\n\n\t\tthis._shouldSwallowBom = false;\n\n\t\tif (line === \"\") {\n\t\t\t// Ignore empty lines.\n\t\t}\n\n\t\telse if (line[0] === \";\" && this._currentAttachment === null) {\n\t\t\t// Lines starting with ; are comments, unless reading an attachment.\n\t\t}\n\n\t\telse if (line === \"[Script Info]\") {\n\t\t\tthis.currentSection = Section.ScriptInfo;\n\t\t}\n\t\telse if (line === \"[V4+ Styles]\" || line === \"[V4 Styles]\") {\n\t\t\tthis.currentSection = Section.Styles;\n\t\t}\n\t\telse if (line === \"[Events]\") {\n\t\t\tthis.currentSection = Section.Events;\n\t\t}\n\t\telse if (line === \"[Fonts]\") {\n\t\t\tthis.currentSection = Section.Fonts;\n\t\t}\n\t\telse if (line === \"[Graphics]\") {\n\t\t\tthis.currentSection = Section.Graphics;\n\t\t}\n\t\telse {\n\t\t\tif (this._currentAttachment === null && line[0] === \"[\" && line[line.length - 1] === \"]\") {\n\t\t\t\t/* This looks like the start of a new section. The section name is unrecognized if it is.\n\t\t\t\t * Since there's no current attachment being parsed it's definitely the start of a new section.\n\t\t\t\t * If an attachment is being parsed, this might be part of the attachment.\n\t\t\t\t */\n\t\t\t\tthis.currentSection = Section.Other;\n\t\t\t}\n\n\t\t\tswitch (this.currentSection) {\n\t\t\t\tcase Section.ScriptInfo:\n\t\t\t\t\tconst property = parseLineIntoProperty(line);\n\t\t\t\t\tif (property !== null) {\n\t\t\t\t\t\tswitch (property.name) {\n\t\t\t\t\t\t\tcase \"PlayResX\":\n\t\t\t\t\t\t\t\tthis._ass.properties.resolutionX = parseInt(property.value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"PlayResY\":\n\t\t\t\t\t\t\t\tthis._ass.properties.resolutionY = parseInt(property.value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"WrapStyle\":\n\t\t\t\t\t\t\t\tthis._ass.properties.wrappingStyle = parseInt(property.value);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"ScaledBorderAndShadow\":\n\t\t\t\t\t\t\t\tthis._ass.properties.scaleBorderAndShadow = (property.value === \"yes\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Section.Styles:\n\t\t\t\t\tif (this._ass.stylesFormatSpecifier === null) {\n\t\t\t\t\t\tconst property = parseLineIntoProperty(line);\n\t\t\t\t\t\tif (property !== null && property.name === \"Format\") {\n\t\t\t\t\t\t\tthis._ass.stylesFormatSpecifier = property.value.split(\",\").map(str => str.trim());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Ignore any non-format lines\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis._ass.addStyle(line);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (ex) {\n\t\t\t\t\t\t\tif (debugMode) {\n\t\t\t\t\t\t\t\tconsole.error(`Could not parse style from line ${ line } - ${ ex.stack || ex }`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Section.Events:\n\t\t\t\t\tif (this._ass.dialoguesFormatSpecifier === null) {\n\t\t\t\t\t\tconst property = parseLineIntoProperty(line);\n\t\t\t\t\t\tif (property !== null && property.name === \"Format\") {\n\t\t\t\t\t\t\tthis._ass.dialoguesFormatSpecifier = property.value.split(\",\").map(str => str.trim());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Ignore any non-format lines\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis._ass.addEvent(line);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (ex) {\n\t\t\t\t\t\t\tif (debugMode) {\n\t\t\t\t\t\t\t\tconsole.error(`Could not parse event from line ${ line } - ${ ex.stack || ex }`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Section.Fonts:\n\t\t\t\tcase Section.Graphics:\n\t\t\t\t\tconst startOfNewAttachmentRegex = (this.currentSection === Section.Fonts) ? /^fontname:(.+)/ : /^filename:(.+)/;\n\t\t\t\t\tconst startOfNewAttachment = startOfNewAttachmentRegex.exec(line);\n\n\t\t\t\t\tif (startOfNewAttachment !== null) {\n\t\t\t\t\t\t// Start of new attachment\n\n\t\t\t\t\t\tif (this._currentAttachment !== null) {\n\t\t\t\t\t\t\tthis._ass.addAttachment(this._currentAttachment);\n\t\t\t\t\t\t\tthis._currentAttachment = null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._currentAttachment = new Attachment(startOfNewAttachment[1].trim(), (this.currentSection === Section.Fonts) ? AttachmentType.Font : AttachmentType.Graphic);\n\t\t\t\t\t}\n\t\t\t\t\telse if (this._currentAttachment !== null) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tthis._currentAttachment.contents += uuencodedToBase64(line);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (ex) {\n\t\t\t\t\t\t\tif (debugMode) {\n\t\t\t\t\t\t\t\tconsole.error(`Encountered error while reading font ${ this._currentAttachment.filename }: %o`, ex);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis._currentAttachment = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Ignore.\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Section.Other:\n\t\t\t\t\t// Ignore other sections.\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unhandled state ${ this.currentSection }`);\n\t\t\t}\n\t\t}\n\n\t\tthis._stream.nextLine().then(line => this._onNextLine(line), reason => {\n\t\t\tthis._minimalDeferred.reject(reason);\n\t\t\tthis._deferred.reject(reason);\n\t\t});\n\t}\n}\n\n/**\n * A parser that parses an {@link libjass.ASS} object from a {@link libjass.parser.Stream} of an SRT script.\n *\n * @param {!libjass.parser.Stream} stream The {@link libjass.parser.Stream} to parse\n */\nexport class SrtStreamParser {\n\tprivate _ass: ASS = new ASS();\n\tprivate _deferred: DeferredPromise<ASS> = new DeferredPromise<ASS>();\n\n\tprivate _shouldSwallowBom: boolean = true;\n\n\tprivate _currentDialogueNumber: string = null;\n\tprivate _currentDialogueStart: string = null;\n\tprivate _currentDialogueEnd: string = null;\n\tprivate _currentDialogueText: string = null;\n\n\tconstructor(private _stream: Stream) {\n\t\tthis._stream.nextLine().then(line => this._onNextLine(line), reason => {\n\t\t\tthis._deferred.reject(reason);\n\t\t});\n\n\t\tthis._ass.properties.resolutionX = 1280;\n\t\tthis._ass.properties.resolutionY = 720;\n\t\tthis._ass.properties.wrappingStyle = 1;\n\t\tthis._ass.properties.scaleBorderAndShadow = true;\n\n\t\tconst newStyle = new Style(new Map([[\"Name\", \"Default\"], [\"FontSize\", \"36\"]]));\n\t\tthis._ass.styles.set(newStyle.name, newStyle);\n\t}\n\n\t/**\n\t * @type {!Promise.<!libjass.ASS>} A promise that will be resolved when the entire stream has been parsed.\n\t */\n\tget ass(): Promise<ASS> {\n\t\treturn this._deferred.promise;\n\t}\n\n\t/**\n\t * @param {string} line\n\t */\n\tprivate _onNextLine(line: string): void {\n\t\tif (line === null) {\n\t\t\tif (this._currentDialogueNumber !== null && this._currentDialogueStart !== null && this._currentDialogueEnd !== null && this._currentDialogueText !== null) {\n\t\t\t\tthis._ass.dialogues.push(new Dialogue(new Map([\n\t\t\t\t\t[\"Style\", \"Default\"],\n\t\t\t\t\t[\"Start\", this._currentDialogueStart],\n\t\t\t\t\t[\"End\", this._currentDialogueEnd],\n\t\t\t\t\t[\"Text\", this._currentDialogueText],\n\t\t\t\t]), this._ass));\n\t\t\t}\n\n\t\t\tthis._deferred.resolve(this._ass);\n\t\t\treturn;\n\t\t}\n\n\t\tif (line[line.length - 1] === \"\\r\") {\n\t\t\tline = line.substr(0, line.length - 1);\n\t\t}\n\n\t\tif (line.charCodeAt(0) === 0xfeff && this._shouldSwallowBom) {\n\t\t\tline = line.substr(1);\n\t\t}\n\n\t\tthis._shouldSwallowBom = false;\n\n\t\tif (line === \"\") {\n\t\t\tif (this._currentDialogueNumber !== null && this._currentDialogueStart !== null && this._currentDialogueEnd !== null && this._currentDialogueText !== null) {\n\t\t\t\tthis._ass.dialogues.push(new Dialogue(new Map([\n\t\t\t\t\t[\"Style\", \"Default\"],\n\t\t\t\t\t[\"Start\", this._currentDialogueStart],\n\t\t\t\t\t[\"End\", this._currentDialogueEnd],\n\t\t\t\t\t[\"Text\", this._currentDialogueText],\n\t\t\t\t]), this._ass));\n\t\t\t}\n\n\t\t\tthis._currentDialogueNumber = this._currentDialogueStart = this._currentDialogueEnd = this._currentDialogueText = null;\n\t\t}\n\t\telse {\n\t\t\tif (this._currentDialogueNumber === null) {\n\t\t\t\tif (/^\\d+$/.test(line)) {\n\t\t\t\t\tthis._currentDialogueNumber = line;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this._currentDialogueStart === null && this._currentDialogueEnd === null) {\n\t\t\t\tconst match = /^(\\d\\d:\\d\\d:\\d\\d,\\d\\d\\d) --> (\\d\\d:\\d\\d:\\d\\d,\\d\\d\\d)/.exec(line);\n\t\t\t\tif (match !== null) {\n\t\t\t\t\tthis._currentDialogueStart = match[1].replace(\",\", \".\");\n\t\t\t\t\tthis._currentDialogueEnd = match[2].replace(\",\", \".\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tline = line\n\t\t\t\t\t.replace(/<b>/g, \"{\\\\b1}\").replace(/\\{b\\}/g, \"{\\\\b1}\")\n\t\t\t\t\t.replace(/<\\/b>/g, \"{\\\\b0}\").replace(/\\{\\/b\\}/g, \"{\\\\b0}\")\n\t\t\t\t\t.replace(/<i>/g, \"{\\\\i1}\").replace(/\\{i\\}/g, \"{\\\\i1}\")\n\t\t\t\t\t.replace(/<\\/i>/g, \"{\\\\i0}\").replace(/\\{\\/i\\}/g, \"{\\\\i0}\")\n\t\t\t\t\t.replace(/<u>/g, \"{\\\\u1}\").replace(/\\{u\\}/g, \"{\\\\u1}\")\n\t\t\t\t\t.replace(/<\\/u>/g, \"{\\\\u0}\").replace(/\\{\\/u\\}/g, \"{\\\\u0}\")\n\t\t\t\t\t.replace(\n\t\t\t\t\t\t/<font color=\"#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})\">/g,\n\t\t\t\t\t\t(/* ujs:unreferenced */ substring: string, red: string, green: string, blue: string) => `{\\c&H${ blue }${ green }${ red }&}`\n\t\t\t\t\t).replace(/<\\/font>/g, \"{\\\\c}\");\n\n\t\t\t\tif (this._currentDialogueText !== null) {\n\t\t\t\t\tthis._currentDialogueText += \"\\\\N\" + line;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._currentDialogueText = line;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._stream.nextLine().then(line => this._onNextLine(line), reason => {\n\t\t\tthis._deferred.reject(reason);\n\t\t});\n\t}\n}\n\n/**\n * Converts a uuencoded string to a base64 string.\n *\n * @param {string} str\n * @return {string}\n */\nfunction uuencodedToBase64(str: string): string {\n\tlet result = \"\";\n\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst charCode = str.charCodeAt(i) - 33;\n\n\t\tif (charCode < 0 || charCode > 63) {\n\t\t\tthrow new Error(`Out-of-range character code ${ charCode } at index ${ i } in string ${ str }`);\n\t\t}\n\t\tif (charCode < 26) {\n\t\t\tresult += String.fromCharCode(\"A\".charCodeAt(0) + charCode);\n\t\t}\n\t\telse if (charCode < 52) {\n\t\t\tresult += String.fromCharCode(\"a\".charCodeAt(0) + charCode - 26);\n\t\t}\n\t\telse if (charCode < 62) {\n\t\t\tresult += String.fromCharCode(\"0\".charCodeAt(0) + charCode - 52);\n\t\t}\n\t\telse if (charCode === 62) {\n\t\t\tresult += \"+\";\n\t\t}\n\t\telse {\n\t\t\tresult += \"/\";\n\t\t}\n\t}\n\n\treturn result;\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attachment } from \"./attachment\";\nimport { Dialogue } from \"./dialogue\";\nimport { Style } from \"./style\";\nimport { ScriptProperties } from \"./script-properties\";\n\nimport { Format } from \"./misc\";\n\nimport { debugMode, verboseMode } from \"../settings\";\n\nimport * as parser from \"../parser\";\nimport { parseLineIntoTypedTemplate } from \"../parser/misc\";\nimport { ReadableStream, TextDecoderConstructor } from \"../parser/streams\";\n\nimport { Map } from \"../utility/map\";\nimport { Promise } from \"../utility/promise\";\n\nimport { registerClass as serializable } from \"../serialization\";\n\ndeclare const global: {\n\tfetch?(url: string): Promise<{ body: ReadableStream; ok?: boolean; status?: number; }>;\n\tReadableStream?: { prototype: ReadableStream; };\n\tTextDecoder?: TextDecoderConstructor;\n};\n\n/**\n * This class represents an ASS script. It contains the {@link libjass.ScriptProperties}, an array of {@link libjass.Style}s, and an array of {@link libjass.Dialogue}s.\n */\n@serializable\nexport class ASS {\n\tprivate _properties: ScriptProperties = new ScriptProperties();\n\tprivate _styles: Map<string, Style> = new Map<string, Style>();\n\tprivate _dialogues: Dialogue[] = [];\n\tprivate _attachments: Attachment[] = [];\n\n\tprivate _stylesFormatSpecifier: string[] = null;\n\tprivate _dialoguesFormatSpecifier: string[] = null;\n\n\t/**\n\t * The properties of this script.\n\t *\n\t * @type {!libjass.ScriptProperties}\n\t */\n\tget properties(): ScriptProperties {\n\t\treturn this._properties;\n\t}\n\n\t/**\n\t * The styles in this script.\n\t *\n\t * @type {!Map.<string, !libjass.Style>}\n\t */\n\tget styles(): Map<string, Style> {\n\t\treturn this._styles;\n\t}\n\n\t/**\n\t * The dialogues in this script.\n\t *\n\t * @type {!Array.<!libjass.Dialogue>}\n\t */\n\tget dialogues(): Dialogue[] {\n\t\treturn this._dialogues;\n\t}\n\n\t/**\n\t * The attachments of this script.\n\t *\n\t * @type {!Array.<!libjass.Attachment>}\n\t */\n\tget attachments(): Attachment[] {\n\t\treturn this._attachments;\n\t}\n\n\t/**\n\t * The format specifier for the styles section.\n\t *\n\t * @type {Array.<string>}\n\t */\n\tget stylesFormatSpecifier(): string[] {\n\t\treturn this._stylesFormatSpecifier;\n\t}\n\n\t/**\n\t * The format specifier for the styles section.\n\t *\n\t * @type {Array.<string>}\n\t */\n\tget dialoguesFormatSpecifier(): string[] {\n\t\treturn this._dialoguesFormatSpecifier;\n\t}\n\n\t/**\n\t * The format specifier for the events section.\n\t *\n\t * @type {Array.<string>}\n\t */\n\tset stylesFormatSpecifier(value: string[]) {\n\t\tthis._stylesFormatSpecifier = value;\n\t}\n\n\t/**\n\t * The format specifier for the events section.\n\t *\n\t * @type {Array.<string>}\n\t */\n\tset dialoguesFormatSpecifier(value: string[]) {\n\t\tthis._dialoguesFormatSpecifier = value;\n\t}\n\n\tconstructor() {\n\t\t// Deprecated constructor argument\n\t\tif (arguments.length === 1) {\n\t\t\tthrow new Error(\"Constructor `new ASS(rawASS)` has been deprecated. Use `ASS.fromString(rawASS)` instead.\");\n\t\t}\n\n\t\tthis._styles.set(\"Default\", new Style(new Map([[\"Name\", \"Default\"]])));\n\t}\n\n\t/**\n\t * Add a style to this ASS script.\n\t *\n\t * @param {string} line The line from the script that contains the new style.\n\t */\n\taddStyle(line: string): void {\n\t\tif (this._stylesFormatSpecifier === null) {\n\t\t\tthrow new Error(\"stylesFormatSpecifier is not set.\");\n\t\t}\n\n\t\tconst styleLine = parseLineIntoTypedTemplate(line, this._stylesFormatSpecifier);\n\t\tif (styleLine === null || styleLine.type !== \"Style\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst styleTemplate = styleLine.template;\n\n\t\tif (verboseMode) {\n\t\t\tlet repr = \"\";\n\t\t\tstyleTemplate.forEach((value, key) => repr += `${ key } = ${ value }, `);\n\t\t\tconsole.log(`Read style: ${ repr }`);\n\t\t}\n\n\t\t// Create the dialogue and add it to the dialogues array\n\t\tconst style = new Style(styleTemplate);\n\t\tthis._styles.set(style.name, style);\n\t}\n\n\t/**\n\t * Add an event to this ASS script.\n\t *\n\t * @param {string} line The line from the script that contains the new event.\n\t */\n\taddEvent(line: string): void {\n\t\tif (this._dialoguesFormatSpecifier === null) {\n\t\t\tthrow new Error(\"dialoguesFormatSpecifier is not set.\");\n\t\t}\n\n\t\tconst dialogueLine = parseLineIntoTypedTemplate(line, this._dialoguesFormatSpecifier);\n\t\tif (dialogueLine === null || dialogueLine.type !== \"Dialogue\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialogueTemplate = dialogueLine.template;\n\n\t\tif (verboseMode) {\n\t\t\tlet repr = \"\";\n\t\t\tdialogueTemplate.forEach((value, key) => repr += `${ key } = ${ value }, `);\n\t\t\tconsole.log(`Read dialogue: ${ repr }`);\n\t\t}\n\n\t\t// Create the dialogue and add it to the dialogues array\n\t\tthis.dialogues.push(new Dialogue(dialogueTemplate, this));\n\t}\n\n\t/**\n\t * Add an attachment to this ASS script.\n\t *\n\t * @param {!libjass.Attachment} attachment\n\t */\n\taddAttachment(attachment: Attachment): void {\n\t\tthis._attachments.push(attachment);\n\t}\n\n\t/**\n\t * Custom JSON serialization for ASS objects.\n\t *\n\t * @return {!*}\n\t */\n\ttoJSON(): any {\n\t\tconst result = Object.create(null);\n\n\t\tresult._properties = this._properties;\n\n\t\tresult._styles = Object.create(null);\n\t\tthis._styles.forEach((style, name) => result._styles[name] = style);\n\n\t\tresult._dialogues = this._dialogues;\n\t\tresult._attachments = this._attachments;\n\t\tresult._stylesFormatSpecifier = this._stylesFormatSpecifier;\n\t\tresult._dialoguesFormatSpecifier = this._dialoguesFormatSpecifier;\n\n\t\tresult._classTag = (ASS.prototype as any)._classTag;\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Creates an ASS object from the raw text of an ASS script.\n\t *\n\t * @param {string} raw The raw text of the script.\n\t * @param {(number|string)=0} type The type of the script. One of the {@link libjass.Format} constants, or one of the strings \"ass\" and \"srt\".\n\t * @return {!Promise.<!libjass.ASS>}\n\t */\n\tstatic fromString(raw: string, type: Format | \"ass\" | \"srt\" = Format.ASS): Promise<ASS> {\n\t\treturn ASS.fromStream(new parser.StringStream(raw), type);\n\t}\n\n\t/**\n\t * Creates an ASS object from the given {@link libjass.parser.Stream}.\n\t *\n\t * @param {!libjass.parser.Stream} stream The stream to parse the script from\n\t * @param {(number|string)=0} type The type of the script. One of the {@link libjass.Format} constants, or one of the strings \"ass\" and \"srt\".\n\t * @return {!Promise.<!libjass.ASS>} A promise that will be resolved with the ASS object when it has been fully parsed\n\t */\n\tstatic fromStream(stream: parser.Stream, type: Format | \"ass\" | \"srt\" = Format.ASS): Promise<ASS> {\n\t\tswitch (type) {\n\t\t\tcase Format.ASS:\n\t\t\tcase \"ass\":\n\t\t\t\treturn new parser.StreamParser(stream).ass;\n\t\t\tcase Format.SRT:\n\t\t\tcase \"srt\":\n\t\t\t\treturn new parser.SrtStreamParser(stream).ass;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid value of type: ${ type }`);\n\t\t}\n\t}\n\n\t/**\n\t * Creates an ASS object from the given URL.\n\t *\n\t * @param {string} url The URL of the script.\n\t * @param {(number|string)=0} type The type of the script. One of the {@link libjass.Format} constants, or one of the strings \"ass\" and \"srt\".\n\t * @return {!Promise.<!libjass.ASS>} A promise that will be resolved with the ASS object when it has been fully parsed\n\t */\n\tstatic fromUrl(url: string, type: Format | \"ass\" | \"srt\" = Format.ASS): Promise<ASS> {\n\t\tlet fetchPromise: Promise<ASS>;\n\n\t\tif (\n\t\t\ttypeof global.fetch === \"function\" &&\n\t\t\ttypeof global.ReadableStream === \"function\" && typeof global.ReadableStream.prototype.getReader === \"function\" &&\n\t\t\ttypeof global.TextDecoder === \"function\"\n\t\t) {\n\t\t\tfetchPromise = global.fetch(url).then(response => {\n\t\t\t\tif (response.ok === false || (response.ok === undefined && (response.status < 200 || response.status > 299))) {\n\t\t\t\t\tthrow new Error(`HTTP request for ${ url } failed with status code ${ response.status }`);\n\t\t\t\t}\n\n\t\t\t\treturn ASS.fromReadableStream(response.body, \"utf-8\", type);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tfetchPromise = Promise.reject<ASS>(new Error(\"Not supported.\"));\n\t\t}\n\n\t\treturn fetchPromise.catch(reason => {\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.log(\"fetch() failed, falling back to XHR: %o\", reason);\n\t\t\t}\n\n\t\t\tconst xhr = new XMLHttpRequest();\n\t\t\tconst result = ASS.fromStream(new parser.XhrStream(xhr), type);\n\t\t\txhr.open(\"GET\", url, true);\n\t\t\txhr.send();\n\t\t\treturn result;\n\t\t});\n\t}\n\n\t/**\n\t * Creates an ASS object from the given ReadableStream.\n\t *\n\t * @param {!ReadableStream} stream\n\t * @param {string=\"utf-8\"} encoding\n\t * @param {(number|string)=0} type The type of the script. One of the {@link libjass.Format} constants, or one of the strings \"ass\" and \"srt\".\n\t * @return {!Promise.<!libjass.ASS>} A promise that will be resolved with the ASS object when it has been fully parsed\n\t */\n\tstatic fromReadableStream(stream: ReadableStream, encoding: string = \"utf-8\", type: Format | \"ass\" | \"srt\" = Format.ASS): Promise<ASS> {\n\t\treturn ASS.fromStream(new parser.BrowserReadableStream(stream, encoding), type);\n\t}\n\n\t/**\n\t * Custom deserialization for ASS objects.\n\t *\n\t * @param {!*} obj\n\t * @return {!libjass.ASS}\n\t */\n\tstatic fromJSON(obj: any): ASS {\n\t\tconst result: ASS = Object.create(ASS.prototype);\n\n\t\tresult._properties = obj._properties;\n\n\t\tresult._styles = new Map<string, Style>();\n\t\tfor (const name of Object.keys(obj._styles)) {\n\t\t\tconst style = obj._styles[name];\n\t\t\tresult._styles.set(name, style);\n\t\t}\n\n\t\tresult._dialogues = obj._dialogues;\n\t\tresult._attachments = obj._attachments;\n\t\tresult._stylesFormatSpecifier = obj._stylesFormatSpecifier;\n\t\tresult._dialoguesFormatSpecifier = obj._dialoguesFormatSpecifier;\n\n\t\treturn result;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Property, TypedTemplate } from \"../types/misc\";\n\nimport { Map } from \"../utility/map\";\n\n/**\n * Parses a line into a {@link ./types/misc.Property}.\n *\n * @param {string} line\n * @return {Property}\n */\nexport function parseLineIntoProperty(line: string): Property {\n\tconst colonPos = line.indexOf(\":\");\n\tif (colonPos === -1) {\n\t\treturn null;\n\t}\n\n\tconst name = line.substr(0, colonPos);\n\tconst value = line.substr(colonPos + 1).replace(/^\\s+/, \"\");\n\n\treturn { name, value };\n}\n\n/**\n * Parses a line into a {@link ./types/misc.TypedTemplate} according to the given format specifier.\n *\n * @param {string} line\n * @param {!Array.<string>} formatSpecifier\n * @return {TypedTemplate}\n */\nexport function parseLineIntoTypedTemplate(line: string, formatSpecifier: string[]): TypedTemplate {\n\tconst property = parseLineIntoProperty(line);\n\tif (property === null) {\n\t\treturn null;\n\t}\n\n\tconst value = property.value.split(\",\");\n\n\tif (value.length > formatSpecifier.length) {\n\t\tvalue[formatSpecifier.length - 1] = value.slice(formatSpecifier.length - 1).join(\",\");\n\t}\n\n\tconst template = new Map<string, string>();\n\tformatSpecifier.forEach((formatKey, index) => {\n\t\ttemplate.set(formatKey, value[index]);\n\t});\n\n\treturn { type: property.name, template };\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerClass as serializable } from \"../serialization\";\n\nimport { WrappingStyle } from \"./misc\";\n\n/**\n * This class represents the properties of a {@link libjass.ASS} script.\n */\n@serializable\nexport class ScriptProperties {\n\tprivate _resolutionX: number;\n\tprivate _resolutionY: number;\n\tprivate _wrappingStyle: WrappingStyle;\n\tprivate _scaleBorderAndShadow: boolean;\n\n\t/**\n\t * The horizontal script resolution.\n\t *\n\t * @type {number}\n\t */\n\tget resolutionX(): number {\n\t\treturn this._resolutionX;\n\t}\n\n\t/**\n\t * The horizontal script resolution.\n\t *\n\t * @type {number}\n\t */\n\tset resolutionX(value: number) {\n\t\tthis._resolutionX = value;\n\t}\n\n\t/**\n\t * The vertical script resolution.\n\t *\n\t * @type {number}\n\t */\n\tget resolutionY(): number {\n\t\treturn this._resolutionY;\n\t}\n\n\t/**\n\t * The vertical script resolution.\n\t *\n\t * @type {number}\n\t */\n\tset resolutionY(value: number) {\n\t\tthis._resolutionY = value;\n\t}\n\n\t/**\n\t * The wrap style. One of the {@link libjass.WrappingStyle} constants.\n\t *\n\t * @type {number}\n\t */\n\tget wrappingStyle(): WrappingStyle {\n\t\treturn this._wrappingStyle;\n\t}\n\n\t/**\n\t * The wrap style. One of the {@link libjass.WrappingStyle} constants.\n\t *\n\t * @type {number}\n\t */\n\tset wrappingStyle(value: WrappingStyle) {\n\t\tthis._wrappingStyle = value;\n\t}\n\n\t/**\n\t * Whether to scale outline widths and shadow depths from script resolution to video resolution or not. If true, widths and depths are scaled.\n\t *\n\t * @type {boolean}\n\t */\n\tget scaleBorderAndShadow(): boolean {\n\t\treturn this._scaleBorderAndShadow;\n\t}\n\n\t/**\n\t * Whether to scale outline widths and shadow depths from script resolution to video resolution or not. If true, widths and depths are scaled.\n\t *\n\t * @type {boolean}\n\t */\n\tset scaleBorderAndShadow(value: boolean) {\n\t\tthis._scaleBorderAndShadow = value;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ASS } from \"./ass\";\nimport { Style } from \"./style\";\n\nimport { valueOrDefault } from \"./misc\";\n\nimport { parse } from \"../parser/parse\";\n\nimport * as parts from \"../parts\";\n\nimport { registerClass as serializable } from \"../serialization\";\n\nimport { debugMode } from \"../settings\";\n\nimport { Map } from \"../utility/map\";\n\n/**\n * This class represents a dialogue in a {@link libjass.ASS} script.\n *\n * @param {!Map.<string, string>} template The template object that contains the dialogue's properties. It is a map of the string values read from the ASS file.\n * @param {string} template[\"Style\"] The name of the default style of this dialogue\n * @param {string} template[\"Start\"] The start time\n * @param {string} template[\"End\"] The end time\n * @param {string} template[\"Layer\"] The layer number\n * @param {string} template[\"Text\"] The text of this dialogue\n * @param {!libjass.ASS} ass The ASS object to which this dialogue belongs\n */\n@serializable\nexport class Dialogue {\n\tprivate static _lastDialogueId = -1;\n\n\tprivate _id: number;\n\n\tprivate _style: Style;\n\n\tprivate _start: number;\n\tprivate _end: number;\n\n\tprivate _layer: number;\n\tprivate _alignment: number;\n\n\tprivate _rawPartsString: string;\n\tprivate _parts: parts.Part[] = null;\n\n\tprivate _containsTransformTag: boolean = false;\n\n\tconstructor(template: Map<string, string>, ass: ASS) {\n\t\t{\n\t\t\tconst normalizedTemplate = new Map<string, string>();\n\t\t\ttemplate.forEach((value, key) => {\n\t\t\t\tnormalizedTemplate.set(key.toLowerCase(), value);\n\t\t\t});\n\t\t\ttemplate = normalizedTemplate;\n\t\t}\n\n\t\tthis._id = ++Dialogue._lastDialogueId;\n\n\t\tlet styleName = template.get(\"style\");\n\t\tif (typeof styleName === \"string\") {\n\t\t\tstyleName = styleName.replace(/^\\*+/, \"\");\n\t\t\tif (styleName.match(/^Default$/i) !== null) {\n\t\t\t\tstyleName = \"Default\";\n\t\t\t}\n\t\t}\n\n\t\tlet style = (styleName !== undefined) ? ass.styles.get(styleName) : undefined;\n\t\tif (style === undefined) {\n\t\t\tif (debugMode) {\n\t\t\t\tconsole.warn(`Unrecognized style ${ styleName }. Falling back to \"Default\"`);\n\t\t\t}\n\n\t\t\tstyle = ass.styles.get(\"Default\");\n\t\t\tif (style === undefined) {\n\t\t\t\tthrow new Error(`Unrecognized style ${ styleName }. Could not fall back to \"Default\" style since it doesn't exist.`);\n\t\t\t}\n\t\t}\n\t\tthis._style = style;\n\n\t\tconst start = template.get(\"start\");\n\t\tif (typeof start !== \"string\") {\n\t\t\tthrow new Error(`Dialogue start time ${ start } is not a string.`);\n\t\t}\n\t\tthis._start = toTime(start);\n\n\t\tconst end = template.get(\"end\");\n\t\tif (typeof end !== \"string\") {\n\t\t\tthrow new Error(`Dialogue end time ${ end } is not a string.`);\n\t\t}\n\t\tthis._end = toTime(end);\n\n\t\tthis._layer = Math.max(valueOrDefault(template, \"layer\", parseInt, value => !isNaN(value), \"0\"), 0);\n\n\t\tconst text = template.get(\"text\");\n\t\tif (typeof text !== \"string\") {\n\t\t\tthrow new Error(`Dialogue text ${ text } is not a string.`);\n\t\t}\n\t\tthis._rawPartsString = text;\n\t}\n\n\t/**\n\t * The unique ID of this dialogue. Auto-generated.\n\t *\n\t * @type {number}\n\t */\n\tget id(): number {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * The start time of this dialogue.\n\t *\n\t * @type {number}\n\t */\n\tget start(): number {\n\t\treturn this._start;\n\t}\n\n\t/**\n\t * The end time of this dialogue.\n\t *\n\t * @type {number}\n\t */\n\tget end(): number {\n\t\treturn this._end;\n\t}\n\n\t/**\n\t * The default style of this dialogue.\n\t *\n\t * @type {!libjass.Style}\n\t */\n\tget style(): Style {\n\t\treturn this._style;\n\t}\n\n\t/**\n\t * The alignment number of this dialogue.\n\t *\n\t * @type {number}\n\t */\n\tget alignment(): number {\n\t\tif (this._parts === null) {\n\t\t\tthis._parsePartsString();\n\t\t}\n\n\t\treturn this._alignment;\n\t}\n\n\t/**\n\t * The layer number of this dialogue.\n\t *\n\t * @type {number}\n\t */\n\tget layer(): number {\n\t\treturn this._layer;\n\t}\n\n\t/**\n\t * The {@link libjass.parts} of this dialogue.\n\t *\n\t * @type {!Array.<!libjass.parts.Part>}\n\t */\n\tget parts(): parts.Part[] {\n\t\tif (this._parts === null) {\n\t\t\tthis._parsePartsString();\n\t\t}\n\n\t\treturn this._parts;\n\t}\n\n\t/**\n\t * Convenience getter for whether this dialogue contains a {\\t} tag.\n\t *\n\t * @type {boolean}\n\t */\n\tget containsTransformTag(): boolean {\n\t\tif (this._parts === null) {\n\t\t\tthis._parsePartsString();\n\t\t}\n\n\t\treturn this._containsTransformTag;\n\t}\n\n\t/**\n\t * @return {string} A simple representation of this dialogue's properties and parts.\n\t */\n\ttoString(): string {\n\t\treturn `#${ this._id } [${ this._start.toFixed(3) }-${ this._end.toFixed(3) }] ${ (this._parts !== null) ? this._parts.join(\", \") : this._rawPartsString }`;\n\t}\n\n\t/**\n\t * Parses this dialogue's parts from the raw parts string.\n\t */\n\tprivate _parsePartsString(): void {\n\t\tthis._parts = parse(this._rawPartsString, \"dialogueParts\") as parts.Part[];\n\n\t\tthis._alignment = this._style.alignment;\n\n\t\tthis._parts.forEach((part, index) => {\n\t\t\tif (part instanceof parts.Alignment) {\n\t\t\t\tthis._alignment = part.value;\n\t\t\t}\n\t\t\telse if (part instanceof parts.Move) {\n\t\t\t\tif (part.t1 === null || part.t2 === null) {\n\t\t\t\t\tthis._parts[index] =\n\t\t\t\t\t\tnew parts.Move(\n\t\t\t\t\t\t\tpart.x1, part.y1, part.x2, part.y2,\n\t\t\t\t\t\t\t0, this._end - this._start\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (part instanceof parts.Transform) {\n\t\t\t\tif (part.start === null || part.end === null || part.accel === null) {\n\t\t\t\t\tthis._parts[index] =\n\t\t\t\t\t\tnew parts.Transform(\n\t\t\t\t\t\t\t(part.start === null) ? 0 : part.start,\n\t\t\t\t\t\t\t(part.end === null) ? (this._end - this._start) : part.end,\n\t\t\t\t\t\t\t(part.accel === null) ? 1 : part.accel,\n\t\t\t\t\t\t\tpart.tags\n\t\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._containsTransformTag = true;\n\t\t\t}\n\t\t});\n\n\t\tif (debugMode) {\n\t\t\tconst possiblyIncorrectParses = this._parts.filter(part => part instanceof parts.Comment && part.value.indexOf(\"\\\\\") !== -1);\n\t\t\tif (possiblyIncorrectParses.length > 0) {\n\t\t\t\tconsole.warn(\n`Possible incorrect parse:\n${ this._rawPartsString }\nwas parsed as\n${ this.toString() }\nThe possibly incorrect parses are:\n${ possiblyIncorrectParses.join(\"\\n\") }`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Converts this string into the number of seconds it represents. This string must be in the form of hh:mm:ss.MMM\n *\n * @param {string} str\n * @return {number}\n */\nfunction toTime(str: string): number {\n\treturn str.split(\":\").reduce<number>((previousValue, currentValue) => previousValue * 60 + parseFloat(currentValue), 0);\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { valueOrDefault, BorderStyle } from \"./misc\";\n\nimport { parse } from \"../parser/parse\";\n\nimport { Color } from \"../parts\";\n\nimport { registerClass as serializable } from \"../serialization\";\n\nimport { Map } from \"../utility/map\";\n\n/**\n * This class represents a single global style declaration in a {@link libjass.ASS} script. The styles can be obtained via the {@link libjass.ASS.styles} property.\n *\n * @param {!Map.<string, string>} template The template object that contains the style's properties. It is a map of the string values read from the ASS file.\n * @param {string} template[\"Name\"] The name of the style\n * @param {string} template[\"Italic\"] -1 if the style is italicized\n * @param {string} template[\"Bold\"] -1 if the style is bold\n * @param {string} template[\"Underline\"] -1 if the style is underlined\n * @param {string} template[\"StrikeOut\"] -1 if the style is struck-through\n * @param {string} template[\"Fontname\"] The name of the font\n * @param {string} template[\"Fontsize\"] The size of the font\n * @param {string} template[\"ScaleX\"] The horizontal scaling of the font\n * @param {string} template[\"ScaleY\"] The vertical scaling of the font\n * @param {string} template[\"Spacing\"] The letter spacing of the font\n * @param {string} template[\"PrimaryColour\"] The primary color\n * @param {string} template[\"OutlineColour\"] The outline color\n * @param {string} template[\"BackColour\"] The shadow color\n * @param {string} template[\"Outline\"] The outline thickness\n * @param {string} template[\"Shadow\"] The shadow depth\n * @param {string} template[\"Alignment\"] The alignment number\n * @param {string} template[\"MarginL\"] The left margin\n * @param {string} template[\"MarginR\"] The right margin\n * @param {string} template[\"MarginV\"] The vertical margin\n */\n@serializable\nexport class Style {\n\tprivate _name: string;\n\n\tprivate _italic: boolean;\n\tprivate _bold: boolean;\n\tprivate _underline: boolean;\n\tprivate _strikeThrough: boolean;\n\n\tprivate _fontName: string;\n\tprivate _fontSize: number;\n\n\tprivate _fontScaleX: number;\n\tprivate _fontScaleY: number;\n\n\tprivate _letterSpacing: number;\n\n\tprivate _rotationZ: number;\n\n\tprivate _primaryColor: Color;\n\tprivate _secondaryColor: Color;\n\tprivate _outlineColor: Color;\n\tprivate _shadowColor: Color;\n\n\tprivate _outlineThickness: number;\n\tprivate _borderStyle: BorderStyle;\n\n\tprivate _shadowDepth: number;\n\n\tprivate _alignment: number;\n\n\tprivate _marginLeft: number;\n\tprivate _marginRight: number;\n\tprivate _marginVertical: number;\n\n\tconstructor(template: Map<string, string>) {\n\t\t{\n\t\t\tconst normalizedTemplate = new Map<string, string>();\n\t\t\ttemplate.forEach((value, key) => {\n\t\t\t\tnormalizedTemplate.set(key.toLowerCase(), value);\n\t\t\t});\n\t\t\ttemplate = normalizedTemplate;\n\t\t}\n\n\t\tconst name = template.get(\"name\");\n\t\tif (typeof name !== \"string\") {\n\t\t\tthrow new Error(`Style name ${ name } is not a string.`);\n\t\t}\n\t\tthis._name = name.replace(/^\\*+/, \"\");\n\n\t\tthis._italic = !!valueOrDefault(template, \"italic\", parseFloat, value => !isNaN(value), \"0\");\n\t\tthis._bold = !!valueOrDefault(template, \"bold\", parseFloat, value => !isNaN(value), \"0\");\n\t\tthis._underline = !!valueOrDefault(template, \"underline\", parseFloat, value => !isNaN(value), \"0\");\n\t\tthis._strikeThrough = !!valueOrDefault(template, \"strikeout\", parseFloat, value => !isNaN(value), \"0\");\n\n\t\tthis._fontName = valueOrDefault(template, \"fontname\", str => str, value => value.constructor === String, \"sans-serif\");\n\t\tthis._fontSize = valueOrDefault(template, \"fontsize\", parseFloat, value => !isNaN(value), \"18\");\n\n\t\tthis._fontScaleX = valueOrDefault(template, \"scalex\", parseFloat, value => value >= 0, \"100\") / 100;\n\t\tthis._fontScaleY = valueOrDefault(template, \"scaley\", parseFloat, value => value >= 0, \"100\") / 100;\n\n\t\tthis._letterSpacing = valueOrDefault(template, \"spacing\", parseFloat, value => value >= 0, \"0\");\n\n\t\tthis._rotationZ = valueOrDefault(template, \"angle\", parseFloat, value => !isNaN(value), \"0\");\n\n\t\tthis._primaryColor = valueOrDefault(template, \"primarycolour\", str => parse(str, \"colorWithAlpha\") as Color, null, \"&H00FFFFFF\");\n\t\tthis._secondaryColor = valueOrDefault(template, \"secondarycolour\", str => parse(str, \"colorWithAlpha\") as Color, null, \"&H00FFFF00\");\n\t\tthis._outlineColor = valueOrDefault(template, \"outlinecolour\", str => parse(str, \"colorWithAlpha\") as Color, null, \"&H00000000\");\n\t\tthis._shadowColor = valueOrDefault(template, \"backcolour\", str => parse(str, \"colorWithAlpha\") as Color, null, \"&H80000000\");\n\n\t\tthis._outlineThickness = valueOrDefault(template, \"outline\", parseFloat, value => value >= 0, \"2\");\n\t\tthis._borderStyle = valueOrDefault(template, \"borderstyle\", parseInt, value => (BorderStyle as any)[(BorderStyle as any)[value]] === value, \"1\");\n\n\t\tthis._shadowDepth = valueOrDefault(template, \"shadow\", parseFloat, value => value >= 0, \"3\");\n\n\t\tthis._alignment = valueOrDefault(template, \"alignment\", parseInt, value => value >= 1 && value <= 9, \"2\");\n\n\t\tthis._marginLeft = valueOrDefault(template, \"marginl\", parseFloat, value => !isNaN(value), \"20\");\n\t\tthis._marginRight = valueOrDefault(template, \"marginr\", parseFloat, value => !isNaN(value), \"20\");\n\t\tthis._marginVertical = valueOrDefault(template, \"marginv\", parseFloat, value => !isNaN(value), \"20\");\n\t}\n\n\t/**\n\t * The name of this style.\n\t *\n\t * @type {string}\n\t */\n\tget name(): string {\n\t\treturn this._name;\n\t}\n\n\t/**\n\t * Whether this style is italicized or not.\n\t *\n\t * @type {string}\n\t */\n\tget italic(): boolean {\n\t\treturn this._italic;\n\t}\n\n\t/**\n\t * Whether this style is bold or not.\n\t *\n\t * @type {boolean}\n\t */\n\tget bold(): boolean {\n\t\treturn this._bold;\n\t}\n\n\t/**\n\t * Whether this style is underlined or not.\n\t *\n\t * @type {boolean}\n\t */\n\tget underline(): boolean {\n\t\treturn this._underline;\n\t}\n\n\t/**\n\t * Whether this style is struck-through or not.\n\t *\n\t * @type {boolean}\n\t */\n\tget strikeThrough(): boolean {\n\t\treturn this._strikeThrough;\n\t}\n\n\t/**\n\t * The name of this style's font.\n\t *\n\t * @type {string}\n\t */\n\tget fontName(): string {\n\t\treturn this._fontName;\n\t}\n\n\t/**\n\t * The size of this style's font.\n\t *\n\t * @type {number}\n\t */\n\tget fontSize(): number {\n\t\treturn this._fontSize;\n\t}\n\n\t/**\n\t * The horizontal scaling of this style's font.\n\t *\n\t * @type {number}\n\t */\n\tget fontScaleX(): number {\n\t\treturn this._fontScaleX;\n\t}\n\n\t/**\n\t * The vertical scaling of this style's font.\n\t *\n\t * @type {number}\n\t */\n\tget fontScaleY(): number {\n\t\treturn this._fontScaleY;\n\t}\n\n\t/**\n\t * The letter spacing scaling of this style's font.\n\t *\n\t * @type {number}\n\t */\n\tget letterSpacing(): number {\n\t\treturn this._letterSpacing;\n\t}\n\n\t/**\n\t * The default Z-rotation of this style.\n\t *\n\t * @type {number}\n\t */\n\tget rotationZ(): number {\n\t\treturn this._rotationZ;\n\t}\n\n\t/**\n\t * The color of this style's font.\n\t *\n\t * @type {!libjass.parts.Color}\n\t */\n\tget primaryColor(): Color {\n\t\treturn this._primaryColor;\n\t}\n\n\t/**\n\t * The alternate color of this style's font, used in karaoke.\n\t *\n\t * @type {!libjass.parts.Color}\n\t */\n\tget secondaryColor(): Color {\n\t\treturn this._secondaryColor;\n\t}\n\n\t/**\n\t * The color of this style's outline.\n\t *\n\t * @type {!libjass.parts.Color}\n\t */\n\tget outlineColor(): Color {\n\t\treturn this._outlineColor;\n\t}\n\n\t/**\n\t * The color of this style's shadow.\n\t *\n\t * @type {!libjass.parts.Color}\n\t */\n\tget shadowColor(): Color {\n\t\treturn this._shadowColor;\n\t}\n\n\t/**\n\t * The thickness of this style's outline.\n\t *\n\t * @type {number}\n\t */\n\tget outlineThickness(): number {\n\t\treturn this._outlineThickness;\n\t}\n\n\t/**\n\t * The border style of this style.\n\t *\n\t * @type {number}\n\t */\n\tget borderStyle(): BorderStyle {\n\t\treturn this._borderStyle;\n\t}\n\n\t/**\n\t * The depth of this style's shadow.\n\t *\n\t * @type {number}\n\t */\n\tget shadowDepth(): number {\n\t\treturn this._shadowDepth;\n\t}\n\n\t/**\n\t * The alignment of dialogues of this style.\n\t *\n\t * @type {number}\n\t */\n\tget alignment(): number {\n\t\treturn this._alignment;\n\t}\n\n\t/**\n\t * The left margin of dialogues of this style.\n\t *\n\t * @type {number}\n\t */\n\tget marginLeft(): number {\n\t\treturn this._marginLeft;\n\t}\n\n\t/**\n\t * The right margin of dialogues of this style.\n\t *\n\t * @type {number}\n\t */\n\tget marginRight(): number {\n\t\treturn this._marginRight;\n\t}\n\n\t/**\n\t * The vertical margin of dialogues of this style.\n\t *\n\t * @type {number}\n\t */\n\tget marginVertical(): number {\n\t\treturn this._marginVertical;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerClass as serializable } from \"../serialization\";\n\n/**\n * The type of an attachment.\n */\nexport enum AttachmentType {\n\tFont,\n\tGraphic,\n}\n\n/**\n * This class represents an attachment in a {@link libjass.ASS} script.\n *\n * @param {string} filename The filename of this attachment.\n * @param {number} type The type of this attachment.\n */\n@serializable\nexport class Attachment {\n\tprivate _contents: string = \"\";\n\n\tconstructor(private _filename: string, private _type: AttachmentType) { }\n\n\t/**\n\t * The filename of this attachment.\n\t *\n\t * @type {number}\n\t */\n\tget filename(): string {\n\t\treturn this._filename;\n\t}\n\n\t/**\n\t * The type of this attachment.\n\t *\n\t * @type {number}\n\t */\n\tget type(): AttachmentType {\n\t\treturn this._type;\n\t}\n\n\t/**\n\t * The contents of this attachment in base64 encoding.\n\t *\n\t * @type {number}\n\t */\n\tget contents(): string {\n\t\treturn this._contents;\n\t}\n\n\t/**\n\t * The contents of this attachment in base64 encoding.\n\t *\n\t * @type {number}\n\t */\n\tset contents(value: string) {\n\t\tthis._contents = value;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Promise, DeferredPromise } from \"../utility/promise\";\n\nexport interface ReadableStream {\n\t/**\n\t * @return {!ReadableStreamReader}\n\t */\n\tgetReader(): ReadableStreamReader;\n}\n\nexport interface ReadableStreamReader {\n\t/**\n\t * @return {!Promise.<{ value?: Uint8Array, done: boolean }>}\n\t */\n\tread(): Promise<{ value: Uint8Array; done: boolean; }>;\n}\n\nexport interface TextDecoder {\n\t/**\n\t * @param {!ArrayBuffer|!ArrayBufferView} input\n\t * @param {{ stream: boolean }} options\n\t * @return {string}\n\t */\n\tdecode(input: ArrayBuffer | ArrayBufferView, options: { stream: boolean }): string;\n}\nexport interface TextDecoderConstructor {\n\tnew (encoding: string, options: { ignoreBOM: boolean }): TextDecoder;\n\n\t/**\n\t * @type {!TextDecoder}\n\t */\n\tprototype: TextDecoder;\n}\n\ndeclare const global: {\n\t/**\n\t * @type {!TextDecoderConstructor}\n\t */\n\tTextDecoder?: TextDecoderConstructor;\n};\n\n/**\n * An interface for a stream.\n */\nexport interface Stream {\n\t/**\n\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the stream is exhausted.\n\t */\n\tnextLine(): Promise<string>;\n}\n\n/**\n * A {@link libjass.parser.Stream} that reads from a string in memory.\n *\n * @param {string} str The string\n */\nexport class StringStream implements Stream {\n\tprivate _readTill: number = 0;\n\n\tconstructor(private _str: string) { }\n\n\t/**\n\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the string has been completely read.\n\t */\n\tnextLine(): Promise<string> {\n\t\tlet result: Promise<string>;\n\n\t\tif (this._readTill < this._str.length) {\n\t\t\tconst nextNewLinePos = this._str.indexOf(\"\\n\", this._readTill);\n\t\t\tif (nextNewLinePos !== -1) {\n\t\t\t\tresult = Promise.resolve(this._str.substring(this._readTill, nextNewLinePos));\n\t\t\t\tthis._readTill = nextNewLinePos + 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = Promise.resolve(this._str.substr(this._readTill));\n\t\t\t\tthis._readTill = this._str.length;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tresult = Promise.resolve<string>(null);\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\n/**\n * A {@link libjass.parser.Stream} that reads from an XMLHttpRequest object.\n *\n * @param {!XMLHttpRequest} xhr The XMLHttpRequest object. Make sure to not call .open() on this object before passing it in here,\n * since event handlers cannot be registered after open() has been called.\n */\nexport class XhrStream implements Stream {\n\tprivate _readTill: number = 0;\n\tprivate _pendingDeferred: DeferredPromise<string> = null;\n\tprivate _failedError: ErrorEvent = null;\n\n\tconstructor(private _xhr: XMLHttpRequest) {\n\t\t_xhr.addEventListener(\"progress\", () => this._onXhrProgress(), false);\n\t\t_xhr.addEventListener(\"load\", () => this._onXhrLoad(), false);\n\t\t_xhr.addEventListener(\"error\", event => this._onXhrError(event), false);\n\t}\n\n\t/**\n\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the stream is exhausted.\n\t */\n\tnextLine(): Promise<string> {\n\t\tif (this._pendingDeferred !== null) {\n\t\t\tthrow new Error(\"XhrStream only supports one pending unfulfilled read at a time.\");\n\t\t}\n\n\t\tconst deferred = this._pendingDeferred = new DeferredPromise<string>();\n\n\t\tthis._tryResolveNextLine();\n\n\t\treturn deferred.promise;\n\t}\n\n\t/**\n\t */\n\tprivate _onXhrProgress(): void {\n\t\tif (this._pendingDeferred === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._xhr.readyState === XMLHttpRequest.DONE) {\n\t\t\t/* Suppress resolving next line here. Let the \"load\" or \"error\" event handlers do it.\n\t\t\t *\n\t\t\t * This is required because a failed XHR fires the progress event with readyState === DONE before it fires the error event.\n\t\t\t * This would confuse _tryResolveNextLine() into thinking the request succeeded with no data if it was called here.\n\t\t\t */\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tryResolveNextLine();\n\t}\n\n\t/**\n\t */\n\tprivate _onXhrLoad(): void {\n\t\tif (this._pendingDeferred === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tryResolveNextLine();\n\t}\n\n\t/**\n\t * @param {!ErrorEvent} event\n\t */\n\tprivate _onXhrError(event: ErrorEvent): void {\n\t\tthis._failedError = event;\n\n\t\tif (this._pendingDeferred === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tryResolveNextLine();\n\t}\n\n\t/**\n\t */\n\tprivate _tryResolveNextLine(): void {\n\t\tif (this._failedError !== null) {\n\t\t\tthis._pendingDeferred.reject(this._failedError);\n\t\t\treturn;\n\t\t}\n\n\t\tconst response = this._xhr.responseText;\n\n\t\tconst nextNewLinePos = response.indexOf(\"\\n\", this._readTill);\n\t\tif (nextNewLinePos !== -1) {\n\t\t\tthis._pendingDeferred.resolve(response.substring(this._readTill, nextNewLinePos));\n\t\t\tthis._readTill = nextNewLinePos + 1;\n\t\t\tthis._pendingDeferred = null;\n\t\t}\n\n\t\telse if (this._xhr.readyState === XMLHttpRequest.DONE) {\n\t\t\tif (this._failedError !== null) {\n\t\t\t\tthis._pendingDeferred.reject(this._failedError);\n\t\t\t}\n\n\t\t\t// No more data. This is the last line.\n\t\t\telse if (this._readTill < response.length) {\n\t\t\t\tthis._pendingDeferred.resolve(response.substr(this._readTill));\n\t\t\t\tthis._readTill = response.length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._pendingDeferred.resolve(null);\n\t\t\t}\n\n\t\t\tthis._pendingDeferred = null;\n\t\t}\n\t}\n}\n\n/**\n * A {@link libjass.parser.Stream} that reads from a ReadableStream object.\n *\n * @param {!ReadableStream} stream\n * @param {string} encoding\n */\nexport class BrowserReadableStream implements Stream {\n\tprivate _reader: ReadableStreamReader;\n\tprivate _decoder: TextDecoder;\n\tprivate _buffer: string = \"\";\n\tprivate _pendingDeferred: DeferredPromise<string> = null;\n\n\tconstructor(stream: ReadableStream, encoding: string) {\n\t\tthis._reader = stream.getReader();\n\t\tthis._decoder = new global.TextDecoder(encoding, { ignoreBOM: true });\n\t}\n\n\t/**\n\t * @return {!Promise.<?string>} A promise that will be resolved with the next line, or null if the stream is exhausted.\n\t */\n\tnextLine(): Promise<string> {\n\t\tif (this._pendingDeferred !== null) {\n\t\t\tthrow new Error(\"BrowserReadableStream only supports one pending unfulfilled read at a time.\");\n\t\t}\n\n\t\tconst deferred = this._pendingDeferred = new DeferredPromise<string>();\n\n\t\tthis._tryResolveNextLine();\n\n\t\treturn deferred.promise;\n\t}\n\n\t/**\n\t */\n\tprivate _tryResolveNextLine(): void {\n\t\tconst nextNewLinePos = this._buffer.indexOf(\"\\n\");\n\t\tif (nextNewLinePos !== -1) {\n\t\t\tthis._pendingDeferred.resolve(this._buffer.substr(0, nextNewLinePos));\n\t\t\tthis._buffer = this._buffer.substr(nextNewLinePos + 1);\n\t\t\tthis._pendingDeferred = null;\n\t\t}\n\n\t\telse {\n\t\t\tthis._reader.read().then(next => {\n\t\t\t\tconst { value, done } = next;\n\n\t\t\t\tif (!done) {\n\t\t\t\t\tthis._buffer += this._decoder.decode(value, { stream: true });\n\t\t\t\t\tthis._tryResolveNextLine();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// No more data.\n\t\t\t\t\tif (this._buffer.length === 0) {\n\t\t\t\t\t\tthis._pendingDeferred.resolve(null);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._pendingDeferred.resolve(this._buffer);\n\t\t\t\t\t\tthis._buffer = \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pendingDeferred = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as parts from \"../parts\";\n\nimport { debugMode } from \"../settings\";\n\nimport { Map } from \"../utility/map\";\n\nconst rules = new Map<string, (parent: ParseNode) => ParseNode>();\n\n/**\n * Parses a given string with the specified rule.\n *\n * @param {string} input The string to be parsed.\n * @param {string} rule The rule to parse the string with\n * @return {*} The value returned depends on the rule used.\n */\nexport function parse(input: string, rule: string): any {\n\tconst { result } = new ParserRun(input, rule);\n\n\tif (result === null || result.end !== input.length) {\n\t\tif (debugMode) {\n\t\t\tconsole.error(\"Parse failed. %s %s %o\", rule, input, result);\n\t\t}\n\n\t\tthrow new Error(\"Parse failed.\");\n\t}\n\n\treturn result.value;\n}\n\n/**\n * This class represents a single run of the parser.\n *\n * @param {string} input\n * @param {string} rule\n */\nclass ParserRun {\n\tprivate _parseTree: ParseNode;\n\tprivate _result: ParseNode;\n\n\tconstructor(private _input: string, rule: string) {\n\t\tconst ruleFunction = rules.get(rule);\n\t\tif (ruleFunction === undefined) {\n\t\t\tthrow new Error(`Could not find parser rule named ${ rule }`);\n\t\t}\n\n\t\tthis._parseTree = new ParseNode(null);\n\n\t\tthis._result = ruleFunction.call(this, this._parseTree);\n\t}\n\n\t/**\n\t * @type {ParseNode}\n\t */\n\tget result(): ParseNode {\n\t\treturn this._result;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_dialogueParts(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tcurrent.value = [];\n\n\t\twhile (this._haveMore()) {\n\t\t\tconst enclosedTagsNode = this.parse_enclosedTags(current);\n\n\t\t\tif (enclosedTagsNode !== null) {\n\t\t\t\tcurrent.value.push(...enclosedTagsNode.value);\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tconst whiteSpaceOrTextNode = this.parse_newline(current) || this.parse_hardspace(current) || this.parse_text(current);\n\n\t\t\t\tif (whiteSpaceOrTextNode.value instanceof parts.Text && current.value[current.value.length - 1] instanceof parts.Text) {\n\t\t\t\t\t// Merge consecutive text parts into one part\n\t\t\t\t\tconst previousTextPart = current.value[current.value.length - 1] as parts.Text;\n\t\t\t\t\tcurrent.value[current.value.length - 1] = new parts.Text(previousTextPart.value + (whiteSpaceOrTextNode.value as parts.Text).value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurrent.value.push(whiteSpaceOrTextNode.value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet inDrawingMode = false;\n\n\t\tcurrent.value.forEach((part: parts.Part, i: number) => {\n\t\t\tif (part instanceof parts.DrawingMode) {\n\t\t\t\tinDrawingMode = part.scale !== 0;\n\t\t\t}\n\n\t\t\telse if (part instanceof parts.Text && inDrawingMode) {\n\t\t\t\tcurrent.value[i] = new parts.DrawingInstructions(parse(part.value, \"drawingInstructions\") as parts.drawing.Instruction[]);\n\t\t\t}\n\t\t});\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_enclosedTags(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tcurrent.value = [];\n\n\t\tif (this.read(current, \"{\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let next = this._peek(); this._haveMore() && next !== \"}\"; next = this._peek()) {\n\t\t\tlet childNode: ParseNode = null;\n\n\t\t\tif (this.read(current, \"\\\\\") !== null) {\n\t\t\t\tchildNode =\n\t\t\t\t\tthis.parse_tag_alpha(current) ||\n\t\t\t\t\tthis.parse_tag_iclip(current) ||\n\t\t\t\t\tthis.parse_tag_xbord(current) ||\n\t\t\t\t\tthis.parse_tag_ybord(current) ||\n\t\t\t\t\tthis.parse_tag_xshad(current) ||\n\t\t\t\t\tthis.parse_tag_yshad(current) ||\n\n\t\t\t\t\tthis.parse_tag_blur(current) ||\n\t\t\t\t\tthis.parse_tag_bord(current) ||\n\t\t\t\t\tthis.parse_tag_clip(current) ||\n\t\t\t\t\tthis.parse_tag_fade(current) ||\n\t\t\t\t\tthis.parse_tag_fscx(current) ||\n\t\t\t\t\tthis.parse_tag_fscy(current) ||\n\t\t\t\t\tthis.parse_tag_move(current) ||\n\t\t\t\t\tthis.parse_tag_shad(current) ||\n\n\t\t\t\t\tthis.parse_tag_fad(current) ||\n\t\t\t\t\tthis.parse_tag_fax(current) ||\n\t\t\t\t\tthis.parse_tag_fay(current) ||\n\t\t\t\t\tthis.parse_tag_frx(current) ||\n\t\t\t\t\tthis.parse_tag_fry(current) ||\n\t\t\t\t\tthis.parse_tag_frz(current) ||\n\t\t\t\t\tthis.parse_tag_fsp(current) ||\n\t\t\t\t\tthis.parse_tag_fsplus(current) ||\n\t\t\t\t\tthis.parse_tag_fsminus(current) ||\n\t\t\t\t\tthis.parse_tag_org(current) ||\n\t\t\t\t\tthis.parse_tag_pbo(current) ||\n\t\t\t\t\tthis.parse_tag_pos(current) ||\n\n\t\t\t\t\tthis.parse_tag_an(current) ||\n\t\t\t\t\tthis.parse_tag_be(current) ||\n\t\t\t\t\tthis.parse_tag_fn(current) ||\n\t\t\t\t\tthis.parse_tag_fr(current) ||\n\t\t\t\t\tthis.parse_tag_fs(current) ||\n\t\t\t\t\tthis.parse_tag_kf(current) ||\n\t\t\t\t\tthis.parse_tag_ko(current) ||\n\t\t\t\t\tthis.parse_tag_1a(current) ||\n\t\t\t\t\tthis.parse_tag_1c(current) ||\n\t\t\t\t\tthis.parse_tag_2a(current) ||\n\t\t\t\t\tthis.parse_tag_2c(current) ||\n\t\t\t\t\tthis.parse_tag_3a(current) ||\n\t\t\t\t\tthis.parse_tag_3c(current) ||\n\t\t\t\t\tthis.parse_tag_4a(current) ||\n\t\t\t\t\tthis.parse_tag_4c(current) ||\n\n\t\t\t\t\tthis.parse_tag_a(current) ||\n\t\t\t\t\tthis.parse_tag_b(current) ||\n\t\t\t\t\tthis.parse_tag_c(current) ||\n\t\t\t\t\tthis.parse_tag_i(current) ||\n\t\t\t\t\tthis.parse_tag_k(current) ||\n\t\t\t\t\tthis.parse_tag_K(current) ||\n\t\t\t\t\tthis.parse_tag_p(current) ||\n\t\t\t\t\tthis.parse_tag_q(current) ||\n\t\t\t\t\tthis.parse_tag_r(current) ||\n\t\t\t\t\tthis.parse_tag_s(current) ||\n\t\t\t\t\tthis.parse_tag_t(current) ||\n\t\t\t\t\tthis.parse_tag_u(current);\n\n\t\t\t\tif (childNode === null) {\n\t\t\t\t\tcurrent.pop(); // Unread backslash\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (childNode === null) {\n\t\t\t\tchildNode = this.parse_comment(current);\n\t\t\t}\n\n\t\t\tif (childNode !== null) {\n\t\t\t\tif (childNode.value instanceof parts.Comment && current.value[current.value.length - 1] instanceof parts.Comment) {\n\t\t\t\t\t// Merge consecutive comment parts into one part\n\t\t\t\t\tcurrent.value[current.value.length - 1] =\n\t\t\t\t\t\tnew parts.Comment(\n\t\t\t\t\t\t\t(current.value[current.value.length - 1] as parts.Comment).value +\n\t\t\t\t\t\t\t(childNode.value as parts.Comment).value\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurrent.value.push(childNode.value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (this.read(current, \"}\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_newline(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"\\\\N\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.NewLine();\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_hardspace(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"\\\\h\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.Text(\"\\u00A0\");\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_text(parent: ParseNode): ParseNode {\n\t\tconst value = this._peek();\n\n\t\tconst current = new ParseNode(parent);\n\t\tconst valueNode = new ParseNode(current, value);\n\n\t\tcurrent.value = new parts.Text(valueNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_comment(parent: ParseNode): ParseNode {\n\t\tconst value = this._peek();\n\n\t\tconst current = new ParseNode(parent);\n\t\tconst valueNode = new ParseNode(current, value);\n\n\t\tcurrent.value = new parts.Comment(valueNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_a(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"a\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet next = this._peek();\n\n\t\tswitch (next) {\n\t\t\tcase \"1\":\n\t\t\t\tconst next2 = this._peek(2);\n\n\t\t\t\tswitch (next2) {\n\t\t\t\t\tcase \"10\":\n\t\t\t\t\tcase \"11\":\n\t\t\t\t\t\tnext = next2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"2\":\n\t\t\tcase \"3\":\n\t\t\tcase \"5\":\n\t\t\tcase \"6\":\n\t\t\tcase \"7\":\n\t\t\tcase \"9\":\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, next);\n\n\t\tlet value: number;\n\t\tswitch (valueNode.value) {\n\t\t\tcase \"1\":\n\t\t\t\tvalue = 1;\n\t\t\t\tbreak;\n\n\t\t\tcase \"2\":\n\t\t\t\tvalue = 2;\n\t\t\t\tbreak;\n\n\t\t\tcase \"3\":\n\t\t\t\tvalue = 3;\n\t\t\t\tbreak;\n\n\t\t\tcase \"5\":\n\t\t\t\tvalue = 7;\n\t\t\t\tbreak;\n\n\t\t\tcase \"6\":\n\t\t\t\tvalue = 8;\n\t\t\t\tbreak;\n\n\t\t\tcase \"7\":\n\t\t\t\tvalue = 9;\n\t\t\t\tbreak;\n\n\t\t\tcase \"9\":\n\t\t\t\tvalue = 4;\n\t\t\t\tbreak;\n\n\t\t\tcase \"10\":\n\t\t\t\tvalue = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase \"11\":\n\t\t\t\tvalue = 6;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurrent.value = new parts.Alignment(value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_alpha(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_an(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"an\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst next = this._peek();\n\n\t\tif (next < \"1\" || next > \"9\") {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, next);\n\n\t\tcurrent.value = new parts.Alignment(parseInt(valueNode.value));\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_b(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"b\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet valueNode: ParseNode = null;\n\n\t\tlet next = this._peek();\n\n\t\tif (next >= \"1\" && next <= \"9\") {\n\t\t\tnext = this._peek(3);\n\t\t\tif (next.substr(1) === \"00\") {\n\t\t\t\tvalueNode = new ParseNode(current, next);\n\t\t\t\tvalueNode.value = parseInt(valueNode.value);\n\t\t\t}\n\t\t}\n\n\t\tif (valueNode === null) {\n\t\t\tvalueNode = this.parse_enableDisable(current);\n\t\t}\n\n\t\tif (valueNode !== null) {\n\t\t\tcurrent.value = new parts.Bold(valueNode.value);\n\t\t}\n\t\telse {\n\t\t\tcurrent.value = new parts.Bold(null);\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_be(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_blur(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_bord(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_clip(parent: ParseNode): ParseNode {\n\t\treturn this._parse_tag_clip_or_iclip(\"clip\", parent);\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fad(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fad\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst startNode = this.parse_decimal(current);\n\t\tif (startNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst endNode = this.parse_decimal(current);\n\t\tif (endNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.Fade(startNode.value / 1000, endNode.value / 1000);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fade(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fade\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst a1Node = this.parse_decimal(current);\n\t\tif (a1Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst a2Node = this.parse_decimal(current);\n\t\tif (a2Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst a3Node = this.parse_decimal(current);\n\t\tif (a3Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst t1Node = this.parse_decimal(current);\n\t\tif (t1Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst t2Node = this.parse_decimal(current);\n\t\tif (t2Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst t3Node = this.parse_decimal(current);\n\t\tif (t3Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst t4Node = this.parse_decimal(current);\n\t\tif (t4Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value =\n\t\t\tnew parts.ComplexFade(\n\t\t\t\t1 - a1Node.value / 255, 1 - a2Node.value / 255, 1 - a3Node.value / 255,\n\t\t\t\tt1Node.value / 1000, t2Node.value / 1000, t3Node.value / 1000, t4Node.value / 1000\n\t\t\t);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fax(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fay(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fn(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fn\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, \"\");\n\n\t\tfor (let next = this._peek(); this._haveMore() && next !== \"\\\\\" && next !== \"}\"; next = this._peek()) {\n\t\t\tvalueNode.value += next;\n\t\t}\n\n\t\tif (valueNode.value.length > 0) {\n\t\t\tcurrent.value = new parts.FontName(valueNode.value);\n\t\t}\n\t\telse {\n\t\t\tcurrent.value = new parts.FontName(null);\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fr(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_frx(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fry(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_frz(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fs(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fsplus(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fs+\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.FontSizePlus(valueNode.value / 10);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fsminus(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fs-\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.FontSizeMinus(valueNode.value / 10);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fscx(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fscx\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode !== null) {\n\t\t\tcurrent.value = new parts.FontScaleX(valueNode.value / 100);\n\t\t}\n\t\telse {\n\t\t\tcurrent.value = new parts.FontScaleX(null);\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fscy(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"fscy\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode !== null) {\n\t\t\tcurrent.value = new parts.FontScaleY(valueNode.value / 100);\n\t\t}\n\t\telse {\n\t\t\tcurrent.value = new parts.FontScaleY(null);\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_fsp(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_i(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_iclip(parent: ParseNode): ParseNode {\n\t\treturn this._parse_tag_clip_or_iclip(\"iclip\", parent);\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_k(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"k\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.ColorKaraoke(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_K(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"K\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.SweepingColorKaraoke(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_kf(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"kf\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.SweepingColorKaraoke(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_ko(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"ko\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = this.parse_decimal(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.OutlineKaraoke(valueNode.value / 100);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_move(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"move\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst x1Node = this.parse_decimal(current);\n\t\tif (x1Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst y1Node = this.parse_decimal(current);\n\t\tif (y1Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst x2Node = this.parse_decimal(current);\n\t\tif (x2Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst y2Node = this.parse_decimal(current);\n\t\tif (y2Node === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet t1Node: ParseNode = null;\n\t\tlet t2Node: ParseNode = null;\n\n\t\tif (this.read(current, \",\") !== null) {\n\t\t\tt1Node = this.parse_decimal(current);\n\t\t\tif (t1Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tt2Node = this.parse_decimal(current);\n\t\t\tif (t2Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.Move(\n\t\t\tx1Node.value, y1Node.value, x2Node.value, y2Node.value,\n\t\t\t(t1Node !== null) ? (t1Node.value / 1000) : null, (t2Node !== null) ? (t2Node.value / 1000) : null\n\t\t);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_org(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"org\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst xNode = this.parse_decimal(current);\n\t\tif (xNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst yNode = this.parse_decimal(current);\n\t\tif (yNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.RotationOrigin(xNode.value, yNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_p(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_pbo(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_pos(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"pos\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst xNode = this.parse_decimal(current);\n\t\tif (xNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \",\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst yNode = this.parse_decimal(current);\n\t\tif (yNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = new parts.Position(xNode.value, yNode.value);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_q(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"q\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst next = this._peek();\n\n\t\tif (next < \"0\" || next > \"3\") {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, next);\n\n\t\tcurrent.value = new parts.WrappingStyle(parseInt(valueNode.value));\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_r(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"r\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = new ParseNode(current, \"\");\n\n\t\tfor (let next = this._peek(); this._haveMore() && next !== \"\\\\\" && next !== \"}\"; next = this._peek()) {\n\t\t\tvalueNode.value += next;\n\t\t}\n\n\t\tif (valueNode.value.length > 0) {\n\t\t\tcurrent.value = new parts.Reset(valueNode.value);\n\t\t}\n\t\telse {\n\t\t\tcurrent.value = new parts.Reset(null);\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_s(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_shad(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_t(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, \"t\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet startNode: ParseNode = null;\n\t\tlet endNode: ParseNode = null;\n\t\tlet accelNode: ParseNode = null;\n\n\t\tconst firstNode = this.parse_decimal(current);\n\t\tif (firstNode !== null) {\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst secondNode = this.parse_decimal(current);\n\t\t\tif (secondNode !== null) {\n\t\t\t\tstartNode = firstNode;\n\t\t\t\tendNode = secondNode;\n\n\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst thirdNode = this.parse_decimal(current);\n\t\t\t\tif (thirdNode !== null) {\n\t\t\t\t\taccelNode = thirdNode;\n\n\t\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\t\tparent.pop();\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taccelNode = firstNode;\n\n\t\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\t\tparent.pop();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst transformTags: parts.Part[] = [];\n\n\t\tfor (let next = this._peek(); this._haveMore() && next !== \")\" && next !== \"}\"; next = this._peek()) {\n\t\t\tlet childNode: ParseNode = null;\n\n\t\t\tif (this.read(current, \"\\\\\") !== null) {\n\t\t\t\tchildNode =\n\t\t\t\t\tthis.parse_tag_alpha(current) ||\n\t\t\t\t\tthis.parse_tag_iclip(current) ||\n\t\t\t\t\tthis.parse_tag_xbord(current) ||\n\t\t\t\t\tthis.parse_tag_ybord(current) ||\n\t\t\t\t\tthis.parse_tag_xshad(current) ||\n\t\t\t\t\tthis.parse_tag_yshad(current) ||\n\n\t\t\t\t\tthis.parse_tag_blur(current) ||\n\t\t\t\t\tthis.parse_tag_bord(current) ||\n\t\t\t\t\tthis.parse_tag_clip(current) ||\n\t\t\t\t\tthis.parse_tag_fscx(current) ||\n\t\t\t\t\tthis.parse_tag_fscy(current) ||\n\t\t\t\t\tthis.parse_tag_shad(current) ||\n\n\t\t\t\t\tthis.parse_tag_fax(current) ||\n\t\t\t\t\tthis.parse_tag_fay(current) ||\n\t\t\t\t\tthis.parse_tag_frx(current) ||\n\t\t\t\t\tthis.parse_tag_fry(current) ||\n\t\t\t\t\tthis.parse_tag_frz(current) ||\n\t\t\t\t\tthis.parse_tag_fsp(current) ||\n\t\t\t\t\tthis.parse_tag_fsplus(current) ||\n\t\t\t\t\tthis.parse_tag_fsminus(current) ||\n\n\t\t\t\t\tthis.parse_tag_be(current) ||\n\t\t\t\t\tthis.parse_tag_fr(current) ||\n\t\t\t\t\tthis.parse_tag_fs(current) ||\n\t\t\t\t\tthis.parse_tag_1a(current) ||\n\t\t\t\t\tthis.parse_tag_1c(current) ||\n\t\t\t\t\tthis.parse_tag_2a(current) ||\n\t\t\t\t\tthis.parse_tag_2c(current) ||\n\t\t\t\t\tthis.parse_tag_3a(current) ||\n\t\t\t\t\tthis.parse_tag_3c(current) ||\n\t\t\t\t\tthis.parse_tag_4a(current) ||\n\t\t\t\t\tthis.parse_tag_4c(current) ||\n\n\t\t\t\t\tthis.parse_tag_c(current);\n\n\t\t\t\tif (childNode === null) {\n\t\t\t\t\tcurrent.pop(); // Unread backslash\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (childNode === null) {\n\t\t\t\tchildNode = this.parse_comment(current);\n\t\t\t}\n\n\t\t\tif (childNode !== null) {\n\t\t\t\tif (childNode.value instanceof parts.Comment && transformTags[transformTags.length - 1] instanceof parts.Comment) {\n\t\t\t\t\t// Merge consecutive comment parts into one part\n\t\t\t\t\ttransformTags[transformTags.length - 1] =\n\t\t\t\t\t\tnew parts.Comment(\n\t\t\t\t\t\t\t(transformTags[transformTags.length - 1] as parts.Comment).value +\n\t\t\t\t\t\t\t(childNode.value as parts.Comment).value\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttransformTags.push(childNode.value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tthis.read(current, \")\");\n\n\t\tcurrent.value =\n\t\t\tnew parts.Transform(\n\t\t\t\t(startNode !== null) ? (startNode.value / 1000) : null,\n\t\t\t\t(endNode !== null) ? (endNode.value / 1000) : null,\n\t\t\t\t(accelNode !== null) ? (accelNode.value / 1000) : null,\n\t\t\t\ttransformTags\n\t\t\t);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_u(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_xbord(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_xshad(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_ybord(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_yshad(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_1a(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_1c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_2a(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_2c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_3a(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_3c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_4a(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_tag_4c(parent: ParseNode): ParseNode {\n\t\tthrow new Error(\"Method not implemented.\");\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_drawingInstructions(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tlet currentType: string = null;\n\t\tconst numberParts: ParseNode[] = [];\n\n\t\tcurrent.value = [];\n\n\t\twhile (this._haveMore()) {\n\t\t\twhile (this.read(current, \" \") !== null) { }\n\t\t\tif (!this._haveMore()) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (currentType !== null) {\n\t\t\t\tconst numberPart = this.parse_decimal(current);\n\t\t\t\tif (numberPart !== null) {\n\t\t\t\t\tnumberParts.push(numberPart);\n\n\t\t\t\t\tif (currentType === \"m\" && numberParts.length === 2) {\n\t\t\t\t\t\tcurrent.value.push(new parts.drawing.MoveInstruction(numberParts[0].value, numberParts[1].value));\n\t\t\t\t\t\tnumberParts.splice(0, numberParts.length);\n\t\t\t\t\t}\n\t\t\t\t\telse if (currentType === \"l\" && numberParts.length === 2) {\n\t\t\t\t\t\tcurrent.value.push(new parts.drawing.LineInstruction(numberParts[0].value, numberParts[1].value));\n\t\t\t\t\t\tnumberParts.splice(0, numberParts.length);\n\t\t\t\t\t}\n\t\t\t\t\telse if (currentType === \"b\" && numberParts.length === 6) {\n\t\t\t\t\t\tcurrent.value.push(new parts.drawing.CubicBezierCurveInstruction(\n\t\t\t\t\t\t\tnumberParts[0].value, numberParts[1].value,\n\t\t\t\t\t\t\tnumberParts[2].value, numberParts[3].value,\n\t\t\t\t\t\t\tnumberParts[4].value, numberParts[5].value));\n\t\t\t\t\t\tnumberParts.splice(0, numberParts.length);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst typePart = this.parse_text(current);\n\t\t\tconst newType = (typePart.value as parts.Text).value;\n\t\t\tswitch (newType) {\n\t\t\t\tcase \"m\":\n\t\t\t\tcase \"l\":\n\t\t\t\tcase \"b\":\n\t\t\t\t\tcurrentType = newType;\n\t\t\t\t\tnumberParts.splice(0, numberParts.length);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\twhile (this.read(current, \" \") !== null) { }\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_decimalInt32(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst isNegative = this.read(current, \"-\") !== null;\n\n\t\tconst numberNode = new ParseNode(current, \"\");\n\t\tfor (let next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\n\t\t\tnumberNode.value += next;\n\t\t}\n\n\t\tif (numberNode.value.length === 0) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = parseInt(numberNode.value);\n\t\tif (value >= 0xFFFFFFFF) {\n\t\t\tvalue = 0xFFFFFFFF;\n\t\t}\n\t\telse if (isNegative) {\n\t\t\tvalue = -value;\n\t\t}\n\n\t\tcurrent.value = value;\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_hexInt32(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst isNegative = this.read(current, \"-\") !== null;\n\n\t\tconst numberNode = new ParseNode(current, \"\");\n\t\tfor (\n\t\t\tlet next = this._peek();\n\t\t\tthis._haveMore() && (\n\t\t\t\t(next >= \"0\" && next <= \"9\") ||\n\t\t\t\t(next >= \"a\" && next <= \"f\") ||\n\t\t\t\t(next >= \"A\" && next <= \"F\")\n\t\t\t);\n\t\t\tnext = this._peek()) {\n\n\t\t\tnumberNode.value += next;\n\t\t}\n\n\t\tif (numberNode.value.length === 0) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = parseInt(numberNode.value, 16);\n\t\tif (value >= 0xFFFFFFFF) {\n\t\t\tvalue = 0xFFFFFFFF;\n\t\t}\n\t\telse if (isNegative) {\n\t\t\tvalue = -value;\n\t\t}\n\n\t\tcurrent.value = value;\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_decimalOrHexInt32(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst valueNode =\n\t\t\t(this.read(current, \"&H\") !== null || this.read(current, \"&h\") !== null) ?\n\t\t\t\tthis.parse_hexInt32(current) :\n\t\t\t\tthis.parse_decimalInt32(current);\n\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = valueNode.value;\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_decimal(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst negative = (this.read(current, \"-\") !== null);\n\n\t\tconst numericalPart = this.parse_unsignedDecimal(current);\n\n\t\tif (numericalPart === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tcurrent.value = numericalPart.value;\n\n\t\tif (negative) {\n\t\t\tcurrent.value = -current.value;\n\t\t}\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_unsignedDecimal(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst characteristicNode = new ParseNode(current, \"\");\n\n\t\tlet mantissaNode: ParseNode = null;\n\n\t\tfor (let next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\n\t\t\tcharacteristicNode.value += next;\n\t\t}\n\n\t\tif (characteristicNode.value.length === 0) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \".\") !== null) {\n\t\t\tmantissaNode = new ParseNode(current, \"\");\n\n\t\t\tfor (let next = this._peek(); this._haveMore() && next >= \"0\" && next <= \"9\"; next = this._peek()) {\n\t\t\t\tmantissaNode.value += next;\n\t\t\t}\n\n\t\t\tif (mantissaNode.value.length === 0) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tcurrent.value = parseFloat(characteristicNode.value + ((mantissaNode !== null) ? (\".\" + mantissaNode.value) : \"\"));\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_enableDisable(parent: ParseNode): ParseNode {\n\t\tconst next = this._peek();\n\n\t\tif (next === \"0\" || next === \"1\") {\n\t\t\tconst result = new ParseNode(parent, next);\n\t\t\tresult.value = (result.value === \"1\");\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_color(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\n\n\t\tconst valueNode = this.parse_hexInt32(current);\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = valueNode.value;\n\n\t\tcurrent.value = new parts.Color(\n\t\t\tvalue & 0xFF,\n\t\t\t(value >> 8) & 0xFF,\n\t\t\t(value >> 16) & 0xFF\n\t\t);\n\n\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_alpha(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\n\n\t\tconst valueNode = this.parse_hexInt32(current);\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = valueNode.value;\n\n\t\tcurrent.value = 1 - (value & 0xFF) / 0xFF;\n\n\t\twhile (this.read(current, \"&\") !== null || this.read(current, \"H\") !== null) { }\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tparse_colorWithAlpha(parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tconst valueNode = this.parse_decimalOrHexInt32(current);\n\t\tif (valueNode === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = valueNode.value;\n\n\t\tcurrent.value = new parts.Color(\n\t\t\tvalue & 0xFF,\n\t\t\t(value >> 8) & 0xFF,\n\t\t\t(value >> 16) & 0xFF,\n\t\t\t1 - ((value >> 24) & 0xFF) / 0xFF\n\t\t);\n\n\t\treturn current;\n\t}\n\n\t/**\n\t * @param {!ParseNode} parent\n\t * @param {string} next\n\t * @return {ParseNode}\n\t */\n\tread(parent: ParseNode, next: string): ParseNode {\n\t\tif (this._peek(next.length) !== next) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new ParseNode(parent, next);\n\t}\n\n\t/**\n\t * @param {number=1} count\n\t * @return {string}\n\t */\n\tprivate _peek(count: number = 1): string {\n\t\t// Fastpath for count === 1. http://jsperf.com/substr-vs-indexer\n\t\tif (count === 1) { return this._input[this._parseTree.end]; }\n\n\t\treturn this._input.substr(this._parseTree.end, count);\n\t}\n\n\t/**\n\t * @return {boolean}\n\t */\n\tprivate _haveMore(): boolean {\n\t\treturn this._parseTree.end < this._input.length;\n\t}\n\n\t/**\n\t * @param {string} tagName One of \"clip\" and \"iclip\"\n\t * @param {!ParseNode} parent\n\t * @return {ParseNode}\n\t */\n\tprivate _parse_tag_clip_or_iclip(tagName: \"clip\" | \"iclip\", parent: ParseNode): ParseNode {\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (this.read(current, tagName) === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.read(current, \"(\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tlet x1Node: ParseNode = null;\n\t\tlet x2Node: ParseNode = null;\n\t\tlet y1Node: ParseNode = null;\n\t\tlet y2Node: ParseNode = null;\n\t\tlet scaleNode: ParseNode = null;\n\t\tlet commandsNode: ParseNode = null;\n\n\t\tconst firstNode = this.parse_decimal(current);\n\n\t\tif (firstNode !== null) {\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst secondNode = this.parse_decimal(current);\n\n\t\t\tif (secondNode !== null) {\n\t\t\t\tx1Node = firstNode;\n\t\t\t\ty1Node = secondNode;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscaleNode = firstNode;\n\t\t\t}\n\t\t}\n\n\t\tif (x1Node !== null && y1Node !== null) {\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tx2Node = this.parse_decimal(current);\n\t\t\tif (x2Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.read(current, \",\") === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\ty2Node = this.parse_decimal(current);\n\t\t\tif (y2Node === null) {\n\t\t\t\tparent.pop();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.RectangularClip(x1Node.value, y1Node.value, x2Node.value, y2Node.value, tagName === \"clip\");\n\t\t}\n\t\telse {\n\t\t\tcommandsNode = new ParseNode(current, \"\");\n\n\t\t\tfor (let next = this._peek(); this._haveMore() && next !== \")\" && next !== \"}\"; next = this._peek()) {\n\t\t\t\tcommandsNode.value += next;\n\t\t\t}\n\n\t\t\tcurrent.value = new parts.VectorClip((scaleNode !== null) ? scaleNode.value : 1, parse(commandsNode.value, \"drawingInstructions\") as parts.drawing.Instruction[], tagName === \"clip\");\n\t\t}\n\n\t\tif (this.read(current, \")\") === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\treturn current;\n\t}\n}\n\n/**\n * Constructs a simple tag parser function and sets it on the prototype of the {@link ./parser/parse.ParserRun} class.\n *\n * @param {string} tagName The name of the tag to generate the parser function for\n * @param {function(new: !libjass.parts.Part, *)} tagConstructor The type of tag to be returned by the generated parser function\n * @param {function(!ParseNode): ParseNode} valueParser The parser for the tag's value\n * @param {boolean} required Whether the tag's value is required or optional\n */\nfunction makeTagParserFunction(\n\ttagName: string,\n\ttagConstructor: { new (value: any): parts.Part },\n\tvalueParser: (current: ParseNode) => ParseNode,\n\trequired: boolean\n): void {\n\t(ParserRun.prototype as any)[`parse_tag_${ tagName }`] = function (parent: ParseNode): ParseNode {\n\t\tconst self = this as ParserRun;\n\t\tconst current = new ParseNode(parent);\n\n\t\tif (self.read(current, tagName) === null) {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\tconst valueNode = valueParser.call(self, current);\n\n\t\tif (valueNode !== null) {\n\t\t\tcurrent.value = new tagConstructor(valueNode.value);\n\t\t}\n\t\telse if (!required) {\n\t\t\tcurrent.value = new tagConstructor(null);\n\t\t}\n\t\telse {\n\t\t\tparent.pop();\n\t\t\treturn null;\n\t\t}\n\n\t\treturn current;\n\t};\n}\n\nmakeTagParserFunction(\"alpha\", parts.Alpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"be\", parts.Blur, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"blur\", parts.GaussianBlur, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"bord\", parts.Border, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"c\", parts.PrimaryColor, ParserRun.prototype.parse_color, false);\nmakeTagParserFunction(\"fax\", parts.SkewX, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fay\", parts.SkewY, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fr\", parts.RotateZ, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"frx\", parts.RotateX, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fry\", parts.RotateY, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"frz\", parts.RotateZ, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fs\", parts.FontSize, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"fsp\", parts.LetterSpacing, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"i\", parts.Italic, ParserRun.prototype.parse_enableDisable, false);\nmakeTagParserFunction(\"p\", parts.DrawingMode, ParserRun.prototype.parse_decimal, true);\nmakeTagParserFunction(\"pbo\", parts.DrawingBaselineOffset, ParserRun.prototype.parse_decimal, true);\nmakeTagParserFunction(\"s\", parts.StrikeThrough, ParserRun.prototype.parse_enableDisable, false);\nmakeTagParserFunction(\"shad\", parts.Shadow, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"u\", parts.Underline, ParserRun.prototype.parse_enableDisable, false);\nmakeTagParserFunction(\"xbord\", parts.BorderX, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"xshad\", parts.ShadowX, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"ybord\", parts.BorderY, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"yshad\", parts.ShadowY, ParserRun.prototype.parse_decimal, false);\nmakeTagParserFunction(\"1a\", parts.PrimaryAlpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"1c\", parts.PrimaryColor, ParserRun.prototype.parse_color, false);\nmakeTagParserFunction(\"2a\", parts.SecondaryAlpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"2c\", parts.SecondaryColor, ParserRun.prototype.parse_color, false);\nmakeTagParserFunction(\"3a\", parts.OutlineAlpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"3c\", parts.OutlineColor, ParserRun.prototype.parse_color, false);\nmakeTagParserFunction(\"4a\", parts.ShadowAlpha, ParserRun.prototype.parse_alpha, false);\nmakeTagParserFunction(\"4c\", parts.ShadowColor, ParserRun.prototype.parse_color, false);\n\nfor (const key of Object.keys(ParserRun.prototype)) {\n\tif (key.indexOf(\"parse_\") === 0 && typeof (ParserRun.prototype as any)[key] === \"function\") {\n\t\trules.set(key.substr(\"parse_\".length), (ParserRun.prototype as any)[key]);\n\t}\n}\n\n/**\n * This class represents a single parse node. It has a start and end position, and an optional value object.\n *\n * @param {ParseNode} parent The parent of this parse node.\n * @param {*=null} value If provided, it is assigned as the value of the node.\n */\nclass ParseNode {\n\tprivate _children: ParseNode[] = [];\n\n\tprivate _start: number;\n\tprivate _end: number;\n\tprivate _value: any;\n\n\tconstructor(private _parent: ParseNode, value: any = null) {\n\t\tif (_parent !== null) {\n\t\t\t_parent.children.push(this);\n\t\t}\n\n\t\tthis._start = ((_parent !== null) ? _parent.end : 0);\n\t\tthis._end = this._start;\n\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * The start position of this parse node.\n\t *\n\t * @type {number}\n\t */\n\tget start(): number {\n\t\treturn this._start;\n\t}\n\n\t/**\n\t * The end position of this parse node.\n\t *\n\t * @type {number}\n\t */\n\tget end(): number {\n\t\treturn this._end;\n\t}\n\n\t/**\n\t * @type {ParseNode}\n\t */\n\tget parent(): ParseNode {\n\t\treturn this._parent;\n\t}\n\n\t/**\n\t * @type {!Array.<!ParseNode>}\n\t */\n\tget children(): ParseNode[] {\n\t\treturn this._children;\n\t}\n\n\t/**\n\t * An optional object associated with this parse node.\n\t *\n\t * @type {*}\n\t */\n\tget value(): any {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * An optional object associated with this parse node.\n\t *\n\t * If the value is a string, then the end property is updated to be the length of the string.\n\t *\n\t * @type {*}\n\t */\n\tset value(newValue: any) {\n\t\tthis._value = newValue;\n\n\t\tif (this._value !== null && this._value.constructor === String && this._children.length === 0) {\n\t\t\tthis._setEnd(this._start + this._value.length);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the last child of this node and updates the end position to be end position of the new last child.\n\t */\n\tpop(): void {\n\t\tthis._children.splice(this._children.length - 1, 1);\n\n\t\tif (this._children.length > 0) {\n\t\t\tthis._setEnd(this._children[this._children.length - 1].end);\n\t\t}\n\t\telse {\n\t\t\tthis._setEnd(this.start);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the end property of this node and its parent recursively to the root node.\n\t *\n\t * @param {number} newEnd\n\t */\n\tprivate _setEnd(newEnd: number): void {\n\t\tthis._end = newEnd;\n\n\t\tif (this._parent !== null && this._parent.end !== this._end) {\n\t\t\tthis._parent._setEnd(this._end);\n\t\t}\n\t}\n}\n\nimport { Promise } from \"../utility/promise\";\n\nimport { WorkerCommands } from \"../webworker/commands\";\nimport { registerWorkerCommand } from \"../webworker/misc\";\n\nregisterWorkerCommand(WorkerCommands.Parse, parameters => new Promise(resolve => {\n\tresolve(parse(parameters.input, parameters.rule));\n}));\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WrappingStyle as WrappingStyleType } from \"../types/misc\";\n\nimport * as drawing from \"./drawing\";\nexport { drawing };\n\n/**\n * Represents a CSS color with red, green, blue and alpha components.\n *\n * Instances of this class are immutable.\n *\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {number=1} alpha\n */\nexport class Color {\n\tconstructor(private _red: number, private _green: number, private _blue: number, private _alpha: number = 1) { }\n\n\t/**\n\t * The red component of this color as a number between 0 and 255.\n\t *\n\t * @type {number}\n\t */\n\tget red(): number {\n\t\treturn this._red;\n\t}\n\n\t/**\n\t * The green component of this color as a number between 0 and 255.\n\t *\n\t * @type {number}\n\t */\n\tget green(): number {\n\t\treturn this._green;\n\t}\n\n\t/**\n\t * The blue component of this color as a number between 0 and 255.\n\t *\n\t * @type {number}\n\t */\n\tget blue(): number {\n\t\treturn this._blue;\n\t}\n\n\t/**\n\t * The alpha component of this color as a number between 0 and 1, where 0 means transparent and 1 means opaque.\n\t *\n\t * @type {number}\n\t */\n\tget alpha(): number {\n\t\treturn this._alpha;\n\t}\n\n\t/**\n\t * @param {?number} value The new alpha. If null, the existing alpha is used.\n\t * @return {!libjass.parts.Color} Returns a new Color instance with the same color but the provided alpha.\n\t */\n\twithAlpha(value: number): Color {\n\t\tif (value !== null) {\n\t\t\treturn new Color(this._red, this._green, this._blue, value);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {string} The CSS representation \"rgba(...)\" of this color.\n\t */\n\ttoString(): string {\n\t\treturn `rgba(${ this._red }, ${ this._green }, ${ this._blue }, ${ this._alpha.toFixed(3) })`;\n\t}\n\n\t/**\n\t * Returns a new Color by interpolating the current color to the final color by the given progression.\n\t *\n\t * @param {!libjass.parts.Color} final\n\t * @param {number} progression\n\t * @return {!libjass.parts.Color}\n\t */\n\tinterpolate(final: Color, progression: number): Color {\n\t\treturn new Color(\n\t\t\tthis._red + progression * (final.red - this._red),\n\t\t\tthis._green + progression * (final.green - this._green),\n\t\t\tthis._blue + progression * (final.blue - this._blue),\n\t\t\tthis._alpha + progression * (final.alpha - this._alpha)\n\t\t);\n\t}\n}\n\n/**\n * The base interface of the ASS tag classes.\n */\nexport interface Part { }\n\n/**\n * A comment, i.e., any text enclosed in {} that is not understood as an ASS tag.\n *\n * @param {string} value The text of this comment\n */\nexport class Comment {\n\tconstructor(private _value: string) { }\n\n\t/**\n\t * The value of this comment.\n\t *\n\t * @type {string}\n\t */\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A block of text, i.e., any text not enclosed in {}. Also includes \\h.\n *\n * @param {string} value The content of this block of text\n */\nexport class Text {\n\tconstructor(private _value: string) { }\n\n\t/**\n\t * The value of this text part.\n\t *\n\t * @type {string}\n\t */\n\tget value(): string {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * @return {string}\n\t */\n\ttoString(): string {\n\t\treturn `Text { value: ${ this._value.replace(/\\u00A0/g, \"\\\\h\") } }`;\n\t}\n}\n\n/**\n * A newline character \\N.\n */\nexport class NewLine {\n}\n\n/**\n * An italic tag {\\i}\n *\n * @param {?boolean} value {\\i1} -> true, {\\i0} -> false, {\\i} -> null\n */\nexport class Italic {\n\tconstructor(private _value: boolean) { }\n\n\t/**\n\t * The value of this italic tag.\n\t *\n\t * @type {?boolean}\n\t */\n\tget value(): boolean {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A bold tag {\\b}\n *\n * @param {?boolean|?number} value {\\b1} -> true, {\\b0} -> false, {\\b###} -> weight of the bold (number), {\\b} -> null\n */\nexport class Bold {\n\tconstructor(private _value: boolean | number) { }\n\n\t/**\n\t * The value of this bold tag.\n\t *\n\t * @type {?boolean|?number}\n\t */\n\tget value(): boolean | number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An underline tag {\\u}\n *\n * @param {?boolean} value {\\u1} -> true, {\\u0} -> false, {\\u} -> null\n */\nexport class Underline {\n\tconstructor(private _value: boolean) { }\n\n\t/**\n\t * The value of this underline tag.\n\t *\n\t * @type {?boolean}\n\t */\n\tget value(): boolean {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A strike-through tag {\\s}\n *\n * @param {?boolean} value {\\s1} -> true, {\\s0} -> false, {\\s} -> null\n */\nexport class StrikeThrough {\n\tconstructor(private _value: boolean) { }\n\n\t/**\n\t * The value of this strike-through tag.\n\t *\n\t * @type {?boolean}\n\t */\n\tget value(): boolean {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A border tag {\\bord}\n *\n * @param {?number} value {\\bord###} -> width (number), {\\bord} -> null\n */\nexport class Border {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this border tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A horizontal border tag {\\xbord}\n *\n * @param {?number} value {\\xbord###} -> width (number), {\\xbord} -> null\n */\nexport class BorderX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this horizontal border tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A vertical border tag {\\ybord}\n *\n * @param {?number} value {\\ybord###} -> height (number), {\\ybord} -> null\n */\nexport class BorderY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this vertical border tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A shadow tag {\\shad}\n *\n * @param {?number} value {\\shad###} -> depth (number), {\\shad} -> null\n */\nexport class Shadow {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this shadow tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A horizontal shadow tag {\\xshad}\n *\n * @param {?number} value {\\xshad###} -> depth (number), {\\xshad} -> null\n */\nexport class ShadowX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this horizontal shadow tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A vertical shadow tag {\\yshad}\n *\n * @param {?number} value {\\yshad###} -> depth (number), {\\yshad} -> null\n */\nexport class ShadowY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this vertical shadow tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A blur tag {\\be}\n *\n * @param {?number} value {\\be###} -> strength (number), {\\be} -> null\n */\nexport class Blur {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this blur tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A Gaussian blur tag {\\blur}\n *\n * @param {?number} value {\\blur###} -> strength (number), {\\blur} -> null\n */\nexport class GaussianBlur {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this Gaussian blur tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A font name tag {\\fn}\n *\n * @param {?string} value {\\fn###} -> name (string), {\\fn} -> null\n */\nexport class FontName {\n\tconstructor(private _value: string) { }\n\n\t/**\n\t * The value of this font name tag.\n\t *\n\t * @type {?string}\n\t */\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A font size tag {\\fs}\n *\n * @param {?number} value {\\fs###} -> size (number), {\\fs} -> null\n */\nexport class FontSize {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this font size tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A font size increase tag {\\fs+}\n *\n * @param {number} value {\\fs+###} -> relative difference (number, percentage)\n */\nexport class FontSizePlus {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this font size increase tag.\n\t *\n\t * @type {number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A font size decrease tag {\\fs-}\n *\n * @param {number} value {\\fs-###} -> relative difference (number, percentage)\n */\nexport class FontSizeMinus {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this font size decrease tag.\n\t *\n\t * @type {number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A horizontal font scaling tag {\\fscx}\n *\n * @param {?number} value {\\fscx###} -> scale (number), {\\fscx} -> null\n */\nexport class FontScaleX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this horizontal font scaling tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A vertical font scaling tag {\\fscy}\n *\n * @param {?number} value {\\fscy###} -> scale (number), {\\fscy} -> null\n */\nexport class FontScaleY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this vertical font scaling tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A letter-spacing tag {\\fsp}\n *\n * @param {?number} value {\\fsp###} -> spacing (number), {\\fsp} -> null\n */\nexport class LetterSpacing {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this letter-spacing tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An X-axis rotation tag {\\frx}\n *\n * @param {?number} value {\\frx###} -> angle (number), {\\frx} -> null\n */\nexport class RotateX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this X-axis rotation tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A Y-axis rotation tag {\\fry}\n *\n * @param {?number} value {\\fry###} -> angle (number), {\\fry} -> null\n */\nexport class RotateY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this Y-axis rotation tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A Z-axis rotation tag {\\fr} or {\\frz}\n *\n * @param {?number} value {\\frz###} -> angle (number), {\\frz} -> null\n */\nexport class RotateZ {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this Z-axis rotation tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An X-axis shearing tag {\\fax}\n *\n * @param {?number} value {\\fax###} -> angle (number), {\\fax} -> null\n */\nexport class SkewX {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this X-axis shearing tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A Y-axis shearing tag {\\fay}\n *\n * @param {?number} value {\\fay###} -> angle (number), {\\fay} -> null\n */\nexport class SkewY {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this Y-axis shearing tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A primary color tag {\\c} or {\\1c}\n *\n * @param {libjass.parts.Color} value {\\1c###} -> color (Color), {\\1c} -> null\n */\nexport class PrimaryColor {\n\tconstructor(private _value: Color) { }\n\n\t/**\n\t * The value of this primary color tag.\n\t *\n\t * @type {libjass.parts.Color}\n\t */\n\tget value(): Color {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A secondary color tag {\\2c}\n *\n * @param {libjass.parts.Color} value {\\2c###} -> color (Color), {\\2c} -> null\n */\nexport class SecondaryColor {\n\tconstructor(private _value: Color) { }\n\n\t/**\n\t * The value of this secondary color tag.\n\t *\n\t * @type {libjass.parts.Color}\n\t */\n\tget value(): Color {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An outline color tag {\\3c}\n *\n * @param {libjass.parts.Color} value {\\3c###} -> color (Color), {\\3c} -> null\n */\nexport class OutlineColor {\n\tconstructor(private _value: Color) { }\n\n\t/**\n\t * The value of this outline color tag.\n\t *\n\t * @type {libjass.parts.Color}\n\t */\n\tget value(): Color {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A shadow color tag {\\4c}\n *\n * @param {libjass.parts.Color} value {\\4c###} -> color (Color), {\\4c} -> null\n */\nexport class ShadowColor {\n\tconstructor(private _value: Color) { }\n\n\t/**\n\t * The value of this shadow color tag.\n\t *\n\t * @type {libjass.parts.Color}\n\t */\n\tget value(): Color {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An alpha tag {\\alpha}\n *\n * @param {?number} value {\\alpha###} -> alpha (number), {\\alpha} -> null\n */\nexport class Alpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A primary alpha tag {\\1a}\n *\n * @param {?number} value {\\1a###} -> alpha (number), {\\1a} -> null\n */\nexport class PrimaryAlpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this primary alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A secondary alpha tag {\\2a}\n *\n * @param {?number} value {\\2a###} -> alpha (number), {\\2a} -> null\n */\nexport class SecondaryAlpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this secondary alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An outline alpha tag {\\3a}\n *\n * @param {?number} value {\\3a###} -> alpha (number), {\\3a} -> null\n */\nexport class OutlineAlpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this outline alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A shadow alpha tag {\\4a}\n *\n * @param {?number} value {\\4a###} -> alpha (number), {\\4a} -> null\n */\nexport class ShadowAlpha {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this shadow alpha tag.\n\t *\n\t * @type {?number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * An alignment tag {\\an} or {\\a}\n *\n * @param {number} value {\\an###} -> alignment (number)\n */\nexport class Alignment {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this alignment tag.\n\t *\n\t * @type {number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A color karaoke tag {\\k}\n *\n * @param {number} duration {\\k###} -> duration (number)\n */\nexport class ColorKaraoke {\n\tconstructor(private _duration: number) { }\n\n\t/**\n\t * The duration of this color karaoke tag.\n\t *\n\t * @type {number}\n\t */\n\tget duration(): number {\n\t\treturn this._duration;\n\t}\n}\n\n/**\n * A sweeping color karaoke tag {\\K} or {\\kf}\n *\n * @param {number} duration {\\kf###} -> duration (number)\n */\nexport class SweepingColorKaraoke {\n\tconstructor(private _duration: number) { }\n\n\t/**\n\t * The duration of this sweeping color karaoke tag.\n\t *\n\t * @type {number}\n\t */\n\tget duration(): number {\n\t\treturn this._duration;\n\t}\n}\n\n/**\n * An outline karaoke tag {\\ko}\n *\n * @param {number} duration {\\ko###} -> duration (number)\n */\nexport class OutlineKaraoke {\n\tconstructor(private _duration: number) { }\n\n\t/**\n\t * The duration of this outline karaoke tag.\n\t *\n\t * @type {number}\n\t */\n\tget duration(): number {\n\t\treturn this._duration;\n\t}\n}\n\n/**\n * A wrapping style tag {\\q}\n *\n * @param {number} value {\\q###} -> style (number)\n */\nexport class WrappingStyle {\n\tconstructor(private _value: WrappingStyleType) { }\n\n\t/**\n\t * The value of this wrapping style tag.\n\t *\n\t * @type {number}\n\t */\n\tget value(): WrappingStyleType {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A style reset tag {\\r}\n *\n * @param {?string} value {\\r###} -> style name (string), {\\r} -> null\n */\nexport class Reset {\n\tconstructor(private _value: string) { }\n\n\t/**\n\t * The value of this style reset tag.\n\t *\n\t * @type {?string}\n\t */\n\tget value(): string {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A position tag {\\pos}\n *\n * @param {number} x\n * @param {number} y\n */\nexport class Position {\n\tconstructor(private _x: number, private _y: number) { }\n\n\t/**\n\t * The x value of this position tag.\n\t *\n\t * @type {number}\n\t */\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * The y value of this position tag.\n\t *\n\t * @type {number}\n\t */\n\tget y(): number {\n\t\treturn this._y;\n\t}\n}\n\n/**\n * A movement tag {\\move}\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {?number} t1\n * @param {?number} t2\n */\nexport class Move {\n\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _t1: number, private _t2: number) { }\n\n\t/**\n\t * The starting x value of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget x1(): number {\n\t\treturn this._x1;\n\t}\n\n\t/**\n\t * The starting y value of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget y1(): number {\n\t\treturn this._y1;\n\t}\n\n\t/**\n\t * The ending x value of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget x2(): number {\n\t\treturn this._x2;\n\t}\n\n\t/**\n\t * The ending y value of this move tag.\n\t *\n\t * @type {number}\n\t */\n\tget y2(): number {\n\t\treturn this._y2;\n\t}\n\n\t/**\n\t * The start time of this move tag.\n\t *\n\t * @type {?number}\n\t */\n\tget t1(): number {\n\t\treturn this._t1;\n\t}\n\n\t/**\n\t * The end time value of this move tag.\n\t *\n\t * @type {?number}\n\t */\n\tget t2(): number {\n\t\treturn this._t2;\n\t}\n}\n\n/**\n * A rotation origin tag {\\org}\n *\n * @param {number} x\n * @param {number} y\n */\nexport class RotationOrigin {\n\tconstructor(private _x: number, private _y: number) { }\n\n\t/**\n\t * The x value of this rotation origin tag.\n\t *\n\t * @type {number}\n\t */\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * The y value of this rotation origin tag.\n\t *\n\t * @type {number}\n\t */\n\tget y(): number {\n\t\treturn this._y;\n\t}\n}\n\n/**\n * A simple fade tag {\\fad}\n *\n * @param {number} start\n * @param {number} end\n */\nexport class Fade {\n\tconstructor(private _start: number, private _end: number) { }\n\n\t/**\n\t * The start time of this fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget start(): number {\n\t\treturn this._start;\n\t}\n\n\t/**\n\t * The end time of this fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget end(): number {\n\t\treturn this._end;\n\t}\n}\n\n/**\n * A complex fade tag {\\fade}\n *\n * @param {number} a1\n * @param {number} a2\n * @param {number} a3\n * @param {number} t1\n * @param {number} t2\n * @param {number} t3\n * @param {number} t4\n */\nexport class ComplexFade {\n\tconstructor(\n\t\tprivate _a1: number, private _a2: number, private _a3: number,\n\t\tprivate _t1: number, private _t2: number, private _t3: number, private _t4: number\n\t) { }\n\n\t/**\n\t * The alpha value of this complex fade tag at time t2.\n\t *\n\t * @type {number}\n\t */\n\tget a1(): number {\n\t\treturn this._a1;\n\t}\n\n\t/**\n\t * The alpha value of this complex fade tag at time t3.\n\t *\n\t * @type {number}\n\t */\n\tget a2(): number {\n\t\treturn this._a2;\n\t}\n\n\t/**\n\t * The alpha value of this complex fade tag at time t4.\n\t *\n\t * @type {number}\n\t */\n\tget a3(): number {\n\t\treturn this._a3;\n\t}\n\n\t/**\n\t * The starting time of this complex fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget t1(): number {\n\t\treturn this._t1;\n\t}\n\n\t/**\n\t * The first intermediate time of this complex fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget t2(): number {\n\t\treturn this._t2;\n\t}\n\n\t/**\n\t * The second intermediate time of this complex fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget t3(): number {\n\t\treturn this._t3;\n\t}\n\n\t/**\n\t * The ending time of this complex fade tag.\n\t *\n\t * @type {number}\n\t */\n\tget t4(): number {\n\t\treturn this._t4;\n\t}\n}\n\n/**\n * A transform tag {\\t}\n *\n * @param {?number} start\n * @param {?number} end\n * @param {?number} accel\n * @param {!Array.<!libjass.parts.Tag>} tags\n */\nexport class Transform {\n\tconstructor(private _start: number, private _end: number, private _accel: number, private _tags: Part[]) { }\n\n\t/**\n\t * The starting time of this transform tag.\n\t *\n\t * @type {?number}\n\t */\n\tget start(): number {\n\t\treturn this._start;\n\t}\n\n\t/**\n\t * The ending time of this transform tag.\n\t *\n\t * @type {?number}\n\t */\n\tget end(): number {\n\t\treturn this._end;\n\t}\n\n\t/**\n\t * The acceleration of this transform tag.\n\t *\n\t * @type {?number}\n\t */\n\tget accel(): number {\n\t\treturn this._accel;\n\t}\n\n\t/**\n\t * The tags animated by this transform tag.\n\t *\n\t * @type {!Array.<!libjass.parts.Tag>}\n\t */\n\tget tags(): Part[] {\n\t\treturn this._tags;\n\t}\n}\n\n/**\n * A rectangular clip tag {\\clip} or {\\iclip}\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {boolean} inside\n */\nexport class RectangularClip {\n\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _inside: boolean) { }\n\n\t/**\n\t * The X coordinate of the starting position of this rectangular clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget x1(): number {\n\t\treturn this._x1;\n\t}\n\n\t/**\n\t * The Y coordinate of the starting position of this rectangular clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget y1(): number {\n\t\treturn this._y1;\n\t}\n\n\t/**\n\t * The X coordinate of the ending position of this rectangular clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget x2(): number {\n\t\treturn this._x2;\n\t}\n\n\t/**\n\t * The Y coordinate of the ending position of this rectangular clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget y2(): number {\n\t\treturn this._y2;\n\t}\n\n\t/**\n\t * Whether this rectangular clip tag clips the region it encloses or the region it excludes.\n\t *\n\t * @type {boolean}\n\t */\n\tget inside(): boolean {\n\t\treturn this._inside;\n\t}\n}\n\n/**\n * A vector clip tag {\\clip} or {\\iclip}\n *\n * @param {number} scale\n * @param {!Array.<!libjass.parts.drawing.Instruction>} instructions\n * @param {boolean} inside\n */\nexport class VectorClip {\n\tconstructor(private _scale: number, private _instructions: drawing.Instruction[], private _inside: boolean) { }\n\n\t/**\n\t * The scale of this vector clip tag.\n\t *\n\t * @type {number}\n\t */\n\tget scale(): number {\n\t\treturn this._scale;\n\t}\n\n\t/**\n\t * The clip commands of this vector clip tag.\n\t *\n\t * @type {string}\n\t */\n\tget instructions(): drawing.Instruction[] {\n\t\treturn this._instructions;\n\t}\n\n\t/**\n\t * Whether this vector clip tag clips the region it encloses or the region it excludes.\n\t *\n\t * @type {boolean}\n\t */\n\tget inside(): boolean {\n\t\treturn this._inside;\n\t}\n}\n\n/**\n * A drawing mode tag {\\p}\n *\n * @param {number} scale\n */\nexport class DrawingMode {\n\tconstructor(private _scale: number) { }\n\n\t/**\n\t * The scale of this drawing mode tag.\n\t *\n\t * @type {number}\n\t */\n\tget scale(): number {\n\t\treturn this._scale;\n\t}\n}\n\n/**\n * A drawing mode baseline offset tag {\\pbo}\n *\n * @param {number} value\n */\nexport class DrawingBaselineOffset {\n\tconstructor(private _value: number) { }\n\n\t/**\n\t * The value of this drawing mode baseline offset tag.\n\t *\n\t * @type {number}\n\t */\n\tget value(): number {\n\t\treturn this._value;\n\t}\n}\n\n/**\n * A pseudo-part representing text interpreted as drawing instructions\n *\n * @param {!Array.<!libjass.parts.drawing.Instruction>} instructions\n */\nexport class DrawingInstructions {\n\tconstructor(private _instructions: drawing.Instruction[]) { }\n\n\t/**\n\t * The instructions contained in this drawing instructions part.\n\t *\n\t * @type {!Array.<!libjass.parts.drawing.Instruction>}\n\t */\n\tget instructions(): drawing.Instruction[] {\n\t\treturn this._instructions;\n\t}\n}\n\nconst addToString = function (ctor: Function, ctorName: string) {\n\tif (!ctor.prototype.hasOwnProperty(\"toString\")) {\n\t\tconst propertyNames = Object.getOwnPropertyNames(ctor.prototype).filter(property => property !== \"constructor\");\n\n\t\tctor.prototype.toString = function () {\n\t\t\treturn (\n\t\t\t\tctorName + \" { \" +\n\t\t\t\tpropertyNames.map(name => `${ name }: ${ (this as any)[name] }`).join(\", \") +\n\t\t\t\t((propertyNames.length > 0) ? \" \" : \"\") +\n\t\t\t\t\"}\"\n\t\t\t);\n\t\t};\n\t}\n};\n\nimport { registerClass } from \"../serialization\";\n\ndeclare const exports: any;\n\nfor (const key of Object.keys(exports)) {\n\tconst value: any = exports[key];\n\tif (value instanceof Function) {\n\t\taddToString(value, key);\n\t\tregisterClass(value);\n\t}\n}\n\nfor (const key of Object.keys(drawing)) {\n\tconst value: any = (drawing as any)[key];\n\tif (value instanceof Function) {\n\t\taddToString(value, `Drawing${ key }`);\n\t\tregisterClass(value);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The base interface of the drawing instructions.\n */\nexport interface Instruction { }\n\n/**\n * An instruction to move to a particular position.\n *\n * @param {number} x\n * @param {number} y\n */\nexport class MoveInstruction implements Instruction {\n\tconstructor(private _x: number, private _y: number) { }\n\n\t/**\n\t * The X position of this move instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * The Y position of this move instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y(): number {\n\t\treturn this._y;\n\t}\n}\n\n/**\n * An instruction to draw a line to a particular position.\n *\n * @param {number} x\n * @param {number} y\n */\nexport class LineInstruction implements Instruction {\n\tconstructor(private _x: number, private _y: number) { }\n\n\t/**\n\t * The X position of this line instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\t/**\n\t * The Y position of this line instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y(): number {\n\t\treturn this._y;\n\t}\n}\n\n/**\n * An instruction to draw a cubic bezier curve to a particular position, with two given control points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n */\nexport class CubicBezierCurveInstruction implements Instruction {\n\tconstructor(private _x1: number, private _y1: number, private _x2: number, private _y2: number, private _x3: number, private _y3: number) { }\n\n\t/**\n\t * The X position of the first control point of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x1(): number {\n\t\treturn this._x1;\n\t}\n\n\t/**\n\t * The Y position of the first control point of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y1(): number {\n\t\treturn this._y1;\n\t}\n\n\t/**\n\t * The X position of the second control point of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x2(): number {\n\t\treturn this._x2;\n\t}\n\n\t/**\n\t * The Y position of the second control point of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y2(): number {\n\t\treturn this._y2;\n\t}\n\n\t/**\n\t * The ending X position of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget x3(): number {\n\t\treturn this._x3;\n\t}\n\n\t/**\n\t * The ending Y position of this cubic bezier curve instruction.\n\t *\n\t * @type {number}\n\t */\n\tget y3(): number {\n\t\treturn this._y3;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../utility/map\";\n\n/**\n * The format of the string passed to {@link libjass.ASS.fromString}\n */\nexport enum Format {\n\tASS,\n\tSRT,\n}\n\n/**\n * The wrapping style defined in the {@link libjass.ScriptProperties}\n */\nexport enum WrappingStyle {\n\tSmartWrappingWithWiderTopLine = 0,\n\tSmartWrappingWithWiderBottomLine = 3,\n\tEndOfLineWrapping = 1,\n\tNoLineWrapping = 2,\n}\n\n/**\n * The border style defined in the {@link libjass.Style} properties.\n */\nexport enum BorderStyle {\n\tOutline = 1,\n\tOpaqueBox = 3,\n}\n\n/**\n * A property.\n */\nexport interface Property {\n\t/**\n\t * @type {string}\n\t */\n\tname: string;\n\n\t/**\n\t * @type {string}\n\t */\n\tvalue: string;\n}\n\n/**\n * A template object with a particular type.\n */\nexport interface TypedTemplate {\n\t/**\n\t * @type {string}\n\t */\n\ttype: string;\n\n\t/**\n\t * @type {!Map.<string, string>}\n\t */\n\ttemplate: Map<string, string>;\n}\n\n/**\n * @param {!Map.<string, string>} template\n * @param {string} key\n * @param {function(string):T} converter\n * @param {?function(T):boolean} validator\n * @param {T} defaultValue\n * @return {T}\n */\nexport function valueOrDefault<T>(template: Map<string, string>, key: string, converter: (str: string) => T, validator: (value: T) => boolean, defaultValue: string): T {\n\tconst value = template.get(key);\n\tif (value === undefined) {\n\t\treturn converter(defaultValue);\n\t}\n\n\ttry {\n\t\tconst result = converter(value);\n\n\t\tif (validator !== null && !validator(result)) {\n\t\t\tthrow new Error(\"Validation failed.\");\n\t\t}\n\n\t\treturn result;\n\t}\n\tcatch (ex) {\n\t\tthrow new Error(`Property ${ key } has invalid value ${ value } - ${ ex.stack }`);\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WorkerChannel, WorkerChannelImpl } from \"./channel\";\nexport { WorkerChannel } from \"./channel\";\n\nexport { WorkerCommands } from \"./commands\";\n\n/**\n * Indicates whether web workers are supposed in this environment or not.\n *\n * @type {boolean}\n */\nexport const supported = typeof Worker !== \"undefined\";\n\nconst _scriptNode = (typeof document !== \"undefined\" && document.currentScript !== undefined) ? document.currentScript : null;\n\n/**\n * Create a new web worker and returns a {@link libjass.webworker.WorkerChannel} to it.\n *\n * @param {string=} scriptPath The path to libjass.js to be loaded in the web worker. If the browser supports document.currentScript, the parameter is optional and, if not provided,\n * the path will be determined from the src attribute of the <script> element that contains the currently running copy of libjass.js\n * @return {!libjass.webworker.WorkerChannel} A communication channel to the new web worker.\n */\nexport function createWorker(scriptPath?: string): WorkerChannel {\n\tif (scriptPath === undefined) {\n\t\tif (_scriptNode === null) {\n\t\t\tthrow new Error(\"Could not auto-detect path of libjass.js, and explicit path was not passed in.\");\n\t\t}\n\n\t\tscriptPath = _scriptNode.src;\n\t}\n\n\treturn new WorkerChannelImpl(new Worker(scriptPath));\n}\n\ndeclare const global: any;\n\nif (typeof WorkerGlobalScope !== \"undefined\" && global instanceof WorkerGlobalScope) {\n\t// This is a web worker. Set up a channel to talk back to the main thread.\n\tnew WorkerChannelImpl(global);\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { serialize, deserialize } from \"../serialization\";\n\nimport { Map } from \"../utility/map\";\n\nimport { Promise, DeferredPromise } from \"../utility/promise\";\n\nimport { WorkerCommands } from \"./commands\";\nimport { getWorkerCommandHandler, registerWorkerCommand } from \"./misc\";\n\n/**\n * Represents a communication channel between the host and the web worker. An instance of this class is created by calling {@link libjass.webworker.createWorker}\n */\nexport interface WorkerChannel {\n\t/**\n\t * Sends a request to the other side to execute the given command with the given parameters.\n\t *\n\t * @param {number} command\n\t * @param {*} parameters\n\t * @return {!Promise.<*>} A promise that will get resolved when the other side computes the result\n\t */\n\trequest(command: WorkerCommands, parameters: any): Promise<any>;\n}\n\n/**\n * The signature of a handler registered to handle a particular command in {@link libjass.webworker.WorkerCommands}\n */\nexport interface WorkerCommandHandler {\n\t(parameters: any): Promise<any>;\n}\n\n/**\n * The interface implemented by a communication channel to the other side.\n */\nexport interface WorkerCommunication {\n\t/**\n\t * @param {\"message\"} type\n\t * @param {function(!MessageEvent): *} listener\n\t * @param {?boolean} useCapture\n\t */\n\taddEventListener(type: \"message\", listener: (ev: MessageEvent) => any, useCapture?: boolean): void;\n\n\t/**\n\t * @param {string} type\n\t * @param {!EventListener} listener\n\t * @param {?boolean} useCapture\n\t */\n\taddEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\n\n\t/**\n\t * @param {*} message\n\t */\n\tpostMessage(message: any): void;\n}\n\n/**\n * The interface implemented by a request sent to the other side of the communication channel.\n */\ninterface WorkerRequestMessage {\n\t/**\n\t * An internal identifier for this request. Used to connect responses to their corresponding requests.\n\t *\n\t * @type {number}\n\t */\n\trequestId: number;\n\n\t/**\n\t * The command type of this request.\n\t *\n\t * @type {number}\n\t */\n\tcommand: WorkerCommands;\n\n\t/**\n\t * Any parameters serialized with this request.\n\t *\n\t * @type {*}\n\t */\n\tparameters: any;\n}\n\n/**\n * The interface implemented by a response received from the other side of the communication channel.\n */\ninterface WorkerResponseMessage {\n\t/**\n\t * An internal identifier for this response. Used to connect responses to their corresponding requests.\n\t *\n\t * @type {number}\n\t */\n\trequestId: number;\n\n\t/**\n\t * Set if the computation of this response resulted in an error.\n\t *\n\t * @type {*}\n\t */\n\terror: any;\n\n\t/**\n\t * The result of computing this response.\n\t *\n\t * @type {*}\n\t */\n\tresult: any;\n}\n\n/**\n * Internal implementation of libjass.webworker.WorkerChannel\n *\n * @param {!*} comm The object used to talk to the other side of the channel. When created by the main thread, this is the Worker object.\n * When created by the web worker, this is its global object.\n */\nexport class WorkerChannelImpl implements WorkerChannel {\n\tprivate static _lastRequestId: number = -1;\n\n\tprivate _pendingRequests = new Map<number, DeferredPromise<any>>();\n\n\tconstructor(private _comm: WorkerCommunication) {\n\t\tthis._comm.addEventListener(\"message\", ev => this._onMessage(ev.data as string), false);\n\t}\n\n\t/**\n\t * @param {number} command\n\t * @param {*} parameters\n\t * @return {!Promise.<*>}\n\t */\n\trequest(command: WorkerCommands, parameters: any): Promise<any> {\n\t\tconst deferred = new DeferredPromise<any>();\n\t\tconst requestId = ++WorkerChannelImpl._lastRequestId;\n\t\tthis._pendingRequests.set(requestId, deferred);\n\n\t\tconst requestMessage: WorkerRequestMessage = { requestId, command, parameters };\n\t\tthis._comm.postMessage(serialize(requestMessage));\n\n\t\treturn deferred.promise;\n\t}\n\n\t/**\n\t * @param {number} requestId\n\t */\n\tcancelRequest(requestId: number): void {\n\t\tconst deferred = this._pendingRequests.get(requestId);\n\t\tif (deferred === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._pendingRequests.delete(requestId);\n\t\tdeferred.reject(new Error(\"Cancelled.\"));\n\t}\n\n\t/**\n\t * @param {!WorkerResponseMessage} message\n\t */\n\tprivate _respond(message: WorkerResponseMessage): void {\n\t\tlet { requestId, error, result } = message;\n\t\tif (error instanceof Error) {\n\t\t\terror = { message: error.message, stack: error.stack };\n\t\t}\n\t\tthis._comm.postMessage(serialize({ command: WorkerCommands.Response, requestId, error, result }));\n\t}\n\n\t/**\n\t * @param {string} rawMessage\n\t */\n\tprivate _onMessage(rawMessage: string): void {\n\t\tconst message = deserialize(rawMessage) as { command: WorkerCommands };\n\n\t\tif (message.command === WorkerCommands.Response) {\n\t\t\tconst responseMessage = message as any as WorkerResponseMessage;\n\n\t\t\tconst deferred = this._pendingRequests.get(responseMessage.requestId);\n\t\t\tif (deferred !== undefined) {\n\t\t\t\tthis._pendingRequests.delete(responseMessage.requestId);\n\t\t\t\tif (responseMessage.error === null) {\n\t\t\t\t\tdeferred.resolve(responseMessage.result);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdeferred.reject(responseMessage.error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst requestMessage = message as WorkerRequestMessage;\n\t\t\tconst requestId = requestMessage.requestId;\n\n\t\t\tconst commandCallback = getWorkerCommandHandler(requestMessage.command);\n\t\t\tif (commandCallback === undefined) {\n\t\t\t\tthis._respond({ requestId, error: new Error(`No handler registered for command ${ requestMessage.command }`), result: null });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcommandCallback(requestMessage.parameters).then<WorkerResponseMessage>(\n\t\t\t\tresult => ({ requestId, error: null, result }),\n\t\t\t\terror => ({ requestId, error, result: null })\n\t\t\t).then(responseMessage => this._respond(responseMessage));\n\t\t}\n\t}\n}\n\nregisterWorkerCommand(WorkerCommands.Ping, parameters => Promise.resolve<void>(null));\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"../utility/map\";\n\nimport { WorkerCommands } from \"./commands\";\nimport { WorkerCommandHandler } from \"./channel\";\n\nconst workerCommands = new Map<WorkerCommands, WorkerCommandHandler>();\n\n/**\n * Registers a handler for the given worker command.\n *\n * @param {number} command The command that this handler will handle. One of the {@link libjass.webworker.WorkerCommands} constants.\n * @param {function(*, function(*, *))} handler The handler. A function of the form (parameters: *, response: function(error: *, result: *): void): void\n */\nexport function registerWorkerCommand(command: WorkerCommands, handler: WorkerCommandHandler): void {\n\tworkerCommands.set(command, handler);\n}\n\n/**\n * Gets the handler for the given worker command.\n *\n * @param {number} command\n * @return {?function(*, function(*, *))}\n */\nexport function getWorkerCommandHandler(command: WorkerCommands): WorkerCommandHandler {\n\treturn workerCommands.get(command);\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The commands that can be sent to or from a web worker.\n */\nexport enum WorkerCommands {\n\tResponse = 0,\n\tParse = 1,\n\tPing = 2,\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Map } from \"./utility/map\";\n\nconst classes = new Map<number, Function & { fromJSON?: (obj: any) => any }>();\n\n/**\n * Registers a class as a serializable type.\n *\n * @param {function(new:*)} clazz\n */\nexport function registerClass(clazz: Function & { fromJSON?: (obj: any) => any }): void {\n\tclazz.prototype._classTag = classes.size;\n\tclasses.set(clazz.prototype._classTag, clazz);\n}\n\n/**\n * Serializes the given object.\n *\n * @param {*} obj\n * @return {string}\n */\nexport function serialize(obj: any): string {\n\treturn JSON.stringify(obj, (/* ujs:unreferenced */ key: string, value: any) => {\n\t\tif (value && (value._classTag !== undefined) && !Object.prototype.hasOwnProperty.call(value, \"_classTag\")) {\n\t\t\t// Copy the _classTag from this object's prototype to itself, so that it will be serialized.\n\t\t\tvalue._classTag = value._classTag;\n\t\t}\n\n\t\treturn value;\n\t});\n}\n\n/**\n * @param {string} str\n * @return {*}\n */\nexport function deserialize(str: string): any {\n\treturn JSON.parse(str, (/* ujs:unreferenced */ key: string, value: any) => {\n\t\tif (value && (value._classTag !== undefined)) {\n\t\t\tconst clazz = classes.get(value._classTag);\n\t\t\tif (clazz === undefined) {\n\t\t\t\tthrow new Error(`Unknown class of tag ${ value._classTag } cannot be deserialized.`);\n\t\t\t}\n\n\t\t\tif (typeof clazz.fromJSON === \"function\") {\n\t\t\t\tvalue = clazz.fromJSON(value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst hydratedValue = Object.create(clazz.prototype);\n\t\t\t\tfor (const key of Object.keys(value)) {\n\t\t\t\t\thydratedValue[key] = value[key];\n\t\t\t\t}\n\t\t\t\tvalue = hydratedValue;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t});\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare const global: {\n\tPromise?: typeof Promise;\n\tMutationObserver?: typeof MutationObserver;\n\tWebkitMutationObserver?: typeof MutationObserver;\n\tprocess?: {\n\t\tnextTick(callback: () => void): void;\n\t}\n};\n\nexport interface Thenable<T> {\n\t/** @type {function(this:!Thenable.<T>, function(T|!Thenable.<T>), function(*))} */\n\tthen: ThenableThen<T>;\n}\n\nexport interface ThenableThen<T> {\n\t/** @type {function(this:!Thenable.<T>, function(T|!Thenable.<T>), function(*))} */\n\t(resolve: (resolution: T | Thenable<T>) => void, reject: (reason: any) => void): void;\n}\n\nexport interface Promise<T> extends Thenable<T> {\n\t/**\n\t * @param {?function(T):!Thenable.<U>} onFulfilled\n\t * @param {?function(*):(U|!Thenable.<U>)} onRejected\n\t * @return {!Promise.<U>}\n\t */\n\tthen<U>(onFulfilled?: (value: T) => Thenable<U>, onRejected?: (reason: any) => U | Thenable<U>): Promise<U>;\n\n\t/**\n\t * @param {?function(T):U} onFulfilled\n\t * @param {?function(*):(U|!Thenable.<U>)} onRejected\n\t * @return {!Promise.<U>}\n\t */\n\tthen<U>(onFulfilled?: (value: T) => U, onRejected?: (reason: any) => U | Thenable<U>): Promise<U>;\n\n\t/**\n\t * @param {function(*):(T|!Thenable.<T>)} onRejected\n\t * @return {!Promise.<T>}\n\t */\n\tcatch(onRejected?: (reason: any) => T | Thenable<T>): Promise<T>;\n}\n\n// Based on https://github.com/petkaantonov/bluebird/blob/1b1467b95442c12378d0ea280ede61d640ab5510/src/schedule.js\nconst enqueueJob: (callback: () => void) => void = (function () {\n\tconst MutationObserver = global.MutationObserver || global.WebkitMutationObserver;\n\tif (global.process !== undefined && typeof global.process.nextTick === \"function\") {\n\t\treturn (callback: () => void) => {\n\t\t\tglobal.process.nextTick(callback);\n\t\t};\n\t}\n\telse if (MutationObserver !== undefined) {\n\t\tconst pending: (() => void)[] = [];\n\t\tlet currentlyPending = false;\n\n\t\tconst div = document.createElement(\"div\");\n\n\t\tconst observer = new MutationObserver(() => {\n\t\t\tconst processing = pending.splice(0, pending.length);\n\n\t\t\tfor (const callback of processing) {\n\t\t\t\tcallback();\n\t\t\t}\n\n\t\t\tcurrentlyPending = false;\n\n\t\t\tif (pending.length > 0) {\n\t\t\t\tdiv.classList.toggle(\"foo\");\n\t\t\t\tcurrentlyPending = true;\n\t\t\t}\n\t\t});\n\n\t\tobserver.observe(div, { attributes: true });\n\n\t\treturn (callback: () => void) => {\n\t\t\tpending.push(callback);\n\n\t\t\tif (!currentlyPending) {\n\t\t\t\tdiv.classList.toggle(\"foo\");\n\t\t\t\tcurrentlyPending = true;\n\t\t\t}\n\t\t};\n\t}\n\telse {\n\t\treturn (callback: () => void) => setTimeout(callback, 0);\n\t}\n})();\n\n/**\n * Promise implementation for browsers that don't support it.\n *\n * @param {function(function(T|!Thenable.<T>), function(*))} executor\n */\nclass SimplePromise<T> {\n\tprivate _state: SimplePromiseState = SimplePromiseState.PENDING;\n\n\tprivate _fulfillReactions: FulfilledPromiseReaction<T, any>[] = [];\n\tprivate _rejectReactions: RejectedPromiseReaction<any>[] = [];\n\n\tprivate _fulfilledValue: T = null;\n\tprivate _rejectedReason: any = null;\n\n\tconstructor(executor: (resolve: (resolution: T | Thenable<T>) => void, reject: (reason: any) => void) => void) {\n\t\tif (typeof executor !== \"function\") {\n\t\t\tthrow new TypeError(`typeof executor !== \"function\"`);\n\t\t}\n\n\t\tconst { resolve, reject } = this._createResolvingFunctions();\n\t\ttry {\n\t\t\texecutor(resolve, reject);\n\t\t}\n\t\tcatch (ex) {\n\t\t\treject(ex);\n\t\t}\n\t}\n\n\t/**\n\t * @param {?function(T):(U|!Thenable.<U>)} onFulfilled\n\t * @param {?function(*):(U|!Thenable.<U>)} onRejected\n\t * @return {!Promise.<U>}\n\t */\n\tthen<U>(onFulfilled: (value: T) => U | Thenable<U>, onRejected: (reason: any) => U | Thenable<U>): Promise<U> {\n\t\tconst resultCapability = new DeferredPromise<U>();\n\n\t\tif (typeof onFulfilled !== \"function\") {\n\t\t\tonFulfilled = (value: T) => value as any as U;\n\t\t}\n\n\t\tif (typeof onRejected !== \"function\") {\n\t\t\tonRejected = (reason: any): U => { throw reason; };\n\t\t}\n\n\t\tconst fulfillReaction: FulfilledPromiseReaction<T, U> = {\n\t\t\tcapabilities: resultCapability,\n\t\t\thandler: onFulfilled,\n\t\t};\n\n\t\tconst rejectReaction: RejectedPromiseReaction<U> = {\n\t\t\tcapabilities: resultCapability,\n\t\t\thandler: onRejected,\n\t\t};\n\n\t\tswitch (this._state) {\n\t\t\tcase SimplePromiseState.PENDING:\n\t\t\t\tthis._fulfillReactions.push(fulfillReaction);\n\t\t\t\tthis._rejectReactions.push(rejectReaction);\n\t\t\t\tbreak;\n\n\t\t\tcase SimplePromiseState.FULFILLED:\n\t\t\t\tthis._enqueueFulfilledReactionJob(fulfillReaction, this._fulfilledValue);\n\t\t\t\tbreak;\n\n\t\t\tcase SimplePromiseState.REJECTED:\n\t\t\t\tthis._enqueueRejectedReactionJob(rejectReaction, this._rejectedReason);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn resultCapability.promise;\n\t}\n\n\t/**\n\t * @param {function(*):(T|!Thenable.<T>)} onRejected\n\t * @return {!Promise.<T>}\n\t */\n\tcatch(onRejected?: (reason: any) => T | Thenable<T>): Promise<T> {\n\t\treturn this.then(null, onRejected);\n\t}\n\n\t/**\n\t * @param {T|!Thenable.<T>} value\n\t * @return {!Promise.<T>}\n\t */\n\tstatic resolve<T>(value: T | Thenable<T>): Promise<T> {\n\t\tif (value instanceof SimplePromise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise<T>(resolve => resolve(value));\n\t}\n\n\t/**\n\t * @param {*} reason\n\t * @return {!Promise.<T>}\n\t */\n\tstatic reject<T>(reason: any): Promise<T> {\n\t\treturn new Promise<T>((/* ujs:unreferenced */ resolve, reject) => reject(reason));\n\t}\n\n\t/**\n\t * @param {!Array.<T|!Thenable.<T>>} values\n\t * @return {!Promise.<!Array.<T>>}\n\t */\n\tstatic all<T>(values: (T | Thenable<T>)[]): Promise<T[]> {\n\t\treturn new Promise<T[]>((resolve, reject) => {\n\t\t\tconst result: T[] = [];\n\n\t\t\tlet numUnresolved = values.length;\n\t\t\tif (numUnresolved === 0) {\n\t\t\t\tresolve(result);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvalues.forEach((value, index) => Promise.resolve(value).then(value => {\n\t\t\t\tresult[index] = value;\n\t\t\t\tnumUnresolved--;\n\n\t\t\t\tif (numUnresolved === 0) {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t}, reject));\n\t\t});\n\t}\n\n\t/**\n\t * @param {!Array.<T|!Thenable.<T>>} values\n\t * @return {!Promise.<T>}\n\t */\n\tstatic race<T>(values: (T | Thenable<T>)[]): Promise<T> {\n\t\treturn new Promise<T>((resolve, reject) => {\n\t\t\tfor (const value of values) {\n\t\t\t\tPromise.resolve(value).then(resolve, reject);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @return {{ resolve(T|!Thenable.<T>), reject(*) }}\n\t */\n\tprivate _createResolvingFunctions(): { resolve(resolution: T | Thenable<T>): void; reject(reason: any): void; } {\n\t\tlet alreadyResolved = false;\n\n\t\tconst resolve = (resolution: T | Thenable<T>): void => {\n\t\t\tif (alreadyResolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\talreadyResolved = true;\n\n\t\t\tif (resolution === this) {\n\t\t\t\tthis._reject(new TypeError(`resolution === this`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (resolution === null || (typeof resolution !== \"object\" && typeof resolution !== \"function\")) {\n\t\t\t\tthis._fulfill(resolution as T);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tvar then = (resolution as Thenable<T>).then;\n\t\t\t}\n\t\t\tcatch (ex) {\n\t\t\t\tthis._reject(ex);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof then !== \"function\") {\n\t\t\t\tthis._fulfill(resolution as T);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tenqueueJob(() => this._resolveWithThenable(resolution as Thenable<T>, then));\n\t\t};\n\n\t\tconst reject = (reason: any): void => {\n\t\t\tif (alreadyResolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\talreadyResolved = true;\n\n\t\t\tthis._reject(reason);\n\t\t};\n\n\t\treturn { resolve, reject };\n\t}\n\n\t/**\n\t * @param {!Thenable.<T>} thenable\n\t * @param {{function(this:!Thenable.<T>, function(T|!Thenable.<T>), function(*))}} then\n\t */\n\tprivate _resolveWithThenable(thenable: Thenable<T>, then: ThenableThen<T>): void {\n\t\tconst { resolve, reject } = this._createResolvingFunctions();\n\n\t\ttry {\n\t\t\tthen.call(thenable, resolve, reject);\n\t\t}\n\t\tcatch (ex) {\n\t\t\treject(ex);\n\t\t}\n\t}\n\n\t/**\n\t * @param {T} value\n\t */\n\tprivate _fulfill(value: T): void {\n\t\tconst reactions = this._fulfillReactions;\n\n\t\tthis._fulfilledValue = value;\n\t\tthis._fulfillReactions = [];\n\t\tthis._rejectReactions = [];\n\t\tthis._state = SimplePromiseState.FULFILLED;\n\n\t\tfor (const reaction of reactions) {\n\t\t\tthis._enqueueFulfilledReactionJob(reaction, value);\n\t\t}\n\t}\n\n\t/**\n\t * @param {*} reason\n\t */\n\tprivate _reject(reason: any): void {\n\t\tconst reactions = this._rejectReactions;\n\n\t\tthis._rejectedReason = reason;\n\t\tthis._fulfillReactions = [];\n\t\tthis._rejectReactions = [];\n\t\tthis._state = SimplePromiseState.REJECTED;\n\n\t\tfor (const reaction of reactions) {\n\t\t\tthis._enqueueRejectedReactionJob(reaction, reason);\n\t\t}\n\t}\n\n\t/**\n\t * @param {!FulfilledPromiseReaction.<T, *>} reaction\n\t * @param {T} value\n\t */\n\tprivate _enqueueFulfilledReactionJob(reaction: FulfilledPromiseReaction<T, any>, value: T): void {\n\t\tenqueueJob(() => {\n\t\t\tconst { capabilities: { resolve, reject }, handler } = reaction;\n\n\t\t\tlet handlerResult: any | Thenable<any>;\n\n\t\t\ttry {\n\t\t\t\thandlerResult = handler(value);\n\t\t\t}\n\t\t\tcatch (ex) {\n\t\t\t\treject(ex);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(handlerResult);\n\t\t});\n\t}\n\n\t/**\n\t * @param {!RejectedPromiseReaction.<*>} reaction\n\t * @param {*} reason\n\t */\n\tprivate _enqueueRejectedReactionJob(reaction: RejectedPromiseReaction<any>, reason: any): void {\n\t\tenqueueJob(() => {\n\t\t\tconst { capabilities: { resolve, reject }, handler } = reaction;\n\n\t\t\tlet handlerResult: any | Thenable<any>;\n\n\t\t\ttry {\n\t\t\t\thandlerResult = handler(reason);\n\t\t\t}\n\t\t\tcatch (ex) {\n\t\t\t\treject(ex);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(handlerResult);\n\t\t});\n\t}\n}\n\n/**\n * Set to the global implementation of Promise if the environment has one, else set to {@link ./utility/promise.SimplePromise}\n *\n * Can be set to a value using {@link libjass.configure}\n *\n * Set it to null to force {@link ./utility/promise.SimplePromise} to be used even if a global Promise is present.\n *\n * @type {function(new:Promise)}\n */\nexport var Promise: {\n\tnew <T>(init: (resolve: (value: T | Thenable<T>) => void, reject: (reason: any) => void) => void): Promise<T>;\n\tprototype: Promise<any>;\n\tresolve<T>(value: T | Thenable<T>): Promise<T>;\n\treject<T>(reason: any): Promise<T>;\n\tall<T>(values: (T | Thenable<T>)[]): Promise<T[]>;\n\trace<T>(values: (T | Thenable<T>)[]): Promise<T>;\n} = global.Promise || SimplePromise;\n\ninterface FulfilledPromiseReaction<T, U> {\n\t/** @type {!libjass.DeferredPromise.<U>} */\n\tcapabilities: DeferredPromise<U>;\n\n\t/**\n\t * @param {T} value\n\t * @return {U|!Thenable.<U>}\n\t */\n\thandler(value: T): U | Thenable<U>;\n}\n\ninterface RejectedPromiseReaction<U> {\n\t/** @type {!libjass.DeferredPromise.<U>} */\n\tcapabilities: DeferredPromise<U>;\n\n\t/**\n\t * @param {*} reason\n\t * @return {U|!Thenable.<U>}\n\t */\n\thandler(reason: any): U | Thenable<U>;\n}\n\n/**\n * The state of the {@link ./utility/promise.SimplePromise}\n */\nenum SimplePromiseState {\n\tPENDING = 0,\n\tFULFILLED = 1,\n\tREJECTED = 2,\n}\n\n/**\n * Sets the Promise implementation used by libjass to the provided one. If null, {@link ./utility/promise.SimplePromise} is used.\n *\n * @param {?function(new:Promise)} value\n */\nexport function setImplementation(value: typeof Promise): void {\n\tif (value !== null) {\n\t\tPromise = value;\n\t}\n\telse {\n\t\tPromise = SimplePromise;\n\t}\n}\n\n/**\n * A deferred promise.\n */\nexport class DeferredPromise<T> {\n\tprivate _promise: Promise<T>;\n\n\t/**\n\t * @type {function(T|!Thenable.<T>)}\n\t */\n\tresolve: (value: T | Thenable<T>) => void;\n\n\t/**\n\t * @type {function(*)} reason\n\t */\n\treject: (reason: any) => void;\n\n\tconstructor() {\n\t\tthis._promise = new Promise<T>((resolve, reject) => {\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tresolve: { value: resolve, enumerable: true },\n\t\t\t\treject: { value: reject, enumerable: true },\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @type {!Promise.<T>}\n\t */\n\tget promise(): Promise<T> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * Returns a promise that resolves to the first (in iteration order) promise that fulfills, and rejects if all the promises reject.\n *\n * @param {!Array.<!Promise.<T>>} promises\n * @return {!Promise.<T>}\n */\nexport function first<T>(promises: Promise<T>[]): Promise<T> {\n\treturn first_rec(promises, []);\n}\n\n/**\n * @param {!Array.<!Promise.<T>>} promises\n * @param {!Array.<*>} previousRejections\n * @return {!Promise.<T>}\n */\nfunction first_rec<T>(promises: Promise<T>[], previousRejections: any[]): Promise<T> {\n\tif (promises.length === 0) {\n\t\treturn Promise.reject(previousRejections);\n\t}\n\n\tconst [head, ...tail] = promises;\n\treturn head.catch(reason => first_rec(tail, previousRejections.concat(reason)));\n}\n\n/**\n * Returns a promise that resolves to the first (in time order) promise that fulfills, and rejects if all the promises reject.\n *\n * @param {!Array.<!Promise.<T>>} promises\n * @return {!Promise.<T>}\n */\nexport function any<T>(promises: Promise<T>[]): Promise<T> {\n\treturn new Promise<T>((resolve, reject) =>\n\t\tPromise.all<any>(promises.map(promise => promise.then(resolve, reason => reason))).then(reject));\n}\n\n/**\n * Returns a promise that runs the given callback when the promise has resolved regardless of whether it fulfilled or rejected.\n *\n * @param {!Promise.<T>} promise\n * @param {function()} body\n * @return {!Promise.<T>}\n */\nexport function lastly<T>(promise: Promise<T>, body: () => void): Promise<T> {\n\treturn promise.then<any>(value => {\n\t\tbody();\n\t\treturn value;\n\t}, reason => {\n\t\tbody();\n\t\tthrow reason;\n\t});\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare const global: {\n\tMap?: typeof Map;\n};\n\nexport interface Map<K, V> {\n\t/**\n\t * @param {K} key\n\t * @return {?V}\n\t */\n\tget(key: K): V;\n\n\t/**\n\t * @param {K} key\n\t * @return {boolean}\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * @param {K} key\n\t * @param {V} value\n\t * @return {libjass.Map.<K, V>} This map\n\t */\n\tset(key: K, value?: V): Map<K, V>;\n\n\t/**\n\t * @param {K} key\n\t * @return {boolean} true if the key was present before being deleted, false otherwise\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t */\n\tclear(): void;\n\n\t/**\n\t * @param {function(V, K, libjass.Map.<K, V>)} callbackfn A function that is called with each key and value in the map.\n\t * @param {*} thisArg\n\t */\n\tforEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * @type {number}\n\t */\n\tsize: number;\n}\n\n/**\n * Map implementation for browsers that don't support it. Only supports keys which are of Number or String type, or which have a property called \"id\".\n *\n * Keys and values are stored as properties of an object, with property names derived from the key type.\n *\n * @param {!Array.<!Array.<*>>=} iterable Only an array of elements (where each element is a 2-tuple of key and value) is supported.\n */\nclass SimpleMap<K, V> {\n\tprivate _keys: { [key: string]: K };\n\tprivate _values: { [key: string]: V };\n\tprivate _size: number;\n\n\tconstructor(iterable?: [K, V][]) {\n\t\tthis.clear();\n\n\t\tif (iterable === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Array.isArray(iterable)) {\n\t\t\tthrow new Error(\"Non-array iterables are not supported by the SimpleMap constructor.\");\n\t\t}\n\n\t\tfor (const element of iterable) {\n\t\t\tthis.set(element[0], element[1]);\n\t\t}\n\t}\n\n\t/**\n\t * @param {K} key\n\t * @return {?V}\n\t */\n\tget(key: K): V {\n\t\tconst property = this._keyToProperty(key);\n\n\t\tif (property === null) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._values[property];\n\t}\n\n\t/**\n\t * @param {K} key\n\t * @return {boolean}\n\t */\n\thas(key: K): boolean {\n\t\tconst property = this._keyToProperty(key);\n\n\t\tif (property === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn property in this._keys;\n\t}\n\n\t/**\n\t * @param {K} key\n\t * @param {V} value\n\t * @return {libjass.Map.<K, V>} This map\n\t */\n\tset(key: K, value: V): Map<K, V> {\n\t\tconst property = this._keyToProperty(key);\n\n\t\tif (property === null) {\n\t\t\tthrow new Error(\"This Map implementation only supports Number and String keys, or keys with an id property.\");\n\t\t}\n\n\t\tif (!(property in this._keys)) {\n\t\t\tthis._size++;\n\t\t}\n\n\t\tthis._keys[property] = key;\n\t\tthis._values[property] = value;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {K} key\n\t * @return {boolean} true if the key was present before being deleted, false otherwise\n\t */\n\tdelete(key: K): boolean {\n\t\tconst property = this._keyToProperty(key);\n\n\t\tif (property === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst result = property in this._keys;\n\n\t\tif (result) {\n\t\t\tdelete this._keys[property];\n\t\t\tdelete this._values[property];\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t */\n\tclear(): void {\n\t\tthis._keys = Object.create(null);\n\t\tthis._values = Object.create(null);\n\t\tthis._size = 0;\n\t}\n\n\t/**\n\t * @param {function(V, K, libjass.Map.<K, V>)} callbackfn A function that is called with each key and value in the map.\n\t * @param {*} thisArg\n\t */\n\tforEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void {\n\t\tfor (const property of Object.keys(this._keys)) {\n\t\t\tcallbackfn.call(thisArg, this._values[property], this._keys[property], this);\n\t\t}\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * Converts the given key into a property name for the internal map.\n\t *\n\t * @param {K} key\n\t * @return {?string}\n\t */\n\tprivate _keyToProperty(key: K): string {\n\t\tif (typeof key === \"number\") {\n\t\t\treturn `#${ key }`;\n\t\t}\n\n\t\tif (typeof key === \"string\") {\n\t\t\treturn `'${ key }`;\n\t\t}\n\n\t\tif ((key as any).id !== undefined) {\n\t\t\treturn `!${ (key as any).id }`;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n/**\n * Set to the global implementation of Map if the environment has one, else set to {@link ./utility/map.SimpleMap}\n *\n * Can be set to a value using {@link libjass.configure}\n *\n * Set it to null to force {@link ./utility/map.SimpleMap} to be used even if a global Map is present.\n *\n * @type {function(new:Map, !Array.<!Array.<*>>=)}\n */\nexport var Map: {\n\tnew <K, V>(iterable?: [K, V][]): Map<K, V>;\n\tprototype: Map<any, any>;\n} = global.Map || SimpleMap;\n\nif (typeof Map.prototype.forEach !== \"function\" || (() => {\n\ttry {\n\t\treturn new Map([[1, \"foo\"], [2, \"bar\"]]).size !== 2;\n\t}\n\tcatch (ex) {\n\t\treturn true;\n\t}\n})()) {\n\tMap = SimpleMap;\n}\n\n/**\n * Sets the Map implementation used by libjass to the provided one. If null, {@link ./utility/map.SimpleMap} is used.\n *\n * @param {?function(new:Map, !Array.<!Array.<*>>=)} value\n */\nexport function setImplementation(value: typeof Map): void {\n\tif (value !== null) {\n\t\tMap = value;\n\t}\n\telse {\n\t\tMap = SimpleMap;\n\t}\n}\n","/**\n * libjass\n *\n * https://github.com/Arnavion/libjass\n *\n * Copyright 2013 Arnav Singh\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare const global: {\n\tSet?: typeof Set;\n};\n\nexport interface Set<T> {\n\t/**\n\t * @param {T} value\n\t * @return {libjass.Set.<T>} This set\n\t */\n\tadd(value: T): Set<T>;\n\n\t/**\n\t */\n\tclear(): void;\n\n\t/**\n\t * @param {T} value\n\t * @return {boolean}\n\t */\n\thas(value: T): boolean;\n\n\t/**\n\t * @param {function(T, T, libjass.Set.<T>)} callbackfn A function that is called with each value in the set.\n\t * @param {*} thisArg\n\t */\n\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void;\n\n\t/**\n\t * @type {number}\n\t */\n\tsize: number;\n}\n\n/**\n * Set implementation for browsers that don't support it. Only supports Number and String elements.\n *\n * Elements are stored as properties of an object, with names derived from their type.\n *\n * @param {!Array.<T>=} iterable Only an array of values is supported.\n */\nclass SimpleSet<T> {\n\tprivate _elements: { [key: string]: T };\n\tprivate _size: number;\n\n\tconstructor(iterable?: T[]) {\n\t\tthis.clear();\n\n\t\tif (iterable === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!Array.isArray(iterable)) {\n\t\t\tthrow new Error(\"Non-array iterables are not supported by the SimpleSet constructor.\");\n\t\t}\n\n\t\tfor (const value of iterable) {\n\t\t\tthis.add(value);\n\t\t}\n\t}\n\n\t/**\n\t * @param {T} value\n\t * @return {libjass.Set.<T>} This set\n\t */\n\tadd(value: T): Set<T> {\n\t\tconst property = this._toProperty(value);\n\n\t\tif (property === null) {\n\t\t\tthrow new Error(\"This Set implementation only supports Number and String values.\");\n\t\t}\n\n\t\tif (!(property in this._elements)) {\n\t\t\tthis._size++;\n\t\t}\n\n\t\tthis._elements[property] = value;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t */\n\tclear(): void {\n\t\tthis._elements = Object.create(null);\n\t\tthis._size = 0;\n\t}\n\n\t/**\n\t * @param {T} value\n\t * @return {boolean}\n\t */\n\thas(value: T): boolean {\n\t\tconst property = this._toProperty(value);\n\n\t\tif (property === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn property in this._elements;\n\t}\n\n\t/**\n\t * @param {function(T, T, libjass.Set.<T>)} callbackfn A function that is called with each value in the set.\n\t * @param {*} thisArg\n\t */\n\tforEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void {\n\t\tfor (const property of Object.keys(this._elements)) {\n\t\t\tconst element = this._elements[property];\n\t\t\tcallbackfn.call(thisArg, element, element, this);\n\t\t}\n\t}\n\n\t/**\n\t * @type {number}\n\t */\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\t/**\n\t * Converts the given value into a property name for the internal map.\n\t *\n\t * @param {T} value\n\t * @return {?string}\n\t */\n\tprivate _toProperty(value: T): string {\n\t\tif (typeof value === \"number\") {\n\t\t\treturn `#${ value }`;\n\t\t}\n\n\t\tif (typeof value === \"string\") {\n\t\t\treturn `'${ value }`;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n/**\n * Set to the global implementation of Set if the environment has one, else set to {@link ./utility/set.SimpleSet}\n *\n * Can be set to a value using {@link libjass.configure}\n *\n * Set it to null to force {@link ./utility/set.SimpleSet} to be used even if a global Set is present.\n *\n * @type {function(new:Set, !Array.<T>=)}\n */\nexport var Set: {\n\tnew <T>(iterable?: T[]): Set<T>;\n\tprototype: Set<any>;\n} = global.Set || SimpleSet;\n\nif (typeof Set.prototype.forEach !== \"function\" || (() => {\n\ttry {\n\t\treturn new Set([1, 2]).size !== 2;\n\t}\n\tcatch (ex) {\n\t\treturn true;\n\t}\n})()) {\n\tSet = SimpleSet;\n}\n\n/**\n * Sets the Set implementation used by libjass to the provided one. If null, {@link ./utility/set.SimpleSet} is used.\n *\n * @param {?function(new:Set, !Array.<T>=)} value\n */\nexport function setImplementation(value: typeof Set): void {\n\tif (value !== null) {\n\t\tSet = value;\n\t}\n\telse {\n\t\tSet = SimpleSet;\n\t}\n}\n"]}